<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[HinetPy: Hi-net 数据申请与处理模块]]></title>
      <url>http://seisman.info/hinetpy.html</url>
      <content type="html"><![CDATA[<p>HinetPy 是一个用于从 NIED Hi-net 网站下载地震波形数据并进行数据格式转换的Python模块。</p>
<ul>
<li>项目主页： <a href="https://github.com/seisman/HinetPy" class="uri" target="_blank" rel="external">https://github.com/seisman/HinetPy</a></li>
<li>官方文档： <a href="https://seisman.github.io/HinetPy" class="uri" target="_blank" rel="external">https://seisman.github.io/HinetPy</a></li>
</ul>
<p>本文仅做简要介绍，详情请阅读官方文档。</p>
<h2 id="安装">安装</h2>
<p>HinetPy 只支持Python 3.4 及以上的版本，不熟悉 Python 的用户建议直接安装 anaconda。</p>
<p>安装 HinetPy 很简单:</p>
<pre><code>pip install HinetPy</code></pre>
<p>除此之外，还需要安装 Hi-net 提供的 win32tools。</p>
<pre><code>tar -xvf win32tools.tar.gz
cd win32tools/
make
cp catwin32.src/catwin32 win2sac.src/win2sac $HOME/bin/</code></pre>
<h2 id="使用">使用</h2>
<p>Python 以易读易用出名，HinetPy 也尽量做到易读易用。</p>
<p>下面的示例展示了如何从Hi-net申请 2010-01-01T00:00 （日本时间，GMT+0900）开始的20分钟的连续波形数据。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> HinetPy <span class="keyword">import</span> Client, win32</div><div class="line"></div><div class="line"><span class="comment"># 根据你的 Hi-net 账户信息修改 username, password</span></div><div class="line">client = Client(<span class="string">"username"</span>, <span class="string">"password"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 开始申请数据</span></div><div class="line"><span class="comment"># '0101' 是 Hi-net 的代号</span></div><div class="line">data, ctable = client.get_waveform(<span class="string">'0101'</span>, <span class="string">'201001010000'</span>, <span class="number">20</span>)</div><div class="line"></div><div class="line"><span class="comment"># 等待数据的申请和下载，一般需要几分钟时间</span></div><div class="line"></div><div class="line"><span class="comment"># 下载完成会在当前目录下生成cnt格式的数据文件和channle table文件</span></div><div class="line"><span class="comment"># 0101_201001010000_20.cnt 0101_20100101.ch</span></div><div class="line"></div><div class="line"><span class="comment"># 将 cnt 数据转换为 SAC 格式</span></div><div class="line">win32.extract_sac(data, ctable)</div><div class="line"></div><div class="line"><span class="comment"># 从 channel table 中提取令极点信息并保存为 SAC PZ 格式</span></div><div class="line">win32.extract_pz(ctable)</div></pre></td></tr></table></figure>
<p>搞定收工。</p>
<p>更多功能及选项见官方文档。欢迎报BUG，也欢迎提Feature Request。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Hinet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[计算任意深度处下表面反射波走时]]></title>
      <url>http://seisman.info/calculate-travel-time-of-deep-mantle-underside-reflection.html</url>
      <content type="html"><![CDATA[<p>地震学中的某些研究会用到 SS 前驱波的理论走时，比如常见的 <code>S410S</code>、<code>S660S</code>。 进一步推广到任意深度的下表面反射震相，比如 <code>S1000S</code> 代表在1000 km深度处的界面的下表面反射的S波，比如 <code>P1200P</code> 代表在1200 km深度处的界面的下表面反射的P波。</p>
<p>下图给出了 <code>S660S</code> 也就是 <code>S^660S</code> 的射线路径，以便于非相关方向读者的理解。</p>
<div class="figure">
<img src="/images/20170331.png">

</div>
<p>本文介绍用 TauP 计算地幔下表面反射震相的走时。</p>
<a id="more"></a>
<p>使用 TauP 计算这类震相的走时时，有两点注意事项：</p>
<ol style="list-style-type: decimal">
<li>TauP 为了避免震相名的多义性，有自己的一套定义规则。比如地震学中所说的 <code>S410S</code>，在 TauP 中被称作 <code>S^410S</code>， 这里的 <code>^</code> 很形象地表示S波在410km间断面的下表面反射。详情见TauP官方文档。</li>
<li>以 <code>S^410S</code> 为例，若速度模型的410界面的实际深度在408km，则TauP返回的实际上是 <code>S^408S</code> 的走时。这样的设计有好有坏，自行体会。</li>
</ol>
<p>下面以 PREM 模型下的 <code>S^1000S</code> 震相为例。</p>
<p>直观的想法是:</p>
<pre><code>$ taup_time -mod prem -h 400 -deg 150 -ph S^410S,S^600S,S^1000S

Model: prem
Distance   Depth   Phase     Travel    Ray Param  Takeoff  Incident  Purist    Purist
  (deg)     (km)   Name      Time (s)  p (s/deg)   (deg)    (deg)   Distance   Name
-------------------------------------------------------------------------------------
  150.00   400.0   S^600S    2240.91    10.552     29.96    17.68   150.00   * S^670S
  150.00   400.0   S^1000S   2240.91    10.552     29.96    17.68   150.00   * S^670S
  150.00   400.0   S^410S    2325.64    10.758     30.61    18.03   150.00   * S^400S</code></pre>
<p>算出来却发现 <code>S^1000S</code> 的走时与 <code>S^660S</code> 的走时完全相同，这显然是不对的。错误的原因在上面的注意事项2中已经解释了。</p>
<p>错误的根本原因是因为PREM模型的1000 km处并没有速度间断面。解决办法很简单，在PREM模型的1000km处加一个速度间断面即可。</p>
<p>第一步，复制标准速度模型:</p>
<pre><code>cp /opt/TauP-2.4.2/StdModels/prem.nd prem1000.nd</code></pre>
<p>第二步，在 prem1000.nd 模型的 1000 km 处加一个速度间断面。原速度模型的1000 km附近速度为:</p>
<pre><code> 971.00    11.41560   6.37813   4.56307     743.0     312.0
1071.00    11.57828   6.44232   4.62129     750.0     312.0</code></pre>
<p>修改为:</p>
<pre><code> 971.00    11.41560   6.37813   4.56307     743.0     312.0
1000.00    11.46278   6.39674   4.57995     746.0     312.0
1000.00    11.46279   6.39675   4.57996     746.0     312.0
1071.00    11.57828   6.44232   4.62129     750.0     312.0</code></pre>
<p>注意，这里在1000 km处加了两行，且两行的参数值有微小的区别。</p>
<p>使用新模型计算的结果:</p>
<pre><code>$ taup_time -mod prem1000 -h 400 -deg 150 -ph S^410S,S^600S,S^1000S

Model: prem1000
Distance   Depth   Phase     Travel    Ray Param  Takeoff  Incident  Purist    Purist
  (deg)     (km)   Name      Time (s)  p (s/deg)   (deg)    (deg)   Distance   Name
-------------------------------------------------------------------------------------
  150.00   400.0   S^1000S   2162.67    10.203     28.88    17.08   150.00   = S^1000S
  150.00   400.0   S^600S    2240.91    10.552     29.96    17.68   150.00   * S^670S
  150.00   400.0   S^410S    2325.64    10.758     30.61    18.03   150.00   * S^400S</code></pre>
<p>整个过程也很容易写脚本实现，这样就可以动态地实现计算任意深度处下表面反射震相的走时了。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 走时 </tag>
            
            <tag> TauP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地震学中的坐标系]]></title>
      <url>http://seisman.info/coordinate-systems-in-seismology.html</url>
      <content type="html"><![CDATA[<p>地震学中不同的作者定义了不同的坐标系，搞清楚各个坐标系的定义可以避免使用过程中出现错误。</p>
<a id="more"></a>
<h2 id="三分量波形数据坐标系">三分量波形数据坐标系</h2>
<p>通常，地震仪记录的是ZNE方向的三分量波形数据。实际研究中，经常会需要旋转到ZRT坐标系或者LQT坐标系。下面介绍一下各个坐标系的定义。</p>
<h3 id="nez坐标系">NEZ坐标系</h3>
<p>NEZ 是最简单也是最常见的坐标系。</p>
<ul>
<li>N: 正北方向为正方向</li>
<li>E: 正东方向为正方向</li>
<li>Z: 垂直向上为正方向</li>
</ul>
<p>对于 Z 方向，可能存在向上为正还是向下为正的问题。SEED标准中规定垂直向上为正方向，详见 SEED Reference Manual v2.4 P68 中的说明。</p>
<p>因而NEZ构成了一个左手坐标系。</p>
<h3 id="rtz坐标系">RTZ坐标系</h3>
<p>RTZ的定义如下：</p>
<ul>
<li>R: R方向定义为从震中位置沿着大圆路径指向台站的方向</li>
<li>T: T方向垂直于R和Z方向所构成的平面，且选取的T轴正方向使得RTZ构成了左手坐标系</li>
<li>Z: 垂直向上为正方向</li>
</ul>
<p>如图所示:</p>
<div class="figure">
<img src="http://service.iris.edu/media/webservicedoc/irisws/rotation/1/zrt.png">

</div>
<p>NEZ坐标系到RTZ坐标系的转换公式为</p>
<p><span class="math inline">\(\begin{bmatrix}R\\T\end{bmatrix}\)</span> = <span class="math inline">\(\begin{bmatrix}\cos\alpha &amp; \sin\alpha \\-\sin\alpha &amp; \cos\alpha\end{bmatrix}\)</span><span class="math inline">\(\begin{bmatrix}N\\E\end{bmatrix}\)</span></p>
<p>其中 <span class="math inline">\(\alpha\)</span> 是 R 方向与 N 方向的夹角，也就是反方位角加180度。</p>
<h3 id="lqt坐标系">LQT坐标系</h3>
<p>LQT坐标系的定义如下：</p>
<ul>
<li>L: P波偏振方向</li>
<li>Q: SV波偏振方向</li>
<li>T: SH波偏振方向，与 RTZ 坐标系中T的定义相同</li>
</ul>
<table>
<thead>
<tr class="header">
<th align="center">垂直面视角</th>
<th align="center">水平面视角</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center"><img src="http://service.iris.edu/media/webservicedoc/irisws/rotation/1/lqt.png"></td>
<td align="center"><img src="http://service.iris.edu/media/webservicedoc/irisws/rotation/1/lqt_map.png"></td>
</tr>
</tbody>
</table>
<p>可以先将NEZ坐标系转换为RTZ坐标系，再根据P波入射角将RZ两个方向旋转到LQ方向即可。当然也可以直接通过三维旋转将NEZ旋转到LQT坐标系。</p>
<h2 id="地震矩张量张量坐标系">地震矩张量张量坐标系</h2>
<p>地震矩张量是一个3X3的矩阵，通常写为</p>
<p><span class="math inline">\(\begin{bmatrix} Mxx &amp; Mxy &amp; Mxz \\ Myx &amp; Myy &amp; Myz \\ Mzx &amp; Mzy &amp; Mzz \end{bmatrix}\)</span></p>
<p>由于具有对称性，因而地震矩张量只有6个独立的量，即</p>
<p><span class="math inline">\(\begin{bmatrix} Mxx &amp; Mxy &amp; Mxz \\ Mxy &amp; Myy &amp; Myz \\ Mxz &amp; Myz &amp; Mzz \end{bmatrix}\)</span></p>
<p>有时候会将这6个量写成数组而不是矩阵的形式，通常顺序是这样的：</p>
<pre><code>Mxx Myy Mzz Mxy Mxz Myz</code></pre>
<p>在不同的坐标系下，XYZ分别代表不同的方向。</p>
<h3 id="ned-坐标系">NED 坐标系</h3>
<p>NED 坐标系在 Aki &amp; Richards (1980) 中有详细定义，即：</p>
<ul>
<li>X=North</li>
<li>Y=East</li>
<li>Z=Down</li>
</ul>
<p>如下图所示:</p>
<div class="figure">
<img src="/images/2014050103.jpg">

</div>
<h3 id="usertp-坐标系">USE/RTP 坐标系</h3>
<p>USE 坐标系的定义为:</p>
<ul>
<li>X=Upper</li>
<li>Y=South</li>
<li>Z=East</li>
</ul>
<p>USE 坐标系还有很多别名，比如：</p>
<ul>
<li><p>GlobalCMT 所使用的坐标系称为RTP坐标系，RTP坐标系其实就是USE坐标系。</p>
<ul>
<li>X=R=Upper</li>
<li>Y=T=South</li>
<li>Z=P=East</li>
</ul></li>
<li>在GMT的psmeca中，RTP坐标系也称为RTF坐标系</li>
<li><p>在Aki&amp;Richards(1980)中，RTP坐标系写作 <span class="math inline">\(r\Delta\phi\)</span> 坐标系</p></li>
</ul>
<p>Aki&amp;Richards (1980) P118 给出了USE/RTP坐标系与NED坐标系之间的转换关系：</p>
<p><span class="math inline">\(\begin{bmatrix} Mrr &amp; Mrt &amp; Mrp \\ Mtr &amp; Mtt &amp; Mtp \\ Mpr &amp; Mpt &amp; Mpp \end{bmatrix}\)</span>=<span class="math inline">\(\begin{bmatrix} Mdd &amp; Mdn &amp; -Mde \\ Mnd &amp; Mnn &amp; -Mne \\ -Med &amp; -Men &amp; Mee \end{bmatrix}\)</span></p>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li>http://service.iris.edu/irisws/rotation/docs/1/help/</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 坐标系 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SOD 入门教程]]></title>
      <url>http://seisman.info/sod-notes.html</url>
      <content type="html"><![CDATA[<p>SOD，全称是 Standing Order for Data，是一个可以自动筛选、下载以及预处理地震数据的工具，其具有高度可定制的特点，可以满足日常科研中数据申请的几乎全部需求。</p>
<ul>
<li>官方网站： <a href="http://www.seis.sc.edu/sod/" class="uri" target="_blank" rel="external">http://www.seis.sc.edu/sod/</a></li>
<li>源码： <a href="https://github.com/crotwell/sod" class="uri" target="_blank" rel="external">https://github.com/crotwell/sod</a></li>
<li>源码语言： Java</li>
<li>最新版本： 3.2.8</li>
</ul>
<p>本文是 SOD 的入门教程，目的是使读者对 SOD 有初步的认识，详细教程及用法见官方网站。</p>
<a id="more"></a>
<h2 id="why-sod">Why SOD?</h2>
<p>从 IRIS 上申请数据的工具有很多，比如 Wilber、BREQ_FAST，为什么要用 SOD 呢? SOD 有哪些优势呢？</p>
<p>先回顾一下申请地震波形数据的一般流程：</p>
<ol style="list-style-type: decimal">
<li>获取完整的地震目录，并根据实际需求筛选出自己需要的地震目录</li>
<li>获取台站列表，根据需求对震中距、方位角等进行筛选</li>
<li>根据发震时刻、震中距、震相走时等信息确定要申请的波形数据的起始、结束时间</li>
<li>申请数据</li>
<li>下载数据</li>
<li>数据解压以及预处理</li>
</ol>
<p>以上提到的每个步骤都需要用户写一个以上的脚本来实现，如果需求改变，则可能需要修改多个脚本，总的来说是件很麻烦的事情。</p>
<p>SOD 的优势如下：</p>
<ol style="list-style-type: decimal">
<li>只需要一个配置文件（SOD中称为recipe）即可完成上面提到的全部步骤</li>
<li>灵活的地震筛选规则：</li>
</ol>
<ul>
<li>可以在 IRIS/USGS 提供的地震目录的基础上根据发震时刻、深度、震级、震源所在区域等条件进行筛选</li>
<li>可以由用户自行提供地震目录（需要满足 SOD 对地震目录的格式要求）</li>
<li>可以构建虚拟地震以申请连续波形数据</li>
<li>…</li>
</ul>
<ol start="3" style="list-style-type: decimal">
<li>灵活的台站筛选规则：</li>
</ol>
<ul>
<li>可以选择一个或多个指定的台网、台站或通道</li>
<li>可以筛选在某个特定点的特定距离、方位角、反方位角内的台站</li>
<li>可以筛选某个区域内的台站</li>
<li>可以下载指定通道的仪器响应文件（SAC PZ 和 RESP）</li>
<li>…</li>
</ul>
<ol start="4" style="list-style-type: decimal">
<li>灵活的波形筛选规则：</li>
</ol>
<ul>
<li>仅下载震中距、方位角、反方位角满足条件的数据</li>
<li>仅当某个震相存在时才下载该台站的数据（比如仅当震中距大于115时才有PKIKP震相）</li>
<li>仅当地震与台站的连线中点位于某个区域是才下载数据（比如想要用PcP研究某个特定区域的核幔边界结构）</li>
<li>仅当指定震相的前后多少秒内没有其他震相干扰时才下载数据</li>
<li>灵活的时窗截取规则，可自动计算理论到时以设置数据窗</li>
<li>可直接生成 BREQ_FAST 文件以通过邮件方式申请数据</li>
<li>以 miniSEED、SAC、ASCII、wav 格式将数据保存到磁盘中</li>
<li>…</li>
</ul>
<ol start="5" style="list-style-type: decimal">
<li>数据并行下载，速度快无延迟</li>
<li>将数据写入磁盘前/后，可对数据进行常见的数据预处理：</li>
</ol>
<ul>
<li>rmean, rtrend, taper, merge</li>
<li>decimate</li>
<li>differentiate, integrate</li>
<li>filter, transfer</li>
<li>phaseCut</li>
<li>…</li>
</ul>
<p>SOD 除了上面提到的功能/优点外，还有一个优点：入门很容易，别人写的 recipe 一看就懂，改起来也简单，但一个很明显的缺点是：自己从头写一个 recipe 很困难，因为 SOD 其实是个很复杂的东西。</p>
<p>为了尽可能解决这个问题，我创建了 <a href="https://github.com/seisman/SODrecipes" target="_blank" rel="external">SODrecipes</a> 项目，其中收集整理了 SOD 的常见用法，用户可以通过阅读、修改和使用这些 recipe 片段来理解 SOD 的用法。也欢迎更多用户贡献自己的recipe。</p>
<h2 id="安装-sod">安装 SOD</h2>
<p>由于 SOD 是 Java 写的，因而可以跨平台直接使用。</p>
<ol style="list-style-type: decimal">
<li><p>下载:</p>
<pre><code>$ wget http://www.seis.sc.edu/downloads/sod/3.2.8/sod-3.2.8.tgz</code></pre></li>
<li><p>解压并安装</p>
<pre><code>$ tar -xvf sod-3.2.8.tgz
$ sudo mv sod-3.2.8 /usr/local</code></pre></li>
<li><p>修改环境变量 PATH</p>
<pre><code>$ echo &#39;export PATH=${PATH}:/usr/local/sod-3.2.8/bin&#39;&gt;&gt; ~/.bashrc</code></pre></li>
<li><p>重启终端，并执行 <code>sod -h</code> 以确认 SOD 是否正常安装</p></li>
</ol>
<h2 id="sod-的使用">SOD 的使用</h2>
<p>SOD 的 bin 目录下提供了8个命令：</p>
<ul>
<li>sod</li>
<li>psod</li>
<li>bgsod</li>
<li>find_events</li>
<li>find_stations</li>
<li>find_channels</li>
<li>find_responses</li>
<li>find_seismograms</li>
</ul>
<p>本文只介绍命令 <code>sod</code> 的用法。</p>
<h3 id="命令行语法">命令行语法</h3>
<p>sod 的命令行语法很简单，直接</p>
<pre><code>sod -f recipe.xml</code></pre>
<p>其中 <code>recipe.xml</code> 是 sod 的配置文件。sod 的配置文件称为 recipe，是一个 xml 格式的纯文本文件，其中定义了地震数据筛选的一系列规则。</p>
<h3 id="运行示例">运行示例</h3>
<p>执行 <code>sod --demo -r &gt; demo.xml</code> 会生成一个名为 <code>demo.xml</code> 的 recipe 示例，用编辑器查看其内容以对 recipe 的结构和格式有个初步印象。</p>
<p>执行以下命令则会运行该示例:</p>
<pre><code>$ sod -f demo.xml
Congratulations, valid recipe.
Fiji region (-20.6, -177.7) 378 km 2003/01/04 05:15:03 UTC 6.5 mwc
...
Channel: II.AAK.00.BHE
...
Got 1 seismograms for II.RPN.00.BHN for eq on 2003/01/09 02:50:45 UTC
...</code></pre>
<p>输出中的 <code>Congratulations, valid recipe.</code> 表明当前 recipe 可以使用，紧接着会输出事件信息、通道信息以及获取地震波形的信息。下载的地震波形数据保存在 <code>seismograms</code> 目录下。</p>
<h3 id="sod-数据库文件">SOD 数据库文件</h3>
<p>每次执行 sod 时，sod 都会在当前目录下生成一个数据库文件夹 <code>SodDb</code> 以及一些 log 文件。数据库文件夹 <code>SodDb</code> 的数据库文件中包含了单次 sod 运行时的全部信息，比如选中了哪些事件、哪些台站以及事件台站对所对应的波形，也包含了哪些数据已经下载哪些数据尚未下载的信息。</p>
<p>SOD 数据库的主要作用是：若 sod 在下载数据过程中意外退出，可以重新执行 sod 命令，由于 sod 数据库中记录了哪些数据已经被下载，因而 sod 可以继续下载那些尚未被下载的数据，即实现断点续传的功能（注：实测中发现的确可以断点续传，但似乎在所有数据下载完成后程序无法正常退出）。</p>
<h2 id="recipe">recipe</h2>
<p>一个 SOD recipe 中包含了一系列规则以限定要申请的数据的范围。</p>
<h3 id="xml-格式简介">xml 格式简介</h3>
<p>SOD recipe 本质上是一个 xml 格式的文本文件。</p>
<p>XML 文档形成了一种“树”结构，它从“根部”开始，不断扩展到“枝叶”。一个简单的 XML 文件如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- this is a comment --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">child</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Child One<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">age</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">child</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">child</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Child Two<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>8<span class="tag">&lt;/<span class="name">age</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">child</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">printline</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></div></pre></td></tr></table></figure>
<p>其中：</p>
<ul>
<li><code>&lt;?xml version=&quot;1.0&quot;?&gt;</code> 是 XML 声明，其指定了 XML 的版本信息</li>
<li><code>&lt;root&gt;</code> 和 <code>&lt;/root&gt;</code> 是一对标签的开始标签和关闭标签，从开始标签到结束标签中的内容称之为元素</li>
<li>所有 XML 元素都必须有关闭标签</li>
<li>标签可以嵌套多层，但必须正确地嵌套</li>
<li>若某个标签中没有嵌套其他标签，则一对标签可以简写为 <code>&lt;tagName/&gt;</code> 的形式，例如 <code>&lt;printline/&gt;</code></li>
<li><code>&lt;!-- --&gt;</code> 用于注释</li>
<li>XML 标签是区分大小写的</li>
</ul>
<h3 id="sod-recipe-结构">sod recipe 结构</h3>
<p>SOD recipe 是 XML 格式的文件，其根标签为 <code>&lt;sod&gt;</code>，根标签下有五个直系子标签，分别是：</p>
<ul>
<li><code>properties</code>: SOD程序相关的属性配置（一般不用）</li>
<li><code>eventArm</code>: 事件筛选的规则</li>
<li><code>networkArm</code>: 台站/通道筛选的规则</li>
<li><code>waveformArm</code>: 确定波形的时间段，筛选、下载并处理波形数据</li>
<li><code>waveformVectorArm</code>: 处理三分量波形数据（不常用）</li>
</ul>
<p>通常只需要用到 <code>eventArm</code>、<code>networkArm</code> 和 <code>waveformArm</code>。显然， <code>eventArm</code> 和 <code>networkArm</code> 是互相独立的，而 <code>waveformArm</code> 则依赖于 <code>eventArm</code> 和 <code>networkArm</code>。</p>
<div class="figure">
<img src="http://www.seis.sc.edu/sod/images/documentation/tutorials/arm_overview.png" alt="recipe结构">
<p class="caption">recipe结构</p>
</div>
<p>因而，所有的 recipe 都符合如下基本结构：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">sod</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- sod 属性，很少使用 --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">eventArm</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- eventArm 全部内容 --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">eventArm</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">networkArm</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- networkArm 全部内容 --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">networkArm</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">waveformArm</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- waveformArm 全部内容 --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">waveformArm</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">waveformVectorArm</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- waveformVectorArm 全部内容 --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">waveformVectorArm</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">sod</span>&gt;</span></div></pre></td></tr></table></figure>
<p>下面会介绍 eventArm、networkArm 和 waveformArm 的写法和功能。</p>
<h3 id="eventarm">eventArm</h3>
<p>eventArm 的作用是定义一定的规则以筛选所需要的地震事件。</p>
<p>下面看一个 eventArm 的简单示例：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">sod</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">eventArm</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">fdsnEvent</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">originTimeRange</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">startTime</span>&gt;</span>2010-01-01T00:00:00.000Z<span class="tag">&lt;/<span class="name">startTime</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">endTime</span>&gt;</span>2011-01-01T00:00:00.000Z<span class="tag">&lt;/<span class="name">endTime</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">originTimeRange</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">magnitudeRange</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">min</span>&gt;</span>5.0<span class="tag">&lt;/<span class="name">min</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">max</span>&gt;</span>8.5<span class="tag">&lt;/<span class="name">max</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">magnitudeRange</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">originDepthRange</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">unit</span>&gt;</span>KILOMETER<span class="tag">&lt;/<span class="name">unit</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">min</span>&gt;</span>30<span class="tag">&lt;/<span class="name">min</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">originDepthRange</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">fdsnEvent</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">printlineEventProcess</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">CSVEventPrinter</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">filename</span>&gt;</span>events.csv<span class="tag">&lt;/<span class="name">filename</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">CSVEventPrinter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">eventArm</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">sod</span>&gt;</span></div></pre></td></tr></table></figure>
<p>在每个 Arm 内，SOD 会按照各个标签出现的先后顺序去执行相关操作。那么，如何去读一个recipe呢？其实很简单，由于整个XML文档是一个“树”结构，因而只要 <strong>一级一级读</strong> 即可。</p>
<p>以上面的例子为例， eventArm 的下一级标签有三个，SOD 会按照三个标签出现的顺序依次执行。三个标签是：</p>
<ul>
<li><code>fdsnEvent</code> 的作用是从 USGS 的 FDSN web service 中获取全部地震目录</li>
<li><code>printlineEventProcess</code> 输出地震目录中每个事件的信息</li>
<li><code>CSVEventPrinter</code> 将事件信息保存到CSV文件中</li>
</ul>
<p>读完了这一级标签后，再读下一级标签：</p>
<ul>
<li><code>fdsnEvent</code> 的下一级标签有： <code>originTimeRange</code>、<code>magnitudeRange</code>、<code>originDepthRange</code>， 分别用于限制地震的发震事件、震级和发震时刻。</li>
<li><code>CSVEventPrinter</code> 下一级标签 <code>filename</code> 则表明要将事件信息写到 <code>filename</code> 所指定的 CSV 文件中。</li>
</ul>
<p>eventArm 里可以放哪些标签？ <code>fdsnEvent</code> 标签里又可以嵌套哪些标签？这就是自己写 recipe 的难点，因为 SOD 的标签实在太多了。完整的标签列表在 <a href="http://www.seis.sc.edu/sod/ingredients/index.html" target="_blank" rel="external">Ingredient Listing</a> 中。</p>
<h3 id="networkarm">networkArm</h3>
<p>networkArm 用于筛选出需要的台站。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">sod</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">networkArm</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">fdsnStation</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">networkCode</span>&gt;</span>II<span class="tag">&lt;/<span class="name">networkCode</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">channelCode</span>&gt;</span>BH*<span class="tag">&lt;/<span class="name">channelCode</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">printlineChannelProcess</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">networkArm</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">sod</span>&gt;</span></div></pre></td></tr></table></figure>
<p>解释一下：</p>
<ul>
<li><code>fdsnStation</code> 是从 IRIS 上获取了全部的台站信息</li>
<li><code>networkCode</code> 从中筛选除了 II 台网</li>
<li><code>channelCode</code> 从中进一步筛选除了 BH* 通道</li>
</ul>
<p>最终筛选出了 II 台网所有 BH* 通道。</p>
<p>SOD中的Arm就像一个流水线，Arm中的每个标签就像一个质检员。首先获取所有的原材料，若材料满足标签所指定的条件，则进入流水线的下一步，否则会直接被丢弃。最终留下来的材料则是满足所有条件的材料。</p>
<h3 id="waveformarm">waveformArm</h3>
<p>在确定了地震事件和台站之后，就可以对二者进行组合，并进一步筛选所需要的波形数据。</p>
<div class="figure">
<img src="http://www.seis.sc.edu/sod/images/documentation/tutorials/waveform_arm.png" alt="waveformArm流程">
<p class="caption">waveformArm流程</p>
</div>
<p>waveformArm 相对比较复杂，其包含了如下几个步骤（对应上图中的1-6）：</p>
<ol style="list-style-type: decimal">
<li>根据事件台站信息对震中距、方位角进行筛选</li>
<li>根据地震发震时刻或者震相走时确定要申请的数据时间范围</li>
<li>向数据服务器发送请求，检查对应时间段内是否有数据</li>
<li>检查服务器的返回，确认是否存在数据</li>
<li>从服务器中获取数据</li>
<li>对数据进行预处理</li>
</ol>
<p>下面的示例展示了一个简单的 waveformArm:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">sod</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">eventArm</span>&gt;</span>eventArm同之前的示例，出于篇幅考虑，此处省略<span class="tag">&lt;/<span class="name">eventArm</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">networkArm</span>&gt;</span>networkArm同之前的示例，出于篇幅考虑，此处省略<span class="tag">&lt;/<span class="name">networkArm</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">waveformArm</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">distanceRange</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">unit</span>&gt;</span>DEGREE<span class="tag">&lt;/<span class="name">unit</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">min</span>&gt;</span>30<span class="tag">&lt;/<span class="name">min</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">max</span>&gt;</span>90<span class="tag">&lt;/<span class="name">max</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">distanceRange</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">phaseRequest</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">model</span>&gt;</span>prem<span class="tag">&lt;/<span class="name">model</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">beginPhase</span>&gt;</span>ttp<span class="tag">&lt;/<span class="name">beginPhase</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">beginOffset</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">unit</span>&gt;</span>SECOND<span class="tag">&lt;/<span class="name">unit</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>-120<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">beginOffset</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">endPhase</span>&gt;</span>tts<span class="tag">&lt;/<span class="name">endPhase</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">endOffset</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">unit</span>&gt;</span>SECOND<span class="tag">&lt;/<span class="name">unit</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>360<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">endOffset</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">phaseRequest</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">fdsnDataSelect</span>/&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">printlineSeismogramProcess</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">rMean</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">rTrend</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">taper</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">sacWriter</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">waveformArm</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">sod</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>distanceRange</code> 筛选出满足一定震中距的数据</li>
<li><code>phaseRequest</code> 定义了数据时间窗，具体时间范围是P波到时前120秒，S波到时后360秒</li>
<li><code>fdsnDataSelect</code> 表示从IRIS获取数据</li>
<li><code>printlineSeismogramProcess</code> 打印获取的地震波形的信息</li>
<li><code>rMean</code>、<code>rTrend</code> 、<code>taper</code> 数据预处理</li>
<li><code>sacWriter</code> 以 SAC 格式将数据写入磁盘</li>
</ul>
<h3 id="高级用法技巧与陷阱">高级用法、技巧与陷阱</h3>
<h4 id="eventarm-错误示例">eventArm 错误示例</h4>
<p>上面的 eventArm 示例还有另一种等效的写法：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">sod</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">eventArm</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">fdsnEvent</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">originTimeRange</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">startTime</span>&gt;</span>2010-05-19T00:00:00.000Z<span class="tag">&lt;/<span class="name">startTime</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">endTime</span>&gt;</span>2010-10-20T00:00:00.000Z<span class="tag">&lt;/<span class="name">endTime</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">originTimeRange</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">fdsnEvent</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">magnitudeRange</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">min</span>&gt;</span>5.0<span class="tag">&lt;/<span class="name">min</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">max</span>&gt;</span>8.5<span class="tag">&lt;/<span class="name">max</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">magnitudeRange</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">originDepthRange</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">unit</span>&gt;</span>KILOMETER<span class="tag">&lt;/<span class="name">unit</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">min</span>&gt;</span>30<span class="tag">&lt;/<span class="name">min</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">originDepthRange</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">printlineEventProcess</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">CSVEventPrinter</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">filename</span>&gt;</span>events.csv<span class="tag">&lt;/<span class="name">filename</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">CSVEventPrinter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">eventArm</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">sod</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这种写法也是正确的，但是这种写法的速度却比前一种写法慢很多。其原因在于，SOD 在执行 <code>fdsnEvent</code> 时，前一种写法是获取了2010年、震级在5.0到8.5、深度大于30千米的地震，而后一种写法是先获取了2010年一整年的地震目录，然后筛选出其中震级在5.0到8.5范围内的地震，再筛选出深度大于30km的地震，虽然最终效果是一样的，但是后一种写法中 <code>fdsnEvent</code> 请求了更多的数据，因而速度更慢。</p>
<h4 id="逻辑运算">逻辑运算</h4>
<p>前面 eventArm 的示例已经在 <code>fdsnEvent</code> 中获取了2010年整年的震级在5.0到8.5、深度大于30km的地震。如果想要更复杂的筛选逻辑， <code>fdsnEvent</code> 就无法实现了，此时就需要用到 SOD 提供的逻辑运算功能。（ <code>fdsnEvent</code> 本质上是调用了 IRIS 或 USGS 提供的 web service 接口，因而其功能由 web service 所限制，而无法实现复杂的筛选逻辑，所以需要在执行 <code>fdsnEvent</code> 之后再由 SOD 对地震目录作进一步筛选）。</p>
<p>比如在已有地震的基础上想要筛选出满足如下条件的地震事件：震级大于6级或者震级大于5级且深度在100到200千米之间。这一筛选条件写成一般的伪代码大概是这样：</p>
<pre><code>if ((mag&gt;5 and 100&lt;depth&lt;200) or mag&gt;6.0):
    pass
else
    fail</code></pre>
<p>这一筛选条件可以写成以下recipe 片段并放在 <code>printlineEventProcess</code> 之前即可:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">originOR</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">originAND</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">magnitudeRange</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">min</span>&gt;</span>5<span class="tag">&lt;/<span class="name">min</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">magnitudeRange</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">originDepthRange</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">unit</span>&gt;</span>KILOMETER<span class="tag">&lt;/<span class="name">unit</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">min</span>&gt;</span>100<span class="tag">&lt;/<span class="name">min</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">max</span>&gt;</span>200<span class="tag">&lt;/<span class="name">max</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">originDepthRange</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">originAND</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">magnitudeRange</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">min</span>&gt;</span>6<span class="tag">&lt;/<span class="name">min</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">magnitudeRange</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">originOR</span>&gt;</span></div></pre></td></tr></table></figure>
<p>不单单是 eventArm 中可以使用OR、AND、NOT逻辑运算，networkArm 中也有很多标签可以使用这些逻辑运算以实现灵活筛选的目的，比如想要获取两个台网的数据，其伪代码是：</p>
<pre><code>if (network == IU or network == II)
    pass
else
    fail</code></pre>
<p>所以 recipe 片段可以写成：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">networkOR</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">networkCode</span>&gt;</span>II<span class="tag">&lt;/<span class="name">networkCode</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">networkCode</span>&gt;</span>IU<span class="tag">&lt;/<span class="name">networkCode</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">networkOR</span>&gt;</span></div></pre></td></tr></table></figure>
<p>而不能写成：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">networkAND</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">networkCode</span>&gt;</span>II<span class="tag">&lt;/<span class="name">networkCode</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">networkCode</span>&gt;</span>IU<span class="tag">&lt;/<span class="name">networkCode</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">networkAND</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="从头开始写-recipe">从头开始写 recipe</h2>
<p>SOD 具有高度可订制性的优点，同时也导致写 recipe 变得很困难，这一节说一说如何去读 SOD 官方文档。</p>
<p>如之前所说，一个 SOD recipe 包含了 eventArm、networkArm 和 waveformArm，文件结构如下所示:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">sod</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">eventArm</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- eventArm 全部内容 --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">eventArm</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">networkArm</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- networkArm 全部内容 --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">networkArm</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">waveformArm</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- waveformArm 全部内容 --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">waveformArm</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">sod</span>&gt;</span></div></pre></td></tr></table></figure>
<p>写 recipe 的关键在于搞清楚每个 Arm 中可以放哪些标签，各个标签的先后顺序又怎样？这就需要查询 SOD 的 <a href="http://www.seis.sc.edu/sod/ingredients/index.html" target="_blank" rel="external">Ingredient Listing</a>。</p>
<p>以 eventArm 为例，解释一下如何读 SOD 的文档。</p>
<p>首先，进入 <a href="http://www.seis.sc.edu/sod/ingredients/eventArm.html" target="_blank" rel="external">eventArm</a> 文档页面，可以看到：</p>
<ul>
<li>eventArm 的功能说明</li>
<li>Example 中给出了 eventArm 的简单示例</li>
<li>This consists of 表明 eventArm 中可以包含两部分内容，分别是是 eventSource 和 origin，其中前者必须至少出现一次（At least once），后者可以出现任意多次（Any number of times）</li>
<li>Places this can be found 表明 eventArm 只能直接出现在 sod 标签下</li>
</ul>
<p>需要注意的是， <code>eventSource</code> 和 <code>origin</code> 两边没有尖括号 <code>&lt; &gt;</code>，所以这两个 <strong>都不是标签</strong> ，可以将这两个理解为 <strong>标签集</strong> 。</p>
<p>进入 <a href="http://www.seis.sc.edu/sod/ingredients/eventSource.html" target="_blank" rel="external">eventSource</a> 文档页面，可知 eventSource 中是用来获取地震事件的标签集，其包含了如下几个标签：</p>
<ul>
<li><code>backwardsEventFinder</code></li>
<li><code>CSVEventSource</code></li>
<li><code>delayedEventSource</code></li>
<li><code>eventFinder</code></li>
<li><code>fdsnEvent</code></li>
<li><code>nowFakeEventSource</code></li>
<li><code>periodicFakeEventSource</code></li>
</ul>
<p>这里我们看到了前面示例用到的 <code>fdsnEvent</code> 。再进入 <a href="http://www.seis.sc.edu/sod/ingredients/fdsnEvent.html" target="_blank" rel="external">fdsnEvent</a> 文档页面，可知 <code>fdsnEvent</code> 会从USGS网站中获取地震目录。 <code>fdsnEvent</code> 中包含了很多标签以对事件进行筛选，比如示例中用到的 <code>originTimeRange</code> 、<code>magnitudeRange</code> 、<code>originDepthRange</code> ，以及示例中不曾用到的 <code>boxArea</code> 、 <code>pointDistance</code> 等标签。</p>
<p>再到标签 <code>originTimeRange</code> 、<code>magnitudeRange</code> 、<code>originDepthRange</code> 的文档页面看一看，就很容易把 eventArm 的 eventSource 部分 recipe 片段写出来了，如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">sod</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">eventArm</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">fdsnEvent</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">originTimeRange</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">startTime</span>&gt;</span>2010-01-01T00:00:00.000Z<span class="tag">&lt;/<span class="name">startTime</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">endTime</span>&gt;</span>2011-01-01T00:00:00.000Z<span class="tag">&lt;/<span class="name">endTime</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">originTimeRange</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">magnitudeRange</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">min</span>&gt;</span>5.0<span class="tag">&lt;/<span class="name">min</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">max</span>&gt;</span>8.5<span class="tag">&lt;/<span class="name">max</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">magnitudeRange</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">originDepthRange</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">unit</span>&gt;</span>KILOMETER<span class="tag">&lt;/<span class="name">unit</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">min</span>&gt;</span>30<span class="tag">&lt;/<span class="name">min</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">originDepthRange</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">fdsnEvent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">eventArm</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">sod</span>&gt;</span></div></pre></td></tr></table></figure>
<p>写完了 eventSource 部分，再看看 origin 部分。进入 <a href="http://www.seis.sc.edu/sod/ingredients/origin.html" target="_blank" rel="external">origin</a> 的文档页面，可以看到其包含的一堆标签，比如：</p>
<ul>
<li><code>CSVEventPrinter</code> 把事件以CSV格式保存到磁盘中</li>
<li><code>eventArea</code> 筛选出某个规则区域的事件</li>
<li><code>eventPolygonFile</code> 筛选出某个多边形内的事件</li>
<li><code>printlineEventProcess</code> 终端打印出筛选出来的事件信息</li>
</ul>
<p>再把文档一级一级看下去，即可写出本文最开始所展示的示例片段，如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">sod</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">eventArm</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">fdsnEvent</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">originTimeRange</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">startTime</span>&gt;</span>2010-01-01T00:00:00.000Z<span class="tag">&lt;/<span class="name">startTime</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">endTime</span>&gt;</span>2011-01-01T00:00:00.000Z<span class="tag">&lt;/<span class="name">endTime</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">originTimeRange</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">magnitudeRange</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">min</span>&gt;</span>5.0<span class="tag">&lt;/<span class="name">min</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">max</span>&gt;</span>8.5<span class="tag">&lt;/<span class="name">max</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">magnitudeRange</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">originDepthRange</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">unit</span>&gt;</span>KILOMETER<span class="tag">&lt;/<span class="name">unit</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">min</span>&gt;</span>30<span class="tag">&lt;/<span class="name">min</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">originDepthRange</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">fdsnEvent</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">printlineEventProcess</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">CSVEventPrinter</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">filename</span>&gt;</span>events.csv<span class="tag">&lt;/<span class="name">filename</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">CSVEventPrinter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">eventArm</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">sod</span>&gt;</span></div></pre></td></tr></table></figure>
<p>总结一下，SOD中标签很多，但由于整个 recipe 是树形结构，所以只要一级一级不断看文档，就可以定制出自己所需的任意功能的 recipe 了。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> IRIS </tag>
            
            <tag> 数据申请 </tag>
            
            <tag> 波形数据 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[文件管理与备份]]></title>
      <url>http://seisman.info/file-organization.html</url>
      <content type="html"><![CDATA[<p>本文将介绍我如何管理我的电脑中的文件，包括如何组织文件夹以及如何备份。</p>
<a id="more"></a>
<h2 id="背景介绍">背景介绍</h2>
<p>我目前使用的计算机有两台：</p>
<ol style="list-style-type: decimal">
<li>DELL台式机：安装 CentOS 7 系统，仅用于科研工作；</li>
<li>MacBook Pro：大部分时间用于日常使用，偶尔用于简单的科研；</li>
</ol>
<h2 id="组织文件与文件夹">组织文件与文件夹</h2>
<p>Linux 机器完全用于工作， <code>$HOME</code> 目录下的目录结构如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">|-- backup</div><div class="line">|-- bin</div><div class="line">|-- Datas</div><div class="line">|-- Desktop</div><div class="line">|-- Downloads</div><div class="line">|-- Nutstore</div><div class="line">|-- Script</div><div class="line">|-- Src</div><div class="line">`-- src.import</div></pre></td></tr></table></figure>
<p>下面一一解释一下每个目录的作用。</p>
<h3 id="bin">bin</h3>
<p>在 <code>$HOME</code> 下建了一个 <code>bin</code> 目录，并将该目录路径加入到 <code>$PATH</code> 中。</p>
<p><code>bin</code> 目录用于放置一些简单的二进制文件以及脚本，使得在命令行中可以直接调用它们。</p>
<p>简单列几个我的 <code>bin</code> 目录下的文件：</p>
<ul>
<li><code>backup.pl</code>: 自己写的一个数据备份脚本，自动备份全盘数据</li>
<li><code>cpdf</code>: 一个PDF分隔、合并工具，从官网下载的软件包中有用的东西只有这一个二进制文件，所以就放在 <code>bin</code> 目录下</li>
<li><code>distaz</code>: 计算震中距和方位角的小程序</li>
<li><code>matlab</code>: 指向 matlab 命令的软链接</li>
<li><code>mseed2sac</code>: 将 miniSEED 转换为 SAC 的小程序</li>
<li><code>rdseed</code>: 将 SEED 转换成 SAC 的小程序</li>
<li><code>wlt.py</code>: 自动登陆科大网络通的脚本</li>
</ul>
<p>哪些文件或脚本可以放在 <code>bin</code> 目录下呢，我自己设立的原则如下：</p>
<ol style="list-style-type: decimal">
<li>如果一个软件包只提供了一个二进制文件，并且这个二进制文件可直接运行，而不依赖于其他辅助文件，比如 <code>distaz</code>、<code>rdseed</code> 等都满足这一点</li>
<li>如果一个命令可以很好地完成某一类特定的功能而不需要对源码做任何改动，比如 <code>rdseed</code> 之类</li>
<li>如果一个命令只能实现某个特定目的，并且无论如何修改不会对任何项目产生影响，比如我自己写的 <code>backup.pl</code> 和 <code>wlt.py</code></li>
<li>如果一个软件提供了一堆命令，但实际上真正用到的只有其中一个，比如 matlab，此时当然可以把 matlab 的路径加到 <code>$PATH</code> 中，也可以在 <code>bin</code> 目录下建一个指向命令的软链接</li>
</ol>
<h3 id="datas">Datas</h3>
<p>该目录主要用于保存一些基本不会改动的数据文件，比如：</p>
<ul>
<li><code>GEBCO</code>: 全球地形数据文件</li>
<li><code>USArray</code>: 科研过程中下载的 USArray 的 SEED 格式的波形数据，放在这里相当于备份</li>
<li><code>GFlib</code>: 格林函数库</li>
<li><code>China_Adm</code>: 中国国界数据</li>
</ul>
<h3 id="src.import">src.import</h3>
<p>该目录用于放置从网络获取的他人写的软件包的源码。比如 pssac、fk、gcap 的源码都放这里。</p>
<h3 id="src">Src</h3>
<p>该目录用于放置自己写的具有 <strong>通用性</strong> 的代码包，比如：</p>
<ul>
<li><code>FD2D-SH</code>: 二维SH波有限差分波场模拟代码</li>
<li><code>FD2D-PSV</code>: 二维P-SV波有限差分波场模拟代码</li>
<li><code>FD3D</code>: 三维有限差分波场模拟代码</li>
<li><code>sac_tools</code>: SAC 相关工具</li>
</ul>
<h3 id="script">Script</h3>
<p>该目录用于放置自己写的具有 <strong>通用性</strong> 的脚本：</p>
<ul>
<li><code>HinetScripts</code>: 用于申请、下载、处理Hinet数据的 Python 脚本</li>
<li><code>FnetScript</code>: 用于从Fnet下载数据的脚本</li>
<li><code>irisScript</code>: 从IRIS获取数据的相关脚本</li>
<li><code>SodScript</code>: 使用SOD获取数据的相关脚本</li>
<li><code>TauPy</code>: 自己写的射线走时计算代码</li>
</ul>
<h3 id="backup">backup</h3>
<p>该目录下主要用于放置从网站上下载的软件包的压缩包，比如SAC、GMT、TauP等的软件包。</p>
<p>该目录与 <code>src.import</code> 的主要区别在于， <code>src.import</code> 目录中包含的是解压后的源码，且可能自己会对其进行修改；而 <code>backup</code> 目录中包含的是软件包的原始压缩包，与从官方网站上下到的代码一模一样，以便于自己搞乱 <code>src.import</code> 里的代码之后重新开始。同时，也相当于是一个软件包的备份。</p>
<h3 id="desktop">Desktop</h3>
<p><code>Desktop</code> 是我日常工作的地方，放置当前在做的科研项目。比如，该目录下有这几个文件夹：</p>
<ul>
<li><code>MyProject1</code>：第一个科研项目的根目录。与该项目所有的所有的数据、脚本、源码、图片、报告等都在这个目录下。</li>
<li><code>MyProject2</code>：第二个科研项目的根目录。同理。</li>
<li><code>MyProject3</code>：第n个科研项目的根目录。</li>
<li><code>workspace</code>：日常科研中，经常需要做一些测试，该目录用于进行临时的测试。我的目录下包括了 Perl、Python、SAC、GMT、TauP等目录。比如某个Perl语法忘了，我会到Perl目录下临时写个小脚本测试一下语法对不对；比如对SAC某个命令的功能不太确定，我会在SAC目录下临时生成几个SAC文件然后做个测试。在专门的目录下做一些测试，一方面可以避免由于写了临时文件而搞乱自己的科研目录，另一方面在删除临时文件时可以方向删而不必担心删除了其他重要的文件。</li>
</ul>
<h3 id="downloads">Downloads</h3>
<p>这是浏览器下载的默认目录。该目录仅作为临时存放文件的地方。每隔几天都需要将下载的文章、软件包、图片等等放在该放的地方。</p>
<h3 id="nutstore">Nutstore</h3>
<p>坚果云同步目录。坚果云会自动将将该目录下的所有文件在我的两台电脑之间同步。</p>
<h3 id="opt">/opt/</h3>
<p>我倾向于将一些比较大的软件装在 <code>/opt/</code> 目录而不是 <code>/usr/local/</code> 目录下。比如 SAC、GMT、TauP、Matlab 这些都装在该目录下。</p>
<h2 id="硬盘备份">硬盘备份</h2>
<p>文件备份非常重要。备份主要是为了解决两个常见问题：</p>
<ol style="list-style-type: decimal">
<li>磁盘损坏</li>
<li>误删文件</li>
</ol>
<p>因而建议，至少每周将工作电脑中的文件备份到移动硬盘中。推荐使用 <code>rsync</code> 进行备份，其用法为:</p>
<pre><code>rsync --delete -av /home/seisman/bin /data1/seisman/</code></pre>
<p>该命令作用是将 <code>/home/seisman/bin</code> 目录完整同步到 <code>/data1/seisman/</code> 目录下。</p>
<p><code>rsync</code> 的特色在于增量备份。这意味着只有第一次备份的时候需要花比较多的时间，以后再使用该命令进行备份时只会同步改动。加入你一周只修改了一个文件，那么同步的过程会在瞬间完成。</p>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用 Web Services 获取地震数据]]></title>
      <url>http://seisman.info/web-service-clients.html</url>
      <content type="html"><![CDATA[<p>地震数据通常包含三类：地震目录、台站信息、波形数据。当然，还有一些其他的地震数据，比如震源机制等等。</p>
<p>世界上最大的地震数据中心是 IRIS DMC。除了 IRIS DMC 之外，还有很多稍微小一些的地震数据中心。不管是 IRIS DMC 还是其他的小型地震数据中心，通常都提供了多种工具以供用户获取地震数据。这些工具千差万别，每遇到一个新的地震数据中心，可能就得学一套新的数据获取工具，给用户带来了极大的麻烦。</p>
<p>幸运的是，FDSN 定义了通用的 <a href="http://www.fdsn.org/webservices/" target="_blank" rel="external">FDSN Web Services 规范</a>，并不断被多个地震数据中心所采用，使得用户只需要学习一套工具即可从多个地震数据中心下载地震数据。</p>
<p>FDSN Web Service 规定了三类服务的规范：</p>
<ul>
<li><code>station</code>: 获取台站信息</li>
<li><code>dataselect</code>: 获取波形数据</li>
<li><code>event</code>: 获取地震目录</li>
</ul>
<p>简单的说，Web Services 是一套规范，用户通过向数据中心发送特定的网页请求来获取数据。这一套规范由于其通用性而被越来越多的地震数据中心所采用。因而学会了 Web Services 工具，就可以只用一套工具从不同的数据中心申请数据。</p>
<p>IRIS DMC 就实现了这一套 Web Services，并且给出了详细的解释与示例，适合作为 Web Services 的学习教程：</p>
<ul>
<li><a href="http://service.iris.edu/fdsnws/station/1/" target="_blank" rel="external">IRIS station</a></li>
<li><a href="http://service.iris.edu/fdsnws/dataselect/1/" target="_blank" rel="external">IRIS dataselect</a></li>
<li><a href="http://service.iris.edu/fdsnws/event/1/" target="_blank" rel="external">IRIS event</a></li>
</ul>
<p>用户可以根据 Web Services 规范构建一个网址，然后复制到浏览器的地址栏即可完成数据的申请。显然，这种方式不适合批量申请数据。很多工具对 Web Services 做了封装，提供了更加简便的数据获取方式。</p>
<p>下面列出了一些基于 Web Services 的地震数据获取工具：</p>
<ol style="list-style-type: decimal">
<li><a href="https://seiscode.iris.washington.edu/projects/ws-fetch-scripts" target="_blank" rel="external">ws-fetch-scripts</a>: Perl写的命令行工具</li>
<li><a href="http://www.seis.sc.edu/sod/" target="_blank" rel="external">SOD</a>: Java写的命令行数据获取工具</li>
<li><a href="http://ds.iris.edu/ds/nodes/dmc/software/downloads/irisFetch.m/" target="_blank" rel="external">irisFetch.m</a>: Matlab函数库</li>
<li><a href="http://ds.iris.edu/ds/nodes/dmc/software/downloads/JWEED/" target="_blank" rel="external">JWEED</a>: Java写的GUI数据获取工具</li>
<li><a href="http://ds.iris.edu/ds/nodes/dmc/software/downloads/iris-ws/" target="_blank" rel="external">IRIS-WS</a>: Java API</li>
</ol>
<p>下面列出了几个地震数据处理工具，这几个工具实现了 Web Services 的功能，因而也可以用于获取地震数据：</p>
<ol style="list-style-type: decimal">
<li><a href="http://www.obspy.org/" target="_blank" rel="external">ObsPy</a>: Python写的地震数据处理工具</li>
<li><a href="https://github.com/jpjones76/SeisIO.jl" target="_blank" rel="external">SeisIO.jl</a>: Julia写的地震数据处理工具</li>
<li><a href="http://geoscience-community-codes.github.io/GISMO/" target="_blank" rel="external">GISMO</a>: Matlab写的地震数据处理工具</li>
</ol>
<p>参考资料：</p>
<ul>
<li><a href="http://www.fdsn.org/webservices/" target="_blank" rel="external">FDSN Web Services</a></li>
<li><a href="http://www.fdsn.org/webservices/datacenters/" target="_blank" rel="external">支持 Web Services 的地震数据中心</a></li>
<li><a href="https://service.iris.edu/" target="_blank" rel="external">IRIS Web Services</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> IRIS </tag>
            
            <tag> 波形数据 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SAC 文件读写模块 sacio_Fortran]]></title>
      <url>http://seisman.info/sacio-for-fortran90.html</url>
      <content type="html"><![CDATA[<p>sacio_Fortran 是一个用 Fortran 90 写的 SAC 读写模块。在自己的程序中调用该模块，即可实现 SAC 二进制文件的读写。</p>
<p>项目主页： <a href="http://wangliang1989.github.io/sacio_Fortran/" class="uri" target="_blank" rel="external">http://wangliang1989.github.io/sacio_Fortran/</a></p>
<h2 id="文件列表">文件列表</h2>
<p>下载后，有如下文件:</p>
<ol style="list-style-type: decimal">
<li><code>sacio.f90</code>： sacio模块的源代码 (此文件是唯一真正需要的文件!)</li>
<li><code>README.md</code>： 说明文件</li>
<li><code>test/</code>：示例文件，展示如何在自己的程序中调用 sacio 模块内的子程序</li>
</ol>
<h2 id="编译与链接">编译与链接</h2>
<p>以 <code>gfortran</code> 为例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ gfortran -c sacio.f90</div><div class="line">$ gfortran -c your_program.f90</div><div class="line">$ gfortran your_program.o sacio.o -o your_program</div></pre></td></tr></table></figure>
<h2 id="各个子程序的使用">各个子程序的使用</h2>
<p>模块中包含了 6 个子程序:</p>
<ol style="list-style-type: decimal">
<li><code>sacio_readhead</code>: 仅读取SAC文件头段</li>
<li><code>sacio_readsac</code>: 读取SAC文件</li>
<li><code>sacio_writesac</code>: 写SAC文件</li>
<li><code>sacio_readsac_cut</code>: 带 cut 选项的读取SAC文件</li>
<li><code>sacio_nullhead</code>: 修改 SAC 文件头段变量为 undef</li>
<li><code>sacio_newhead</code>: 生成一个空数据的 SAC 头段</li>
</ol>
<p>要使用哪个子程序，按照Fortran 90一般的方式即可调用。至于如何调用，请参考对应的例子程序文件，没有比例子更好的讲解。</p>
<h2 id="协议和其他">协议和其他</h2>
<p>sacio_Fortran 是<a href="https://wangliang1989.github.io/" target="_blank" rel="external">我</a>和 SeisMan 在 2015 年 9 月一起写的，当时就在网上公开了。今借 SeisMan 这块宝地写一个简短的介绍，希望这个程序能被更多的人使用。本程序目前是按照 <a href="http://www.apache.org/licenses/LICENSE-2.0.html" target="_blank" rel="external">Apache 开源协议</a>发布的。如果你只是使用，或者为了适应自己的需要修改，只要不涉及再分发，你不需要太在意协议的问题，但是当要将这个程序给别人时，或者修改后给别人时，你应该注意遵循协议的内容。无论你如何使用本程序，我们都不寻求任何回报，当然也不对任何可能造成的损失负责。如果你发现程序有问题，欢迎告诉我们。如果你贡献大，我们会把你列为作者(贡献大不大完全由我们来确定)。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2016-07-19：王亮 原稿；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Fortran </tag>
            
            <tag> SAC技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地学学术期刊]]></title>
      <url>http://seisman.info/journals.html</url>
      <content type="html"><![CDATA[<p>想要追踪前沿进展，就需要看期刊上最新发表的文章。可以使用邮件或者RSS订阅的方式获取期刊的更新。本文列出了我订阅的期刊。</p>
<p>Wiley、Oxford、ScienceDirect和GeoScienceWorld算是期刊合集，每一个都包含了很多地学期刊，所以注册这几个网站就可以囊括地学的大部分期刊了。除此之外，Nature、Science和PNAS需要单独注册。</p>
<ol style="list-style-type: decimal">
<li><a href="http://onlinelibrary.wiley.com/" target="_blank" rel="external">Wiley Online Library</a>
<ul>
<li>Chinese Journal of Geophysics</li>
<li>Earth and Space Science</li>
<li>Geophysical Research Letters</li>
<li>Geophysical Prospecting</li>
<li>Geochemistry, Geophysics, Geosystems</li>
<li>Journal of Geophysical Research: Solid Earth</li>
<li>Journal of Geophysical Research: Oceans</li>
<li>Journal of Geophysical Research: Planets</li>
<li>Reviews of Geophysics</li>
<li>Tectonics</li>
</ul></li>
<li><a href="https://academic.oup.com/" target="_blank" rel="external">Oxford Academic</a>
<ul>
<li>Geophysical Journal International</li>
</ul></li>
<li><a href="http://www.sciencedirect.com/" target="_blank" rel="external">ScienceDirect</a>
<ul>
<li>Computer &amp; Geophysics</li>
<li>Earth and Planetary Science Letters</li>
<li>Geodesy and Geodynamics</li>
<li>Geoscience Frontiers</li>
<li>Gondwana Research</li>
<li>Journal of Applied Geophysics</li>
<li>Journal of Asian Earth Sciences</li>
<li>Journal of Geodynamics</li>
<li>Journal of South American Earth Science</li>
<li>Planetary and Space Sciences</li>
<li>Physics of the Earth and Planetary Interiors</li>
<li>Lithos</li>
<li>Tectonophysics</li>
</ul></li>
<li><a href="http://geoscienceworld.org/" target="_blank" rel="external">GeoScienceWorld</a>
<ul>
<li>Bulletin of the Seismological Society of America</li>
<li>Canadian Journal of Earth Sciences</li>
<li>Geophysics</li>
<li>Lithosphere</li>
<li>Seismological Research Letters</li>
<li>The Leading Edge</li>
</ul></li>
<li>Others
<ul>
<li><a href="http://www.nature.com/" target="_blank" rel="external">Nature</a>: Nature, Nature Geoscience, Nature Communication, Scientific Reports</li>
<li><a href="http://www.sciencemag.org/" target="_blank" rel="external">Science</a>: Science, Science Advances</li>
<li><a href="http://www.pnas.org/" target="_blank" rel="external">PNAS</a>:</li>
<li><a href="http://www.annualreviews.org/journal/earth" target="_blank" rel="external">Annual Review of Earth and Planetary Sciences</a>: 一年出一期的专门出 Review 的期刊</li>
</ul></li>
<li>Google Scholar 关键词邮件订阅</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[构建GMT数据库]]></title>
      <url>http://seisman.info/gmt-setup-database.html</url>
      <content type="html"><![CDATA[<p>在使用GMT绘图时，经常会用到某些数据。比如全球地形起伏数据、符合中国国情的 国界线数据、中国地质构造分界线数据，等等。这些数据有一个共同的特点：固定性。即 这些数据几乎不需要改动就可以直接使用。对于全球地形起伏数据而言，还有另一个特点， 就是数据量巨大，一个地形数据可能需要几百MB，甚至几个GB。</p>
<p>绘图时要使用这些数据，通常来说有两种办法：</p>
<ol>
<li>将数据复制到绘图脚本所在目录，在命令中直接指定该数据的文件名</li>
<li>将数据放在系统中某个特定的目录，在命令中指定该数据的绝对路径</li>
</ol>
<p>显然，以上两种方法都有其局限性。第一种方法会造成数据冗余，而且将这么大的数据 复制来复制去也不方便。第二种方法，绝对路径通常都比较长，写起来麻烦而且万一 路径变了所有脚本都要修改，很麻烦。</p>
<p>要是能像 Linux 那样通过修改 <code>PATH</code> 环境变量让系统搜索某个路径就好了。其实 GMT 提供了这个功能。</p>
<p>从原理上说，当GMT在命令中遇到某个文件时，首先会在当前目录下寻找该文件，如果找不到， 则会到环境变量 <code>GMT_DATADIR</code> 中寻找。若环境变量 <code>GMT_DATADIR</code> 未定义，则使用 默认值（Linux下 <code>~/.gmt/</code>）。</p>
<p>因而，最简单的做法就是把所有的地形数据、国界数据等等，都放在 <code>~/.gmt</code> 目录下， 构成一个自己的GMT数据库。此时，在GMT命令中直接使用文件名即可，既不需要将数据 复制到当前目录，也不需要指定长长的绝对路径。</p>
<p>如果不想把数据放在 <code>~/.gmt</code> 下，而是想放在自己指定的某个目录下，直接修改环境 变量即可。在 <code>~/.bashrc</code> 中加入：</p>
<pre><code>export GMT_DATADIR=/path/to/my/gmt/database</code></pre>
<p>如果喜欢将不同的数据分类放在不同的目录下也可以，都 <code>:</code> 分隔多个目录即可，例如：</p>
<pre><code>export GMT_DATADIR=/path/to/my/coast:/path/to/my/boundary</code></pre>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IRIS 的理论地震图生成引擎]]></title>
      <url>http://seisman.info/iris-syngine.html</url>
      <content type="html"><![CDATA[<p>通过看理论地震图有助于我们理解实际数据中的很多现象，但自己算理论地震图却不是 一个简单的事情，既需要有相关代码还需要理解理论地震图计算的原理，还需要足够的 计算机资源以及计算时间。</p>
<p>IRIS 的 Syngine 服务使用 <a href="http://seis.earth.ox.ac.uk/axisem/" target="_blank" rel="external">AxiSEM</a> 计算得到 格林函数，并使用 <a href="http://www.instaseis.net/index.html" target="_blank" rel="external">Instaseis</a> 得到理论地震图。 该服务提供了 PREM、AK135、iasp91 等多个模型下高达 1 Hz 的理论地震图，用户可直接 下载使用，省去了自己计算的麻烦。</p>
<p>下面列出相关网页：</p>
<ol style="list-style-type: decimal">
<li>项目主页： <a href="http://ds.iris.edu/ds/products/syngine/" class="uri" target="_blank" rel="external">http://ds.iris.edu/ds/products/syngine/</a></li>
<li>网页版下载工具： <a href="https://service.iris.edu/irisws/syngine/1" class="uri" target="_blank" rel="external">https://service.iris.edu/irisws/syngine/1</a></li>
<li>命令行下载工具： <a href="https://seiscode.iris.washington.edu/projects/ws-fetch-scripts/wiki/FetchSyn_usage" target="_blank" rel="external">FetchSyn</a></li>
<li>用 ObsPy 下载理论地震图： <a href="http://nbviewer.jupyter.org/gist/krischer/3e655576e4d17e6c95f2" target="_blank" rel="external">Using Syngine with ObsPy</a></li>
<li>AxiSEM 计算时所使用的输入模型文件: http://ds.iris.edu/ds/products/emc-syngine/</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> IRIS </tag>
            
            <tag> 理论地震图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[识别 TauP 输出中的多个 P 震相]]></title>
      <url>http://seisman.info/taup-identify-multiple-P-phases.html</url>
      <content type="html"><![CDATA[<p>在使用 TauP 计算 <strong>浅源近震</strong> 的 P 波走时时，输出中经常会出现很多个 P 震相。这个事情让人很困扰， 因为搞不清这些 P 震相到底谁是谁。如果需要的只是 P 波初至，那就无所谓了，直接用最早的到时即可。 有些时候需要计算某个特定 P 震相的走时，这就需要清楚地了解每个 P 震相所代表的真正路径了。</p>
<a id="more"></a>
<p>以最简单也最常用的 PREM 模型为例， TauP 中给出了 PREM 模型的前几列如下：</p>
<pre><code>$ head -10 prem.nd
    0.00     5.80000   3.20000   2.60000    1456.0     600.0
   15.00     5.80000   3.20000   2.60000    1456.0     600.0
   15.00     6.80000   3.90000   2.90000    1350.0     600.0
   24.40     6.80000   3.90000   2.90000    1350.0     600.0
mantle
   24.40     8.11061   4.49094   3.38076    1446.0     600.0
   40.00     8.10119   4.48486   3.37906    1446.0     600.0
   60.00     8.08907   4.47715   3.37688    1447.0     600.0
   80.00     8.07688   4.46953   3.37471     195.0      80.0
  115.00     8.05540   4.45643   3.37091     195.0      80.0</code></pre>
<p>可以看到，15 km 处是上下地壳的分界面，24.4 km 是 Moho 面。</p>
<p>那么，对于一个深度为 5 km 的震源来说，在小震中距时可能会有 5 个 P 波震相：</p>
<ol style="list-style-type: decimal">
<li>震相 1： 从源出发向上传播直接到台站</li>
<li>震相 2：15 km 界面的反射波</li>
<li>震相 3：15 km 界面处的首波</li>
<li>震相 4：Moho 面的反射波</li>
<li>震相 5：Moho 面的首波</li>
</ol>
<p>下面的命令计算了震源深度 5 km，震中距 100 km 处的 P 波震相走时。</p>
<pre><code>$ taup_time -mod prem -h 5 -km 100 -ph p,P

Model: prem
Distance   Depth   Phase   Travel    Ray Param  Takeoff  Incident  Purist    Purist
  (deg)     (km)   Name    Time (s)  p (s/deg)   (deg)    (deg)   Distance   Name
-----------------------------------------------------------------------------------
    0.90     5.0   P         16.81    13.657     45.47    45.43     0.90   = P
    0.90     5.0   P         16.93    16.313     58.38    58.31     0.90   = P
    0.90     5.0   p         17.26    19.135    -87.30    86.48     0.90   = p
    0.90     5.0   P         17.33    15.646     54.76    54.70     0.90   = P
    0.90     5.0   P         17.75    18.571     75.80    75.62     0.90   = P</code></pre>
<p>输出的 5 个 P 震相与之前的预期相同，很明显输出的第三行对应震相 1，也就是 p 震相。</p>
<p>那么如何确定其他震相的身份呢？当然可以通过射线参数、出射角等信息判断，但是如上面的输出所示，其实 很困难。最好的解决办法是，利用 TauP 强大的震相命名功能来指定计算特定震相的到时。例如， <code>Pn</code> 代表 Moho 面的首波， <code>Pv15P</code> 代表 15 km 界面的反射波， <code>PvmP</code> 代表 Moho 界面反射波。</p>
<pre><code>$ taup_time -mod prem -h 5 -km 100 -ph p,P,Pn,Pg,Pv15P,PvmP,Pv24.4P

Model: prem
Distance   Depth   Phase     Travel    Ray Param  Takeoff  Incident  Purist    Purist
  (deg)     (km)   Name      Time (s)  p (s/deg)   (deg)    (deg)   Distance   Name
-------------------------------------------------------------------------------------
    0.90     5.0   P           16.81    13.657     45.47    45.43     0.90   = P
    0.90     5.0   Pn          16.81    13.657     45.47    45.43     0.90   = Pn
    0.90     5.0   P           16.93    16.313     58.38    58.31     0.90   = P
    0.90     5.0   Pg          16.93    16.313     58.38    58.31     0.90   = Pg
    0.90     5.0   p           17.26    19.135    -87.30    86.48     0.90   = p
    0.90     5.0   P           17.33    15.646     54.76    54.70     0.90   = P
    0.90     5.0   PvmP        17.33    15.646     54.76    54.70     0.90   * Pv24.4P
    0.90     5.0   Pv24.4P     17.33    15.646     54.76    54.70     0.90   = Pv24.4P
    0.90     5.0   P           17.75    18.571     75.80    75.62     0.90   = P
    0.90     5.0   Pg          17.75    18.571     75.80    75.62     0.90   = Pg
    0.90     5.0   Pv15P       17.75    18.571     75.80    75.62     0.90   = Pv15P</code></pre>
<p>从这个命令的输出中可以提取出很多信息：</p>
<ol style="list-style-type: decimal">
<li>第 1 行和第 2 行是同一个震相，即 Pn，也就是 Moho 界面的首波。同时也说明，震相名 P 包括了反射波、首波等</li>
<li>第 3 行与第 4 行是同一个震相，即 Pg，也就是地壳内 turning 的波</li>
<li>第 5 行是上行波 p，这个很明显了</li>
<li>第 6-8 行是同一个震相，是 Moho 界面的反射波，这个震相可以用 P、PvmP 或 Pv24.4P</li>
<li>第 9-11 行是同一个震相，是 15 km 界面的反射波</li>
</ol>
<p>5 个震相中有四个的路径已经很确定了，唯一不确定的就是第 3-4 行这个震相。其实跟前面的理论与其对比一下 可以猜出来，这个震相应该是 15 km 界面的首波。那么如何证明呢？方法很简单，把 PREM 模型中 Moho 界面 的深度改到 15 km，此时计算出的 Pn 就是 15 km 界面的首波了。</p>
<p>修改后的 <code>prem2.nd</code> 的前几行内容如下（其实只是修改了 <code>mantle</code> 这一行的位置）：</p>
<pre><code>$ head -10 prem.nd
    0.00     5.80000   3.20000   2.60000    1456.0     600.0
   15.00     5.80000   3.20000   2.60000    1456.0     600.0
mantle
   15.00     6.80000   3.90000   2.90000    1350.0     600.0
   24.40     6.80000   3.90000   2.90000    1350.0     600.0
   24.40     8.11061   4.49094   3.38076    1446.0     600.0
   40.00     8.10119   4.48486   3.37906    1446.0     600.0
   60.00     8.08907   4.47715   3.37688    1447.0     600.0
   80.00     8.07688   4.46953   3.37471     195.0      80.0
  115.00     8.05540   4.45643   3.37091     195.0      80.0</code></pre>
<p>执行相同的命令，可以看到</p>
<pre><code>$ taup_time -mod prem2 -h 5 -km 100 -ph p,P,Pn,Pg,Pv15P,PvmP,Pv24.4P

Model: prem2
Distance   Depth   Phase     Travel    Ray Param  Takeoff  Incident  Purist    Purist
  (deg)     (km)   Name      Time (s)  p (s/deg)   (deg)    (deg)   Distance   Name
-------------------------------------------------------------------------------------
    0.90     5.0   P           16.81    13.657     45.47    45.43     0.90   = P
    0.90     5.0   P           16.93    16.313     58.38    58.31     0.90   = P
    0.90     5.0   Pn          16.93    16.314     58.39    58.31     0.90   = Pn
    0.90     5.0   p           17.26    19.135    -87.30    86.48     0.90   = p
    0.90     5.0   P           17.33    15.646     54.76    54.70     0.90   = P
    0.90     5.0   Pv24.4P     17.33    15.646     54.76    54.70     0.90   = Pv24.4P
    0.90     5.0   P           17.75    18.571     75.80    75.62     0.90   = P
    0.90     5.0   Pv15P       17.75    18.571     75.80    75.62     0.90   = Pv15P
    0.90     5.0   PvmP        17.75    18.571     75.80    75.62     0.90   * Pv15P</code></pre>
<p>新模型下 Moho 界面在 15 km 处，所以此时 PvmP 是 15 km 的反射波，而 Pn 则是 15 km 的首波。</p>
<p>至此，所有的 5 个 P 震相都被正确识别出来啦。对于更复杂的速度模型，判断方法类似。</p>
<p>结合以上的分析，总结出来震相走时方面的几个需要注意的地方：</p>
<ol style="list-style-type: decimal">
<li>首波在某些震中距会比反射波快（这在地震学基础中已经提到了）</li>
<li>浅部界面的反射波并不一定比深部界面的反射波更早到（此处 Pv15P 晚于 Pv24.4P）</li>
<li>除了 Pn 之外最早到的震相不一定就是直达波或反射波，也有可能是其他界面的首波（此处 15 km 界面的首波是除 Pn 外最早到的）</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 走时 </tag>
            
            <tag> TauP </tag>
            
            <tag> 震相 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TauP 自定义模型]]></title>
      <url>http://seisman.info/taup-custom-models.html</url>
      <content type="html"><![CDATA[<p>TauP 内置了常见的一维速度模型，比如 PREM、ak135、iasp91 等，这些标准速度模型 位于 TauP 软件包的 <code>StdModels</code> 目录下。日常科研中，这些标准速度模型是不能满足 需求的，因而需要自定义速度模型。</p>
<a id="more"></a>
<h2 id="速度模型格式">速度模型格式</h2>
<p>通常，自定义的模型都是在标准模型的基础上对少量改动。所以，要想自定义模型，先要了解 TauP 模型的格式。TauP 支持两种速度模型格式： <code>nd</code> 和 <code>tvel</code>。</p>
<h3 id="tvel-格式">tvel 格式</h3>
<p>以 ak135 模型为例，其前 10 行的内容如下：</p>
<pre><code>$ head -10 ak135.tvel
ak135 - P
ak135 - S
     0.000      5.8000      3.4600     2.7200
    20.000      5.8000      3.4600      2.7200
    20.000      6.5000      3.8500      2.9200
    35.000      6.5000      3.8500      2.9200
    35.000      8.0400      4.4800      3.3198
    77.500      8.0450      4.4900      3.3455
   120.000      8.0500      4.5000      3.3713
   165.000      8.1750      4.5090      3.3985</code></pre>
<p>其中前两行是注释行，会被自动忽略，但这两行是必须的。接下来每行给定一个深度处的参数值， 两个深度之间的参数通过线性插值得到。若某个深度处有两个不同的参数值，则该深度处是一个 速度界面，比如上面的几行中 20 和 35 都是速度界面，其余深度则不是。</p>
<h3 id="nd-格式">nd 格式</h3>
<p>以 PREM 模型为例，其前 10 行的内容如下：</p>
<pre><code>$ head -10 prem.nd
    0.00     5.80000   3.20000   2.60000    1456.0     600.0
   15.00     5.80000   3.20000   2.60000    1456.0     600.0
   15.00     6.80000   3.90000   2.90000    1350.0     600.0
   24.40     6.80000   3.90000   2.90000    1350.0     600.0
mantle
   24.40     8.11061   4.49094   3.38076    1446.0     600.0
   40.00     8.10119   4.48486   3.37906    1446.0     600.0
   60.00     8.08907   4.47715   3.37688    1447.0     600.0
   80.00     8.07688   4.46953   3.37471     195.0      80.0
  115.00     8.05540   4.45643   3.37091     195.0      80.0</code></pre>
<p>与 tvel 格式类似，也是每行指定一个深度处的参数值。两个深度之间的参数通过线性插值得到。 若某个深度处有两个不同的参数值，则该深度处是一个速度界面。不同之处在于， nd 格式中没有 前两列注释行，且有专门的行来指定地球内部的重要界面：Moho、CMB 和 ICB。</p>
<h2 id="微调模型">微调模型</h2>
<p>假定要以 PREM 模型为基础来自定义模型。首先将标准 PREM 模型 <code>prem.nd</code> 复制一份到 工作目录，并重命名为 <code>model1.nd</code> 。直接执行如下命令就可以计算新模型下的震相走时。</p>
<pre><code>$ taup_time -mod model1 -ph p,P,Pn -h 5 -km 200

Model: model1
Distance   Depth   Phase   Travel    Ray Param  Takeoff  Incident  Purist    Purist
  (deg)     (km)   Name    Time (s)  p (s/deg)   (deg)    (deg)   Distance   Name
-----------------------------------------------------------------------------------
    1.80     5.0   P         29.09    13.657     45.47    45.43     1.80   = P
    1.80     5.0   Pn        29.09    13.657     45.47    45.43     1.80   = Pn
    1.80     5.0   P         31.60    16.312     58.38    58.30     1.80   = P
    1.80     5.0   P         31.75    16.187     57.67    57.60     1.80   = P
    1.80     5.0   p         34.48    19.158      0.00    87.84     1.80   = p
    1.80     5.0   P         34.73    18.961     81.80    81.50     1.80   = P</code></pre>
<p>若 <code>-mod</code> 后的参数没有以 <code>.nd</code> 或 <code>.tvel</code> 结尾，则命令会首先到标准模型中找，若找不到则到当前 目录下找。</p>
<p>若 <code>-mod</code> 后的参数以 <code>.nd</code> 或 <code>.tvel</code> 结尾，则命令只会在当前目录下寻找模型文件。所以，在使用 自定义的模型时还是建议加上后缀比较好。</p>
<p>接下来就是修改模型了，基本上不乱改都不会出问题。</p>
<h2 id="加速计算">加速计算</h2>
<p>修改完模型后，TauP 中的所有命令就都可以使用这个模型了。如果你需要多次调用 TauP 来计算自定义模型 下的震相走时，你会发现，自定义的模型算走时总是比标准模型算的要慢。</p>
<p>出现这个现象是因为，TauP 已经针对每个标准模型计算了其对应的 tau 表。这个表的计算量很大，但只与模型 有关，与震中距、震源深度等都无关。因而先把这个表计算出来，则可以实现走时计算的加速。</p>
<p>计算表的方式也很简单： <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ taup_create -nd model1.nd</div><div class="line">$ taup_time -mod model1.taup -ph p,P,Pn -h 5 -km 200</div></pre></td></tr></table></figure></p>
<p><code>taup_create</code> 命令会生成一个后缀为 <code>.taup</code> 的二进制文件，这个文件可以直接在命令中使用，如上面 的第二个命令所示。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TauP </tag>
            
            <tag> 模型 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[征集令]]></title>
      <url>http://seisman.info/you-are-wanted.html</url>
      <content type="html"><![CDATA[<h2 id="维护者征集">维护者征集</h2>
<p>下面列出了我发起的几个开源项目。挖了坑但是没有时间去填，所以需要征集志愿者参与维护。志愿者越多越好，项目开源的目的就是让所有人都可以参与到维护中来。</p>
<ol style="list-style-type: decimal">
<li><a href="https://github.com/seisman/SAC_Docs_zh" target="_blank" rel="external">SAC 参考手册</a> 日常维护</li>
<li><a href="https://github.com/gmt-china/gmt-china.github.io" target="_blank" rel="external">GMT 中文社区主页</a> 日常维护，网页设计</li>
<li><a href="https://github.com/gmt-china/GMT_docs" target="_blank" rel="external">GMT 参考手册</a> 日常维护</li>
<li><a href="https://github.com/gmt-china/GMT_modules" target="_blank" rel="external">GMT 模块手册</a> 日常维护，模块用法整理</li>
<li><a href="https://github.com/gmt-china/GMT_examples" target="_blank" rel="external">GMT 示例集</a> 日常维护，网页设计，示例投稿</li>
<li><a href="https://github.com/gmt-china/gmt-easy-installer" target="_blank" rel="external">GMT 快速安装脚本</a> 测试不同的平台</li>
<li><a href="https://github.com/seisman/GMT5-pssac" target="_blank" rel="external">pssac for GMT5</a> 程序核心已完成，需要修复一些严重 BUG</li>
</ol>
<h2 id="博文征集">博文征集</h2>
<p>有些东西值得写，但是跟我目前的科研方向关系不大，所以没有足够的时间和动力去写。所以将这些我感兴趣的话题列出来，有了解相关方向且感兴趣的读者，可以考虑写一份投稿到本博客。</p>
<p>征集的博文列表见 <a href="https://github.com/seisman/seisman.info.posts/labels/%E6%AC%A2%E8%BF%8E%E6%8A%95%E7%A8%BF" target="_blank" rel="external">“欢迎投稿”标签</a>。</p>
<p>除此之外，读者也可以在评论区写下自己觉得有意义的话题，我会酌情将其列在待写博文中。</p>
<p>投稿可直接将完整的稿件发送给我，也可以在博客的 <a href="https://github.com/seisman/seisman.info.posts" target="_blank" rel="external">项目源码</a> 中发 Pull Request。</p>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用 psxy 绘制铁轨线]]></title>
      <url>http://seisman.info/plot-rail-tracks.html</url>
      <content type="html"><![CDATA[<p>想要绘制黑白相间的铁轨线。既然是画线，肯定要用 <code>psxy</code> 了，但是 <code>psxy</code> 命令自身是不支持画这种黑白相间的线的，因而就需要使用一些技巧。具体技巧如下例：</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=0/10/0/5</div><div class="line">J=M10c</div><div class="line">PS=test.ps</div><div class="line"></div><div class="line">gmt psbasemap -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B1 -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># Start rail tracks</span></div><div class="line">gmt psxy line.txt -J<span class="variable">$J</span> -R<span class="variable">$R</span> -K -O -W5p,black        &gt;&gt; test.ps</div><div class="line">gmt psxy line.txt -J<span class="variable">$J</span> -R<span class="variable">$R</span> -K -O -W4p,white,20_20: &gt;&gt; test.ps</div><div class="line"><span class="comment"># End rail tracks</span></div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>简单说明一下原理，其实就是每条线画两遍。第一个 <code>psxy</code> 命令绘制了一条宽度为 <code>5p</code> 的黑线。第二个 <code>psxy</code> 命令绘制了一条宽度为 <code>4p</code> 的线，这条线的线型 <code>20_20:</code> 表示线段先是长度为 <code>20p</code> 的白线， 然后是长度为 <code>20p</code> 的空白，线段的空白段由于是透明的，所以会把第一次画的黑色线段露出来。 最终就实现了铁轨线的效果。</p>
<p>绘图效果如下：</p>
<div class="figure">
<img src="/images/2016033001.png">

</div>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[判断 SAC 数据是否已去除仪器响应]]></title>
      <url>http://seisman.info/instrumental-response-removed-or-not.html</url>
      <content type="html"><![CDATA[<p>有些时候，波形数据拿到手了，但是却不知道波形数据是否有被处理过，尤其是有没有去除仪器响应。</p>
<p>先说结论，判断一个 SAC 数据是否已经去除仪器响应的准则是：</p>
<blockquote>
<p>若一个 SAC 数据中每个数据点的值都是整数，则这个数据的仪器响应没有被去除的概率为 99.9%</p>
</blockquote>
<a id="more"></a>
<p>几点说明：</p>
<ol style="list-style-type: decimal">
<li>可以使用 <a href="https://github.com/seisman/sac_tools" target="_blank" rel="external">sac2col</a> 将 SAC 的每个数据点提取出一列 ASCII 数据，这样就可以直观的去判断是否符合上述准则</li>
<li>这个准则仅对现代的数字地震仪成立</li>
</ol>
<p>要理解这个准则成立的原因，首先需要对仪器响应有清晰的认识。在博客的前几篇博文中 已经有了详细的介绍。简单来说，地面的运动物理量（比如速度，单位为 <code>m/s</code>）会首先被 转换成电压信号（单位为 <code>V</code>），然后每个电压值会被转换成离散的数字信号，数字信号的 最小间隔由模数转换器决定，故而现代数字地震仪的输出的单位总是 <code>counts</code>，即最原始的 波形数据总是最小间隔的整数倍。</p>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 仪器响应 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在极坐标下绘制深度剖面]]></title>
      <url>http://seisman.info/depth-profile-in-polar-coordinates.html</url>
      <content type="html"><![CDATA[<p>在做大区域层析成像时，通常需要绘制深度剖面。一个简单的示例如下：</p>
<div class="figure">
<img src="/images/2016031201.png">

</div>
<p>这样的深度剖面图实际上是在极坐标下绘制的。先直接给出绘制上图所使用的命令:</p>
<pre><code>gmt psbasemap -R60/80/5571/6371 -JPa15c/70z -Bx5 -By200 -BWNse &gt; test.ps</code></pre>
<a id="more"></a>
<p>要想理解这样一张图，首先要对极坐标投影有一定的了解。以 <code>-JP</code> 为例，其语法为:</p>
<pre><code>-JP[a]&lt;width&gt;[/&lt;base&gt;][r|z]</code></pre>
<p>先绘制一个最简单的极坐标的例子:</p>
<pre><code>gmt psbasemap -R0/360/0/6371 -JP15c -Bx30 -Byg2000 &gt; test.ps</code></pre>
<div class="figure">
<img src="/images/2016031202.png">

</div>
<p>从这张图中可以看出，theta 角的定义是相对于水平轴方向逆时针旋转的角度，且圆心处 r 值为 0，而 <code>-JP15c</code> 代表的是整个图的宽度，本图中也就是圆的直径。</p>
<p>回到具体的问题，因为要绘制 60 度到 80 度范围内 0 到 800 公里的一个深度剖面，所以 <code>-R</code> 的范围应该取为 <code>-R60/80/5571/6371</code> :</p>
<pre><code>gmt psbasemap -R60/80/5571/6371 -JP15c -Bx5 -By200 -BWNse &gt; test1.ps</code></pre>
<p>此时的效果图如下：</p>
<div class="figure">
<img src="/images/2016031203.png">

</div>
<p>需要尤其注意的是，此时 <code>-JP</code> 中的 15c 代表的依然是整个图的宽度，而不是其所对应的圆的半径或直径。</p>
<p>在这种图的基础上，将投影方式进一步修改为 <code>-JPa15c/70z</code> ，其中：</p>
<ol style="list-style-type: decimal">
<li><code>a</code> 的作用在于使得 theta 代表方位角，即相对于正北方向顺时针旋转的角度</li>
<li><code>z</code> 使得标注的不是半径而是深度，即标注的不是 5571 到 6371 而是 0 到 800</li>
<li><code>/70</code> 的作用是使得极坐标旋转 70 度，这样图看起来就更 “正” 了</li>
</ol>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用 SAC 快速拾取震相]]></title>
      <url>http://seisman.info/faster-ppk.html</url>
      <content type="html"><![CDATA[<p>震相拾取，是地震学的一个基本工作。SAC 提供了 <code>plotpk</code> 命令，可以用于手动拾取 震相到时，用起来还算是比较简单方便。</p>
<a id="more"></a>
<h2 id="痛点">痛点</h2>
<p>在使用 <code>plotpk</code> 拾取震相时，还是会遇到一些不如意的地方。尤其是在有大量波形 数据需要拾取的时候。下面列出我日常遇到的几个痛点：</p>
<ol style="list-style-type: decimal">
<li>拾取震相时通常需要按下 <code>T</code> 和数字键，有时还需要按下 <code>B</code> 或 <code>N</code> 来上下翻页。 效率低下，一方面需要按两次按键才能标记一个到时，另一方面大多数数字键与 <code>T</code> 距离较远，手指姿势比较别扭且容易误敲键盘</li>
<li>无法删除某个震相标记。如果想标记 T0，但是一不小心标记了 T1，此时没法将 T1 中的到时删除</li>
</ol>
<h2 id="解决办法">解决办法</h2>
<p>修改了 SAC 源码中的 <code>xppk.c</code> ，基本解决了以上痛点。关于源码的几点说明：</p>
<ol style="list-style-type: decimal">
<li>SAC 的协议规定了不能私自修改 SAC 源码，此处给出了修改后的 <code>xppk.c</code> ，低调低调</li>
<li>修改版源码基于 SAC v101.6a，所以在其他版本上可能无法使用</li>
<li>下载修改版源码，用其覆盖 SAC v101.6a 源码里的 <code>src/gam/xppk.c</code>，然后重新编译 SAC 即可</li>
</ol>
<p>源码下载： <a href="http://7j1zxm.com1.z0.glb.clouddn.com/downloads/xppk.c" target="_blank" rel="external">xppk.c</a></p>
<p>修改后的源码新增了如下功能：</p>
<ol style="list-style-type: decimal">
<li>直接使用数字键拾取震相，即省略了按键 <code>T</code> ，按 <code>0</code> 就拾取到时 T0，按 <code>1</code> 就拾取到时 T1</li>
<li>按下 <code>@</code> 键即可删除最近一次到时标记（A、F、P、S 以及 T0 到 T9）</li>
</ol>
<p>修改后的源码与原 SAC 有如下不兼容的地方：</p>
<ol style="list-style-type: decimal">
<li>原 SAC 中，数字键 0 到 4 被用于定义震相质量，修改后的源码中 0 到 9 则被用于标记震相到时</li>
<li>原 SAC 中，按键 <code>@</code> 用于一次性删除多个震相到时（A、F、P、S 和 T0），修改后的源码中 <code>@</code> 可以删除任意一个到时标记</li>
</ol>
<p>考虑到定义震相质量和一次性删除多个震相到时这两个功能很少用到，因而为了拾取 震相的便利性而废弃了这两个功能，虽然带来了不兼容问题，但是基本无伤大雅。</p>
<h2 id="一些说明">一些说明</h2>
<p>关于数字键标记到时的说明：</p>
<ol style="list-style-type: decimal">
<li>依然可以使用 <code>T + 数字键</code> 来标记到时。即 <code>T</code> 可以省略也可以不省略，兼容之前的标记到时的方法</li>
<li>在 ppk 模式下单击鼠标，相当于敲键 <code>L</code>，此时会在图上显示当前点的 X 和 Y 值， 所以如果可以通过简单的单击就标记到时，应该会更高效。但目前还没有实现该功能， 一方面是涉及到一些技术细节，另一方面是单击操作太容易发生，标记到时是 变得简单了，但误标记也变得容易发生</li>
</ol>
<p>关于 <code>@</code> 删除震相到时功能的说明：</p>
<ol style="list-style-type: decimal">
<li>实现原理：定义一个字符型变量，用于保存上一次按键，若新按键是 <code>@</code>，且上一 按键是 A、F、P、S 或 0 到 9 中的任意一个，则删除上一按键所对应的头段变量中的到时标记</li>
<li>表面上看，这一功能只能删除最近一次的到时标记，但实际上是可以删除任意文件的 任意一个到时标记的</li>
</ol>
<p>关于 <code>@</code> 删除震相到时功能的示例：</p>
<ol style="list-style-type: decimal">
<li>要拾取一个波形数据，在 ppk 模式下，按下数字 1，此时会标记到时 T1，再按下 @，由于上一 字符是 1，所以此时按下 <span class="citation">@会删除</span> T1 的到时标记。实际操作时，屏幕上会出现两个 T1，这是 显示的问题，通过放大缩小刷新一下图片就会发现到时 T1 已被删除</li>
<li>要拾取一个波形数据，在 ppk 模式下依次按下 0、1、2，此时会标记到时 T0、T1 和 T2。 此时按下 @，由于上一字符是 2，所以会删除 T2 中的到时。若想要删除 T0 的到时，则需要 先按下 0 再按下 @，按下 0 会重新标记到时 T0，再按下 <span class="citation">@时上一字符由于是</span> 0，所以会删除 T0 中的 到时。</li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2016-02-19：直接用数字键标记到时</li>
<li>2016-02-25：新增删除到时标记功能</li>
<li>2016-02-28：修复了 <span class="citation">@符号无法删除</span> P 和 S 到时的 BUG</li>
</ul>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SAC技巧 </tag>
            
            <tag> 震相 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于博客无法访问的说明]]></title>
      <url>http://seisman.info/gfw.html</url>
      <content type="html"><![CDATA[<p>最近，博客出现了无法访问的情况。就我自己遇到的情况来说，同一个实验室里，台式机连接了交换机，无法访问博客，笔记本连接了无线路由，则可以正常访问。</p>
<p>台式机下 ping 我的博客，总是返回 127.0.0.1，也就是本地地址。咨询了学校的网络管理员，得出的结论是 GFW 对 info 后缀的域名做了 DNS 污染，进而导致域名解析时返回 127.0.0.1，好忧伤。。。</p>
<p>就我掌握的情况来看：</p>
<ol style="list-style-type: decimal">
<li>某些地区会由于 DNS 污染而无法访问</li>
<li>DNS 污染似乎不是持续性的，时好时坏</li>
<li>手机 4G 网络不受影响</li>
<li>翻墙可以访问</li>
</ol>
<p>目前我无法解决此问题，因而如果你遇到无法访问本博客的问题，可以尝试通过如下方法来解决：</p>
<ol style="list-style-type: decimal">
<li>使用手机 4G 网络访问，前提是你不心疼流量</li>
<li><p>修改 hosts，在 hosts 文件中加入如下语句:</p>
<pre><code>192.30.252.153 seisman.info</code></pre>
<p>具体如何修改请自行解决</p></li>
<li>修改 DNS 服务器，比如可以使用科大 DNS，具体如何修改请自行解决</li>
<li><p>使用翻墙工具，比如 lantern 或者 XX-net</p></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[绘制颜色渐变的线条]]></title>
      <url>http://seisman.info/plot-lines-with-gradient-colors.html</url>
      <content type="html"><![CDATA[<p>想要绘制一条颜色变化的线段，下面是演示代码：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment"># GMT v5.2.1</span></div><div class="line"></div><div class="line">gmt makecpt -Crainbow -T-2/2/1 &gt; lines.cpt</div><div class="line">gmt psxy -JX15c/4c -R0/6/0/4 -B1 -Clines.cpt -W2p &gt; test.ps &lt;&lt; EOF</div><div class="line">&gt; -Z-1.5</div><div class="line">1 2</div><div class="line">2 2</div><div class="line">&gt; -Z-0.5</div><div class="line">2 2</div><div class="line">3 2</div><div class="line">&gt; -Z0.5</div><div class="line">3 2</div><div class="line">4 2</div><div class="line">&gt; -Z1.5</div><div class="line">4 2</div><div class="line">5 2</div><div class="line">EOF</div></pre></td></tr></table></figure>
<p>绘图效果如下图：</p>
<div class="figure">
<img src="/images/2016011801.png">

</div>
<a id="more"></a>
<p>简单解释一下：</p>
<ol style="list-style-type: decimal">
<li><code>makecpt</code> 命令制作了一个 - 2 到 2 间隔为 1 的 CPT 文件</li>
<li><code>psxy</code> 命令中使用了 <code>-C</code> 选项，此时需要输入数据是多段表数据，且每段数据的段头记录中，需要有 <code>-Z&lt;val&gt;</code> 以指定每段数据的 Z 值</li>
<li>实际绘图时，对于每段数据，命令会读取该数据数据的段头记录中的 <code>-Z&lt;val&gt;</code> 中的 Z 值，然后到 CPT 文件中查找 Z 值所对应的颜色，作为该段线段的颜色</li>
</ol>
<p>实际绘图时，可能遇到的情况是：已知 A 点和 B 点的 Z 值，A 点到 B 点连线上 Z 值渐变，想要通过线条颜色的渐变来体现 Z 值的渐变。此时需要一些额外的处理，其中涉及到一些编程，所以下面仅提供思路。</p>
<p>已知 A 点和 B 点坐标，利用如下命令将 A 到 B 的连线等分成若干份:</p>
<pre><code>gmt project -C&lt;xA&gt;/&lt;yA&gt; -E&lt;xB&gt;/&lt;yB&gt; -G&lt;dist&gt;</code></pre>
<p>其中 <code>-C</code> 后接 A 点坐标， <code>-E</code> 后接 B 点坐标， <code>-G</code> 后接等分后相邻两点间的距离。 <code>&lt;dist&gt;</code> 越小，A 到 B 线段的颜色变化就越平滑。</p>
<p>最终输出的结果中有三列数据：X 坐标、Y 坐标和与 A 点的距离。对于生成的每个点而言，根据 A 和 B 两点的 Z 值、A 和 B 两点之间的距离以及该点与 A 点之间的距离，通过简单的线性插值，即可得到每一点的 Z 值。</p>
<p>有了 AB 之间每一点的坐标和 Z 值，就可以构建如上例所示的多段数据。对于每段数据而言，其 Z 值可以取该段数据首尾两点 Z 值的平均，或者其他取法亦可。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SAC 中将位移记录转换成速度记录]]></title>
      <url>http://seisman.info/sac-convert-displacement-to-velocity.html</url>
      <content type="html"><![CDATA[<p>将位移记录转换成速度记录，本质上就是微分，在 SAC 中有三种方法可以实现。</p>
<p>先生成测试用的数据:</p>
<pre><code>SAC&gt; fg seis
SAC&gt; rmean; rtr; taper
SAC&gt; w seis.sac</code></pre>
<ol style="list-style-type: decimal">
<li><p>直接对 <code>diff</code> 命令对波形做时间域微分:</p>
<pre><code>SAC&gt; r ./seis.sac
SAC&gt; dif
SAC&gt; w seis.sac.diff</code></pre></li>
<li><p>用 <code>transfer</code> 命令去仪器响应的功能实现微分，该操作本质上在频率域完成:</p>
<pre><code>SAC&gt; r ./seis.sac
SAC&gt; transfer from none to vel
   Station (CDV), Channel (-12345)
SAC&gt; w seis.sac.transfer</code></pre></li>
<li><p>时间域的微分在频率域等效于乘以叫频率:</p>
<pre><code>SAC&gt; r ./seis.sac
SAC&gt; fft
 DC level after DFT is -0.0051373
SAC&gt; mulomega
SAC&gt; ifft
SAC&gt; w seis.sac.mulomega</code></pre></li>
</ol>
<p>测试结果表明，三种算法的结果差别很小，可以忽略。不过需要注意的是，使用 <code>diff</code> 做时间域微分时数据点数会少一个。</p>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SAC技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在地图上绘制特定的经纬线]]></title>
      <url>http://seisman.info/plot-specified-gridline-on-maps.html</url>
      <content type="html"><![CDATA[<p>问题：想要在地图上只绘制某条经线或 / 和某条纬线，该如何实现？</p>
<p>GMT 中的 <code>-B</code> 选项可以用于控制是否绘制网格线以及网格线的间隔。如果精心设计 <code>-B</code> 选项中的网格间隔以及第一条网格线的偏移量，是可以使得整张图中只有一条经线或 / 和纬线并保证该经线 / 纬线落在合适的位置，但是这种方法相对来说比较麻烦且很难用于批量绘图。</p>
<a id="more"></a>
<p>最好的解决办法是，直接用 <code>psxy</code> 绘制经线和纬线。具体示例如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">R=80/150/0/60</div><div class="line">J=B116/20/25/45/15c</div><div class="line">B=15</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">gmt psbasemap -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B<span class="variable">$B</span> -P -K &gt; <span class="variable">$PS</span></div><div class="line">gmt pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Ggray -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="built_in">echo</span> 116.46 39.92 | gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sc0.5c -Gred -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment">##### 核心命令</span></div><div class="line"></div><div class="line">``` bash</div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -W1p,blue,- -K -O -Am &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">&gt;</div><div class="line">116.46 0</div><div class="line">116.46 60</div><div class="line">&gt;</div><div class="line">80 39.92</div><div class="line">150 39.92</div><div class="line">EOF</div><div class="line"><span class="comment">#####</span></div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">rm gmt.*</div></pre></td></tr></table></figure>
<p>以上代码的绘图效果如下：</p>
<div class="figure">
<img src="/images/2015121101.png">

</div>
<p>最核心的命令已经在脚本中标出，该脚本中绘制了两条线段:</p>
<pre><code>&gt;
116.46 0
116.46 60
&gt;
80 39.92
150 39.92</code></pre>
<p>分别代表经线和纬线。</p>
<p>通常，GMT 会将两点按大圆路径连接起来。一条经线恰好是一个大圆路径，而一条纬线则不是大圆路径，因而需要做一些特殊的处理，即使用 <code>-Am</code> 或 <code>-Ap</code> 选项。 <code>-Am</code> 使得两点之间连线时先沿着经线走再沿着纬线走，<code>-Ap</code> 选项使得两点之间连线时先沿着纬线走再沿着经线走。此处，用 <code>-Am</code> 和 <code>-Ap</code> 效果都是一样的，可以试着把 <code>-Am</code> 选项去掉再绘图，来理解为什么要使用这个选项。</p>
<p>两条线段里，分别使用了 <code>-R</code> 选项中 Y 轴的范围和 X 轴的范围，所以以上代码完全可以通过定义变量来适应任意的情况。为了简单起见，就不再写更通用的版本了。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SOFI2D 笔记]]></title>
      <url>http://seisman.info/sofi2d-notes.html</url>
      <content type="html"><![CDATA[<p>SOFI2D 是一个二维 PSV 交错网格有限差分代码。要使用该程序，至少需要阅读如下几篇参考文献：</p>
<ul>
<li>Virieux, J. 1986. P-SV wave propagation in heterogeneous media: velocity-stress finite- difference method. Geophysics, 51(4), 889–901.</li>
<li>Levander, A.R. 1988. Fourth-order finite-difference P-SV seismograms. Geophysics, 53(11), 1425–1436.</li>
<li>SOFI2D User Guide</li>
</ul>
<p>具体的用法及每个参数的意义在官方文档已经介绍的很详细，本文是我使用 SOFI2D 过程中的经验总结。</p>
<p>注：本文使用的是 2015 年 10 月 28 日发布的 SOFI2D。</p>
<a id="more"></a>
<p>运行 SOFI2D 所需的文件都在 <code>par</code> 目录下，其中需要修改的文件包括：</p>
<ul>
<li><code>in_and_out/sofi2D.json</code></li>
<li><code>model/test</code></li>
<li><code>source/source.dat</code></li>
<li><code>receiver/receiver.dat</code></li>
</ul>
<p><code>in_and_out/sofi2d.json</code> 是程序的输入配置文件，配置文件是用 json 语法写的，并且将众多的 变量分成了若干类。在设计不同的速度模型时，某些变量基本不需要改动，某些变量则可能需要经常改动。</p>
<p>在设计模型时，可以按照如下顺序逐一修改或检查如下参数：</p>
<ol style="list-style-type: decimal">
<li>生成速度模型：2D 速度模型需要自己写程序生成，参考 <code>src/hh_elastic.c</code> 和 <code>genmod/2layer.c</code> ，并将生成的模型保存到 <code>model</code> 目录下</li>
<li><code>source/source.dat</code> 中指定震源时间函数的中心频率（也可从文件中读入震源时间函数）、振幅和时间延迟</li>
<li>估算震源时间函数的最大频率。如果是使用内置震源时间函数，可以近似认为最大频率是 中心频率的两倍，如果是从文件中读入自定义的震源时间函数，可以对其做 FFT，将振幅谱中的拐点作为最大频率</li>
<li><p>频散条件要求一个波长内要至少有 n 个网格点，因而要根据最大频率和最小速度计算出最大的网格间隔。在满足公式</p>
<p><span class="math display">\[dh \le \frac{V_{min}}{n f_{max}}\]</span></p>
<p>的前提下选择 <span class="math inline">\(dh\)</span> ，其中 n 由 <code>FDORDER</code> 决定</p></li>
<li><p>为了满足稳定性条件，要根据网格间隔和模型中的最大速度选择合适的时间步长。在满足公式</p>
<p><span class="math display">\[dt \le \frac{dh}{h \sqrt{2} V_{max}}\]</span></p>
<p>的前提下选择 <span class="math inline">\(dt\)</span> 值，其中 h 由 <code>FDORDER</code> 决定</p></li>
<li>修改 <code>in_and_out/sofi2d.json</code> 中的 <code>DH</code> 和 <code>DT</code></li>
<li><code>source/source.dat</code> 中指定震源位置</li>
<li><code>receiver/receiver.dat</code> 中指定台站位置</li>
<li>修改配置文件中的 2-D Grid 部分，指定 <code>NX</code> 和 <code>NY</code></li>
<li>根据计算机的核数以及 <code>NX</code> 和 <code>NY</code> 的值，修改 Domain Decomposition 部分</li>
<li><code>startSOFI2D.sh</code> 中 <code>-np</code> 后面的进程数应与 <code>NPROCX*NPROCY</code> 相等</li>
<li>修改配置文件中的 Time Stepping 部分</li>
<li><p>如果要生成波场快照的话，则修改 Snapshots 部分</p></li>
</ol>
<p>然后就可以开始计算了，每次修改模型之后，都需要按照上面的顺序检查各个参数。</p>
<p>使用过程中需要注意的一些地方：</p>
<ol style="list-style-type: decimal">
<li><p>运行 SOFI2D 时目录名必须为 <code>par</code> ，该目录下各个子目录的名字不可变</p>
<p>理论上运行目录是不是 <code>par</code> 都可以，各个子目录的名字在 <code>json</code> 文件中也是可以任意设定的。但实际运行的过程中如果运行目录不是 <code>par</code> 或者各个子目录的名字与默认的子目录名不一样都会直接报错退出。这实际上是代码 <code>src/check_fs.c</code> 的 bug 导致的，该代码的目的在于检查文件系统，即目录 是否存在，以及文件是否可读、可写。由于该代码将所有目录名硬编码在源码中， 所以导致各个目录名不可修改。解决办法有两个：</p>
<ol style="list-style-type: decimal">
<li>把主程序中对 <code>check_fs</code> 的调用注释掉</li>
<li>保留原 par 目录，每次自己新建目录，这样 <code>check_fs</code> 每次都会检查 <code>par</code> 目录，而不会检查新建的目录</li>
</ol></li>
<li>默认四个边界都是吸收边界， <code>FREE_SURF</code> 控制上表面是否为自由边界， <code>BOUNDARY</code> 控制左右是否为周期性边界条件</li>
<li><p>交错网格结构的定义如下:</p>
<pre><code>Txx,Tzz   Ux


Uz        Txz</code></pre>
<p>因而同一个网格点内的垂直分量要比水平分量深半个网格点。</p></li>
<li>源码中 <code>src/update_v_interior.c</code> 是时间二阶，空间二阶有限差分格式， 对应于 Virieux 1986，是最简单的一个</li>
<li>计算出的理论地震图，到时应以 onset 为准，而不是以 peak 为准。</li>
<li><p>sofi2d 与 fk，即便用完全相同的震源时间函数，其波形也是无法直接做对比的， 因为 fk 计算的是点源三维波场，sofi2d 计算的是线源二维波场，因而 sofi2d 计算的结果需要做线源到点源的转换</p></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 理论地震图 </tag>
            
            <tag> 有限差分 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[绘制事件与台站间的连线]]></title>
      <url>http://seisman.info/raypath-between-events-and-stations.html</url>
      <content type="html"><![CDATA[<p>地震学中，经常需要绘制事件到台站的连线或台站与台站之间的连线。连线沿着大圆路径，理论上用 <code>psxy</code> 命令即可实现，实际绘图时要更复杂一些。</p>
<a id="more"></a>
<h2 id="单事件多台站的连线">单事件多台站的连线</h2>
<p>假定单个事件的位置保存在文件 <code>event.loc</code> 中:</p>
<pre><code>4.5 5</code></pre>
<p>多个台站的位置保存到 <code>station.loc</code> 中:</p>
<pre><code>2 1
5 8
7 4
9 6</code></pre>
<h3 id="旧方法">旧方法</h3>
<p>GMT 4.x 以及 GMT 5.1.x，要实现单事件与多台站之间的连线，只有一种方法，即构建多段数据。</p>
<p>多段数据中，每段数据包含两个点，分别是事件位置和台站位置， <code>psxy</code> 命令会将多段数据中每段里的两个点连起来。在本例中，多段数据 <code>raypath.xy</code> 的内容如下:</p>
<pre><code>&gt;
4.5 5
2 1
&gt;
4.5 5
5 8
&gt;
4.5 5
7 4
&gt;
4.5 5
9 6</code></pre>
<p>使用如下命令即可绘制单地震到多台站的连线：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># GMT 5.1.2</span></div><div class="line"><span class="comment">#</span></div><div class="line">J=X10c/10c</div><div class="line">R=0/10/0/10</div><div class="line">PS=map.ps</div><div class="line">gmt psbasemap -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B1 -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 台站和事件位置</span></div><div class="line">gmt psxy station.loc -J<span class="variable">$J</span> -R<span class="variable">$R</span> -St0.4c -Gblack -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy event.loc -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sa0.8c -Gred -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 连线</span></div><div class="line">gmt psxy raypath.xy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -W1p,blue -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>绘图效果如下图：</p>
<div class="figure">
<img src="/images/2015111901.png">

</div>
<p>本方法的优点在于通用，缺点在于需要手动或写脚本，根据 <code>event.loc</code> 和 <code>station.loc</code> 的内容构建多段数据文件。</p>
<p>如何写脚本从 <code>station.loc</code> 和 <code>event.loc</code> 自动得到如上格式的文件，这是另外一个问题了，不在本文的讨论范围内。</p>
<h3 id="新方法">新方法</h3>
<p>GMT 5.2.1 增加了 <code>-F</code> 选项，可以更方便地实现事件与台站之间的连线。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># GMT 5.2.1</span></div><div class="line"><span class="comment">#</span></div><div class="line">J=X10c/10c</div><div class="line">R=0/10/0/10</div><div class="line">PS=map.ps</div><div class="line">gmt psbasemap -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B1 -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">gmt psxy station.loc -J<span class="variable">$J</span> -R<span class="variable">$R</span> -St0.4c -Gblack -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy event.loc -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sa0.8c -Gred -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">gmt psxy station.loc -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Fr4.5/5 -W1p,blue -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>此处关键在于 <code>-Fr4.5/5</code> 选项，即以 <code>4.5/5</code> 作为参考点，将 <code>station.loc</code> 中的所有点与参考点做连线。</p>
<h2 id="多事件多台站的连线">多事件多台站的连线</h2>
<p>对于多事件多台站的连线，旧方法同理。新方法中，需要对事件进行循环，提取事件的位置信息，并多次使用 <code>psxy -Fr&lt;evlo&gt;/&lt;evla&gt;</code> 语法。</p>
<p>对 Bash 不了解，这个例子用 Perl 来实现。 <code>event.loc</code> 中包含了多个事件的位置:</p>
<pre><code>4.5 5
5.5 5</code></pre>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env perl</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># GMT 5.2.1</span></div><div class="line"><span class="comment">#</span></div><div class="line"></div><div class="line"><span class="keyword">my</span> $J  = <span class="string">"X10c/10c"</span>;</div><div class="line"><span class="keyword">my</span> $R  = <span class="string">"0/10/0/10"</span>;</div><div class="line"><span class="keyword">my</span> $PS = <span class="string">"map.ps"</span>;</div><div class="line"></div><div class="line"><span class="keyword">system</span> <span class="string">"gmt psbasemap -J$J -R$R -B1 -K&gt; $PS"</span>;</div><div class="line"></div><div class="line"><span class="keyword">system</span> <span class="string">"gmt psxy station.loc -J$J -R$R -St0.4c -Gblack -K -O&gt;&gt; $PS"</span>;</div><div class="line"><span class="keyword">system</span> <span class="string">"gmt psxy event.loc -J$J -R$R -Sa0.8c -Gred -K -O&gt;&gt; $PS"</span>;</div><div class="line"></div><div class="line"><span class="keyword">open</span>(IN,<span class="string">"&lt;event.loc"</span>);</div><div class="line"><span class="keyword">foreach</span> <span class="keyword">my</span> $line (&lt;IN&gt;) &#123;</div><div class="line">    <span class="keyword">my</span> ($evlo, $evla) = <span class="keyword">split</span> <span class="string">" "</span>, $line;</div><div class="line">    <span class="keyword">system</span> <span class="string">"gmt psxy station.loc -J$J -R$R -Fr$evlo/$evla -W1p,blue -K -O&gt;&gt; $PS"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">system</span> <span class="string">"gmt psxy -J$J -R$R -T -O&gt;&gt; $PS"</span>;</div></pre></td></tr></table></figure>
<p>效果图：</p>
<div class="figure">
<img src="/images/2015111902.png">

</div>
<h2 id="台站间相互连线">台站间相互连线</h2>
<p>在做噪声成像之类的研究时，没有地震事件的概念，需要将台站之间互相连线，此时用 <code>-Fna</code> 选项即可。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># GMT 5.2.1</span></div><div class="line"><span class="comment">#</span></div><div class="line">J=X10c/10c</div><div class="line">R=0/10/0/10</div><div class="line">PS=map.ps</div><div class="line">gmt psbasemap -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Bx60 -By30 -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">gmt psxy station.loc -J<span class="variable">$J</span> -R<span class="variable">$R</span> -St0.4c -Gblack -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy station.loc -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Fna -W1p,blue -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>绘图效果如下图：</p>
<div class="figure">
<img src="/images/2015111903.png">

</div>
<h2 id="说明">说明</h2>
<ol style="list-style-type: decimal">
<li>构建多段数据是最通用的方法</li>
<li><code>-F</code> 选项的用法很丰富，详情见官方文档</li>
</ol>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 5.2.1 在 Linux 下的安装]]></title>
      <url>http://seisman.info/install-gmt5.2.x-under-linux.html</url>
      <content type="html"><![CDATA[<p><strong>本文不再维护更新，最新版本的GMT的安装方法见 <a href="http://docs.gmt-china.org/install-linux.html" class="uri" target="_blank" rel="external">http://docs.gmt-china.org/install-linux.html</a> </strong></p>
<p><strong>注意：</strong> 为 Ubuntu 和 CentOS 用户写了一个快速安装脚本，见 <a href="https://github.com/gmt-china/gmt-easy-installer" target="_blank" rel="external">gmt-easy-installer</a>。有兴趣的可以试着安装，也欢迎测试各种不同的平台。</p>
<p>本文介绍如何在 Linux 下安装 GMT 5.2.x。</p>
<p>GMT 5.2.x 系列的安装与 GMT 5.1.x 系列的安装稍有不同，故而在前文基础上单独写一篇。</p>
<a id="more"></a>
<p>说明：</p>
<ol style="list-style-type: decimal">
<li>仅适用于 5.2.1</li>
<li>所有命令均在一般用户下完成，需要 root 权限的命令都用 <code>sudo</code> 执行</li>
</ol>
<h2 id="下载">下载</h2>
<p>GMT 5.2.1 需要下载三个文件：</p>
<ol style="list-style-type: decimal">
<li>GMT 源码： <a href="http://mirrors.ustc.edu.cn/gmt/gmt-5.2.1-src.tar.gz" target="_blank" rel="external">gmt-5.2.1-src.tar.gz</a></li>
<li>全球海岸线数据 GSHHG： <a href="http://mirrors.ustc.edu.cn/gmt/gshhg-gmt-2.3.5.tar.gz" target="_blank" rel="external">gshhg-gmt-2.3.5.tar.gz</a></li>
<li>全球数字图表 DCW： <a href="http://mirrors.ustc.edu.cn/gmt/dcw-gmt-1.1.2.tar.gz" target="_blank" rel="external">dcw-gmt-1.1.2.tar.gz</a></li>
</ol>
<p>GMT 5.2.1 的源码包中，没有自带官方的 PDF 文档，需要额外下载：</p>
<ol style="list-style-type: decimal">
<li><a href="http://gmt.soest.hawaii.edu/doc/5.2.1/pdf/GMT_API.pdf" target="_blank" rel="external">GMT_API.pdf</a></li>
<li><a href="http://gmt.soest.hawaii.edu/doc/5.2.1/pdf/GMT_Docs.pdf" target="_blank" rel="external">GMT_Docs.pdf</a></li>
<li><a href="http://gmt.soest.hawaii.edu/doc/5.2.1/pdf/GMT_Manpages.pdf" target="_blank" rel="external">GMT_Manpages.pdf</a></li>
<li><a href="http://gmt.soest.hawaii.edu/doc/5.2.1/pdf/GMT_Tutorial.pdf" target="_blank" rel="external">GMT_Tutorial</a></li>
</ol>
<p>下载完成后，可以用 <code>md5sum</code> 检查压缩文件的 md5 值，以保证该文件是完整且未被篡改的:</p>
<pre><code>$ md5sum gmt-5.2.1-src.tar.gz gshhg-gmt-2.3.5.tar.gz dcw-gmt-1.1.2.tar.gz
df96d3cc9a93bc3c049f1523ada57117  gmt-5.2.1-src.tar.gz
12c6604d779ddd1727e96433da20e147  gshhg-gmt-2.3.5.tar.gz
45c99d30026742dbc0b1644ea64f496d  dcw-gmt-1.1.2.tar.gz</code></pre>
<h2 id="解决依赖关系">解决依赖关系</h2>
<h3 id="基础依赖包">基础依赖包</h3>
<p>GMT 的编译需要 C 和 C++ 编译器、cmake 等开发工具。</p>
<p>对于 Ubuntu/Debian:</p>
<pre><code>sudo apt-get update
sudo apt-get install gcc g++ cmake make libc6</code></pre>
<p>对于 CentOS/RHEL/Fedora:</p>
<pre><code>sudo yum install gcc gcc-c++ cmake make glibc</code></pre>
<p>GMT 的编译过程要求 cmake 的版本 <code>&gt;=2.8.5</code> ，需要注意：</p>
<ol style="list-style-type: decimal">
<li>安装 cmake 之后，可以通过 <code>cmake --version</code> 检查 cmake 版本；</li>
<li>CentOS <strong>6.5</strong> 的官方源中 cmake 的版本为 2.6.4，版本过低，无法满足要求；</li>
<li>CentOS <strong>6.6</strong> 的官方源中 cmake 的版本为 2.8.12，可以满足要求；</li>
<li>使用 CentOS 6.5 的用户可以 <code>yum update</code> 将系统升级到 6.6，即可使用较高版本的 cmake；</li>
<li>CentOS 6.5 用户若不愿意升级整个系统，则需要先安装 EPEL 源，再安装 EPEL 源中的 <code>cmake28</code> ，并且在接下来的编译过程中要将 <code>cmake</code> 命令改成 <code>cmake28</code>；</li>
<li>CentOS 7 官方源中 cmake 版本为 2.8.11，可以直接安装使用；</li>
</ol>
<h3 id="软件依赖包">软件依赖包</h3>
<p>GMT5 的依赖包，相对来说要复杂很多：</p>
<ul>
<li>看 PS 文件以及将 PS 转换成其他格式需要 <code>ghostscript</code></li>
<li>网格文件需要 <code>netCDF</code> （&gt;=4.0，且需要支持 netCDF-4/HDF5）</li>
<li>GLib 库：提供了 C 语言下的树、hash、列表和字符串功能</li>
<li>Perl 兼容正则表达式库 <a href="http://www.pcre.org/" target="_blank" rel="external">PCRE</a></li>
<li>地理空间数据抽象库 <a href="http://www.gdal.org/" target="_blank" rel="external">GDAL</a></li>
<li>Fourier 变换库 <a href="http://www.fftw.org/" target="_blank" rel="external">FFTW</a> (&gt;=3.3)</li>
<li>线性代数库 LAPACK 和 BLAS</li>
<li>如果想要自行编译文档的话还需要 <a href="http://sphinx-doc.org/" target="_blank" rel="external">Sphinx</a> 以及 TeXLive</li>
</ul>
<p>对于 Ubuntu/Debian:</p>
<pre><code>sudo apt-get update
# 必须安装的包
sudo apt-get install ghostscript libnetcdf-dev
sudo apt-get install libglib2.0-dev
# 推荐安装的包
sudo apt-get install libgdal-dev python-gdal
sudo apt-get install liblapack3
# 可选的安装包
sudo apt-get install libpcre3-dev libfftw3-dev</code></pre>
<p>对于 RHEL/CentOS/Fedora:</p>
<pre><code># 安装必须的包
sudo yum install ghostscript netcdf-devel
sudo yum install glib2-devel
# 推荐安装的包
sudo yum install gdal-devel gdal-python
sudo yum install lapack64-devel lapack-devel
# 可选的安装包
sudo yum install pcre-devel fftw-devel</code></pre>
<p>一些需要注意的地方:</p>
<ol style="list-style-type: decimal">
<li>一定不要试图自己手动编译 netCDF，因为手动编译很难解决依赖问题，网上的大多数手动编译 netCDF 的教程中都关闭了 netCDF 对 HDF5 的支持，因而导致 GMT5 无法使用。如果在阅读本文之前曾经手动编译过，一定要将原来手动编译生成的文件删除干净。通常可以使用 <code>locate netcdf</code> 找到 <code>/usr/local</code> 目录下的与 netCDF 相关的文件，直接删除即可。</li>
<li>CentOS 官方源中不带有 netCDF，需要先安装 EPEL 源</li>
<li>pcre、fftw 和 gdal 不是必须要安装的，但是推荐安装。其中 gdal 在做数据格式转换时非常有用；</li>
<li>其他发行版很久不用了，不清楚细节，读者可以在使用过程中补充。</li>
</ol>
<h2 id="安装-gmt">安装 GMT</h2>
<p>将之前下载的三个压缩文件以及四个 PDF 文档都放在同一个目录里，以下假定目录名为 <code>/home/seisman/Desktop/GMT</code>：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 当前目录名为 /home/seisman/Desktop/GMT</span></div><div class="line">$ <span class="built_in">pwd</span></div><div class="line">/home/seisman/Desktop/GMT</div><div class="line"></div><div class="line"><span class="comment"># 当前目录下包含了三个压缩文件和四个 PDF 文档</span></div><div class="line">$ ls</div><div class="line">dcw-gmt-1.1.2.tar.gz  gmt-5.2.1-src.tar.gz  gshhg-gmt-2.3.5.tar.gz</div><div class="line">GMT_API.pdf  GMT_Docs.pdf  GMT_Manpages.pdf  GMT_Tutorial.pdf</div><div class="line"></div><div class="line"><span class="comment"># 解压三个压缩文件</span></div><div class="line">$ tar -xvf gmt-5.2.1-src.tar.gz</div><div class="line">$ tar -xvf gshhg-gmt-2.3.5.tar.gz</div><div class="line">$ tar -xvf dcw-gmt-1.1.2.tar.gz</div><div class="line"></div><div class="line"><span class="comment"># 将 gshhg 和 dcw 数据复制到 gmt 的 share 目录下</span></div><div class="line">$ mv gshhg-gmt-2.3.5 gmt-5.2.1/share/gshhg</div><div class="line">$ mv dcw-gmt-1.1.2 gmt-5.2.1/share/dcw-gmt</div><div class="line"></div><div class="line"><span class="comment"># 将 PDF 复制到 doc_release 目录下</span></div><div class="line">$ mv *.pdf gmt-5.2.1/doc_release/pdf</div><div class="line"></div><div class="line"><span class="comment"># 切换到 gmt 源码目录下</span></div><div class="line">$ <span class="built_in">cd</span> gmt-5.2.1</div><div class="line"></div><div class="line"><span class="comment"># 新建用户配置文件</span></div><div class="line">$ gedit cmake/ConfigUser.cmake</div></pre></td></tr></table></figure>
<p>向 <code>cmake/ConfigUser.cmake</code> 文件中加入如下语句:</p>
<pre><code>set (CMAKE_INSTALL_PREFIX &quot;/opt/GMT-5.2.1&quot;)
set (GMT_INSTALL_MODULE_LINKS FALSE)
set (COPY_GSHHG TRUE)
set (COPY_DCW TRUE)
set (GMT_USE_THREADS TRUE)</code></pre>
<ul>
<li><code>CMAKE_INSTALL_PREFIX</code> 设置 GMT 的安装路径，可以修改为其他路径</li>
<li><code>GMT_INSTALL_MODULE_LINKS</code> 为 FALSE，表明不在 GMT 的 bin 目录下建立命令的软链接，也可设置为 TRUE</li>
<li><code>COPY_GSHHG</code> 为 TRUE 会将 GSHHG 数据复制到 <code>GMT/share/coast</code> 下</li>
<li><code>COPY_DCW</code> 为 TRUE 会将 DCW 数据复制到 <code>GMT/share/dcw</code> 下</li>
<li><code>GMT_USE_THREADS</code> 表示是否开启某些模块的并行功能（CentOS 6.x 下，需设置为 <code>FALSE</code>）</li>
</ul>
<p>以下几点说明，仅供高阶用户阅读：</p>
<ol style="list-style-type: decimal">
<li>GMT 提供了用户配置的模板文件 <code>cmake/ConfigUserTemplate.cmake</code>，其中包含了众多可配置的变量以及大量的注释说明。可以直接将该文件名复制为 <code>cmake/ConfigUser.cmake</code>，然后在模板基础上做修改，以自定义 GMT 的安装。仅供高阶用户使用</li>
<li><code>CMAKE_INSTALL_MODULE_LINKS</code> 的作用是在 GMT 的 bin 目录下建立命令的软链接，以兼容 GMT4 语法，建议设置为 FALSE</li>
<li>配置文件中 <code>GSHHG_ROOT</code> 和 <code>DCW_ROOT</code> 可以用于指定数据所在路径。此处已将数据放在 GMT 的 share 目录下，使得在配置过程中 GMT 可以自动找到，因而不需要设置这两个变量</li>
<li>若系统中存在多个 GMT 的版本，按照上面的做法会存在多个 GSHHG 和 DCW 数据的副本，造成数据冗余。此时，可以将 gshhg 和 dcw 数据放在专门的目录中，比如 <code>/home/seisman/Datas/</code> 目录下。然后有两种解决办法：
<ol style="list-style-type: decimal">
<li><p>完全按照上面的做法，在安装完成后，删除 <code>/opt/GMT-5.2.1/share</code> 目录下的 <code>coast</code> 和 <code>dcw</code> 两个目录，并建立两个指向数据的真实数据的软链接:</p>
<pre><code>$ cd /opt/GMT-5.2.1/share
$ sudo rm -r coast/
$ sudo rm -r dcw/
$ sudo ln -s /home/seisman/Datas/gshhg-gmt-2.3.5 gshhg
$ sudo ln -s /home/seisman/Datas/dcw-gmt-1.1.2 dcw</code></pre></li>
<li><p>设置配置文件如下:</p>
<pre><code>set (CMAKE_INSTALL_PREFIX&quot;/opt/GMT-5.2.1&quot;)
set (GMT_INSTALL_MODULE_LINKS FALSE)
set (GSHHG_ROOT&quot;/home/seisman/Datas/gshhg-gmt-2.3.5&quot;)
set (COPY_GSHHG FALSE)
set (DCW_ROOT&quot;/home/seisman/Datas/dcw-gmt-1.1.1&quot;)
set (COPY_DCW FALSE)
set (GMT_USE_THREADS TRUE)</code></pre></li>
</ol></li>
</ol>
<p>继续执行如下命令以检查 GMT 的依赖关系:</p>
<pre><code>$ mkdir build
$ cd build/
$ cmake ..</code></pre>
<p><code>cmake ..</code> 会检查 GMT 对软件的依赖关系，我的检查结果如下:</p>
<pre><code>*  Options:
*  Found GSHHG database       : /home/seisman/Desktop/GMT/gmt-5.2.1/share/gshhg (2.3.5)
*  Found DCW-GMT database     : /home/seisman/Desktop/GMT/gmt-5.2.1/share/dcw-gmt
*  NetCDF library             : /usr/lib64/libnetcdf.so
*  NetCDF include dir         : /usr/include
*  GDAL library               : /usr/lib64/libgdal.so
*  GDAL include dir           : /usr/include/gdal
*  FFTW library               : /usr/lib64/libfftw3f.so
*  FFTW include dir           : /usr/include
*  Accelerate Framework       :
*  Regex support              : PCRE (/usr/lib64/libpcre.so)
*  ZLIB library               : /usr/lib64/libz.so
*  ZLIB include dir           : /usr/include
*  LAPACK library             : yes
*  License restriction        : no
*  Triangulation method       : Shewchuk
*  OpenMP support             : enabled
*  GLIB GTHREAD support       : enabled
*  PTHREAD support            : enabled
*  Build mode                 : shared
*  Build GMT core             : always [libgmt.so]
*  Build PSL library          : always [libpostscriptlight.so]
*  Build GMT supplements      : yes [supplements.so]
*  Build GMT Developer        : yes
*  Build proto supplements    : none
*
*  Locations:
*  Installing GMT in          : /opt/GMT-5.2.1
*  GMT_DATADIR                : /opt/GMT-5.2.1/share
*  GMT_DOCDIR                 : /opt/GMT-5.2.1/share/doc
*  GMT_MANDIR                 : /opt/GMT-5.2.1/share/man
-- Configuring done
-- Generating done</code></pre>
<p>正常情况下的检查结果应该与上面给出的类似。若出现问题，则需要检查之前的步骤是否有误，检查完毕后重新执行 <code>cmake ..</code> ，直到出现类似的检查结果。检查完毕后，开始编译和安装:</p>
<pre><code>$ make -j
$ sudo make -j install</code></pre>
<h2 id="自行编译文档">自行编译文档</h2>
<p>如果系统中安装了 sphinx 和 LaTeX，则可以自行编译文档。一般情况下，不建议自行编译文档，官方提供的文档已经足够:</p>
<pre><code>$ make -j docs_man          # 生成 man 文档
$ make -j docs_html         # 生成 HTML 文档
$ make -j docs_pdf          # 生成 PDF 文档
$ make -j docs_pdf_shrink   # 生成更小的 PDF 文档
$ sudo -j make install</code></pre>
<h2 id="修改环境变量">修改环境变量</h2>
<p>修改环境变量并使其生效：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="string">'export GMT5HOME=/opt/GMT-5.2.1'</span> &gt;&gt; ~/.bashrc</div><div class="line">$ <span class="built_in">echo</span> <span class="string">'export PATH=$&#123;GMT5HOME&#125;/bin:$PATH'</span>&gt;&gt; ~/.bashrc</div><div class="line">$ <span class="built_in">echo</span> <span class="string">'export LD_LIBRARY_PATH=$&#123;LD_LIBRARY_PATH&#125;:$&#123;GMT5HOME&#125;/lib64'</span>&gt;&gt; ~/.bashrc</div><div class="line">$ <span class="built_in">exec</span> <span class="variable">$SHELL</span> <span class="_">-l</span></div></pre></td></tr></table></figure>
<p>说明</p>
<ul>
<li>第一个命令向 <code>~/.bashrc</code> 中添加环境变量 <code>GMT5HOME</code></li>
<li>第二个命令修改 <code>~/.bashrc</code> ，将 GMT5 的 bin 目录加入到 <code>PATH</code> 中</li>
<li>第三个命令将 GMT5 的 lib 目录加入到动态链接库路径中，若为 32 位系统，则为 <code>lib</code> ；64 位系统则为 <code>lib64</code> ；</li>
<li>第四个命令是重新载入 bash，相当于 <code>source ~/.bashrc</code></li>
<li>某些发行版下可能需要写入到 <code>~/.bash_profile</code> 而不是 <code>~/.bashrc</code></li>
<li>某些发行版下可能需要退出再重新登陆，或关机重启</li>
</ul>
<h2 id="测试是否安装成功">测试是否安装成功</h2>
<p>在终端键入 <code>gmt</code> ，若出现如下输出，则安装成功:</p>
<pre><code>$ gmt --version
5.2.1</code></pre>
<p>Ubuntu 14.04/15.04 以及部分 Debian 用户，可能会出现如下信息:</p>
<pre><code>$ gmt
Sub-commands for gmt:
install    install more modules
ERROR: Please specify valid params for &#39;gmt&#39;.</code></pre>
<p>出现该错误的原因是这几个发行版中的 <code>libgenome-perl</code> 包中提供了同名的命令 <code>/usr/bin/gmt</code> ，把该软件包卸载即可。</p>
<h2 id="参考来源">参考来源</h2>
<ol style="list-style-type: decimal">
<li><a href="http://gmtrac.soest.hawaii.edu/projects/gmt/wiki/BuildingGMT" class="uri" target="_blank" rel="external">http://gmtrac.soest.hawaii.edu/projects/gmt/wiki/BuildingGMT</a></li>
<li><a href="/install-gmt4-under-linux.html">GMT4.5.14 在 Linux 下的安装</a></li>
<li><a href="/install-gmt5-under-linux.html">GMT5.1.2 在 Linux 下的安装</a></li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2015-11-13：根据 5.1.2 的安装步骤更新至 5.2.1；</li>
<li>2015-12-23： <code>GMT_USE_THREADS</code> 功能需要安装 glib2 库文件；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 安装 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地震数据申请]]></title>
      <url>http://seisman.info/seismic-waveform-data-request.html</url>
      <content type="html"><![CDATA[<p>申请地震波形数据，按照具体的需求，大致可以分为两大类，即事件波形数据和连续波形数据。</p>
<p>这两者的主要区别在于如何确定要申请的数据时间窗，前者需要震相到时信息，后者则不需要。</p>
<a id="more"></a>
<h2 id="事件波形数据">事件波形数据</h2>
<ol style="list-style-type: decimal">
<li>筛选事件
<ol style="list-style-type: decimal">
<li>获取地震目录，比如 GCMT、USGS PDE、ISC</li>
<li>从地震目录中获取某个特定事件的信息</li>
<li>或根据条件筛选出需要的事件信息，筛选条件包括：
<ol style="list-style-type: decimal">
<li>经纬度范围</li>
<li>深度范围</li>
<li>时间范围</li>
<li>震级范围</li>
</ol></li>
</ol></li>
<li>筛选台站，筛选条件包括：
<ol style="list-style-type: decimal">
<li>台站位置</li>
<li>仪器类型（宽频带、长周期、短周期等）</li>
<li>分量类型（三分量或只要 Z 分量）</li>
</ol></li>
<li><p>波形起始和结束时间</p>
<p>需要根据发震时刻和震中距信息，计算理论到时，由此确定要申请的数据时间窗。</p>
<p>波形起始时间可以取发震时刻或相对于某震相的时刻（比如 P 波前 5 分钟）等等。波形结束时间可以通过数据长度指定，也可以直接指定相对于某震相到时的时刻（比如 S 波之后 10 分钟）。</p></li>
<li><p>选择数据格式，比如 SAC 或 SEED</p></li>
</ol>
<p>事件波形数据又可以进一步分成两类：以事件为中心的事件波形数据和以台站为中心的事件波形数据。</p>
<p>像地震定位、地震震源机制等问题，一般都需要以事件为中心的事件波形数据。此类情况下，通常先筛选地震事件再筛选台站。在筛选台站时，可以额外加上震中距范围和方位角范围的限制。</p>
<p>像接收函数等问题，一般需要以台站为中心的事件波形数据。此类情况下，通常先筛选台站再筛选事件。在筛选事件时，可以额外加上震中距范围和反方位角范围的限制。</p>
<h2 id="连续波形数据">连续波形数据</h2>
<p>连续波形数据中没有地震事件的信息，因而都是以台站为中心的，比如背景噪声相关。</p>
<ol style="list-style-type: decimal">
<li>选择台站，筛选条件：
<ol style="list-style-type: decimal">
<li>台站位置</li>
<li>仪器类型（宽频带、长周期、短周期等）</li>
<li>分量类型（三分量或只要 Z 分量）</li>
</ol></li>
<li>确定时间范围：选择合适的时间范围</li>
<li>选择数据格式，比如 SAC 或 SEED</li>
</ol>
<p>根据地震事件的信息以及震中距信息，计算震相的理论走时，再根据事件发震时刻得到震相的绝对时刻，进而确定要申请数据的绝对时间范围。本质上，事件波形数据是连续波形数据的一个子集。</p>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据申请 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[rdseed 用法笔记]]></title>
      <url>http://seisman.info/rdseed-notes.html</url>
      <content type="html"><![CDATA[<p><code>rdseed</code> 是 IRIS 提供的工具，用于读取 SEED 格式，从中提取出波形信息，并将波形数据保存为 SAC、AH、CSS、SEGY 或 ASCII 等多种数据格式。</p>
<a id="more"></a>
<h2 id="语法说明">语法说明</h2>
<p>安装好 <code>rdseed</code> 之后在终端键入 <code>rdseed -h</code> 或 <code>rdseed -u</code> 即可查看命令的选项及语法说明。 <code>rdseed</code> 命令的选项众多，下面按照选项的重要性从高到低排序。</p>
<p>比较重要且常用的选项：</p>
<ul>
<li><code>-f file</code> ：输入的 SEED 文件名。 <code>rdseed</code> 一次只能处理一个 SEED 文件。</li>
<li><code>-d</code> ：从 SEED 数据中提取波形数据</li>
<li><code>-o n</code> ：输出波形数据的格式，默认为 SAC 格式。<code>n</code> 可以取 1–9，分别表示 SAC（1）、 AH（2）、CSS（3）、miniSEED（4）、SEED（5）、SAC ASCII（6）、SEGY（7）、 Simple ASCII(SLIST)（8）和 Simple ASCII(TSPAIR)（9）。</li>
<li><code>-R</code> ：输出 RESP 格式的仪器响应文件</li>
<li><code>-p</code> ：输出 SAC PZ 格式的仪器响应文件</li>
<li><code>-E</code> ：输出的波形数据的文件名中包含结束时间</li>
<li><code>-q</code> ：指定输出目录，该目录必须已经存在。默认输出到当前目录。</li>
<li><code>-Q</code> ：选择波形数据的质量，可以取
<ul>
<li><code>E</code> ：全部质量的波形数据</li>
<li><code>D</code> ：不确定状态的数据</li>
<li><code>M</code> ：已合并的数据</li>
<li><code>R</code> ：原始波形数据</li>
<li><code>Q</code> ：经过质量控制的数据</li>
</ul></li>
<li><code>-b n</code> ：输出的波形数据的最大数据点数，默认值为 <code>20000000</code>。若波形数据的的数据 点数超过该值，则会给出警告并把数据分割成多段。</li>
<li><code>-g file</code>：为 SEED 或 miniSEED 数据单独指定响应文件。响应文件可以是 SEED 格式也可以是 dateless SEED 格式，也可以通过设置环境变量 <code>ALT_RESPONSE_FILE</code> 指定响应文件，这样 做的好处在于可以多个 SEED 文件共用一套响应文件。</li>
<li><code>-h</code> 或 <code>-u</code> ：显示命令的用法</li>
<li><code>-z n</code> ：检查并校正数据极性，在下面会单独介绍</li>
</ul>
<p>不常用的选项：</p>
<ul>
<li><code>-a</code> ：提取缩略词词典</li>
<li><code>-c</code> ：提取文件内容的目录信息</li>
<li><code>-C STN|CHN</code> ： 提取台站或分量的注释信息</li>
<li><code>-l</code> ：列出每个 block 的内容</li>
<li><code>-s</code> ：输出全部台站的 RESP 格式仪器响应文件到终端</li>
<li><code>-S</code> ：提取台站的汇总信息到文件 <code>rdseed.stations</code>，内容包括台站名、台网名、经纬度、 海拔、分量、台站开始时间和结束时间</li>
<li><code>-t</code>：输出波形相关信息到终端，包括台站名、分量名、台网名、位置码、质量控制符、 波形开始时间和结束时间、采样率、数据点数</li>
<li><code>-v n</code> ：选择卷号，默认值为 1。对于 SEED 文件 <code>n</code> 只能取 1</li>
<li><code>-k</code> ：跳过数据点数为 0 的记录</li>
<li><code>-e</code> ：提取事件 / 台站数据到文件 <code>rdseed.events</code></li>
<li><code>-i</code> ：忽略位置码</li>
<li><code>-x file</code> ：使用 <code>JWEED</code> 生成的 summary 文件，根据 summary 文件提取指定台站、分量和时间窗内的波形数据</li>
</ul>
<h2 id="正负极性及其校正">正负极性及其校正</h2>
<p>地震仪的每个分量都有一个传感器，每个传感器都有一个敏感轴，仪器记录的就是敏感轴方向的运动物理量。每个敏感轴都有一个正方向，若地面运动与敏感轴的正方向一致，则输出为正值，若地面运动与敏感轴的正方向相反，则输出为负值。</p>
<p>SAC 头段中的 <code>cmpaz</code> 和 <code>cmpinc</code> 是用于描述仪器敏感轴正方向的最通用也是最准确的方法。 <code>cmpaz</code> 是敏感轴的方位角，定义为从 N 向开始顺时针旋转的角度， <code>cmpinc</code> 是敏感轴的入射角， 定义为相对于垂直向上方向旋转的角度。</p>
<p>几个比较特殊的方向是：垂直方向、正东西向、正南北向，在 SAC 中方位码分别为 <code>Z</code> 、 <code>E</code> 和 <code>N</code> 。下表列出了这六个方向所对应的 <code>cmpaz</code> 和 <code>cmpinc</code> 。</p>
<table>
<thead>
<tr class="header">
<th align="left">方向</th>
<th align="left"><code>cmpaz</code></th>
<th align="left"><code>cmpinc</code></th>
<th align="left">方位码</th>
<th align="left">极性</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">垂直向上</td>
<td align="left">&gt; 0</td>
<td align="left">&gt; 0</td>
<td align="left">&gt; Z</td>
<td align="left">&gt; 正</td>
</tr>
<tr class="even">
<td align="left">垂直向下</td>
<td align="left">&gt; 0</td>
<td align="left">&gt; 180</td>
<td align="left">&gt; Z</td>
<td align="left">&gt; 负</td>
</tr>
<tr class="odd">
<td align="left">正北</td>
<td align="left">&gt; 0</td>
<td align="left">&gt; 90</td>
<td align="left">&gt; N</td>
<td align="left">&gt; 正</td>
</tr>
<tr class="even">
<td align="left">正南</td>
<td align="left">&gt; 180</td>
<td align="left">&gt; 90</td>
<td align="left">&gt; N</td>
<td align="left">&gt; 负</td>
</tr>
<tr class="odd">
<td align="left">正东</td>
<td align="left">&gt; 90</td>
<td align="left">&gt; 90</td>
<td align="left">&gt; E</td>
<td align="left">&gt; 正</td>
</tr>
<tr class="even">
<td align="left">正西</td>
<td align="left">&gt; 270</td>
<td align="left">&gt; 90</td>
<td align="left">&gt; E</td>
<td align="left">&gt; 负</td>
</tr>
</tbody>
</table>
<p>对于一个方位码为 <code>Z</code> 的数据，其分量方向有两种可能性：垂直向上和垂直向下。根据 SAC 中 NEU 坐标系的 定义，垂直向上方向为正极性，垂直向下方位为负极性。同理，正东和正北是正极性，正西和正南为负极性。</p>
<p>由上表可知，通过检查分量的 <code>cmpaz</code> 和 <code>cmpinc</code> 即可判断是是正极性还是负极性。某些情况下， 分量角度是正常的，但仪器响应中的总增益是负值，也可用于表示负极性，但这种情况很少见到，目前缺乏数据做测试，因而暂且先不考虑增益为负的这种情况。</p>
<p><code>rdseed</code> 中 <code>-z n</code> 选项可以用于检测并校正负极性。</p>
<ul>
<li><code>n=0</code> 表示不做极性检测；</li>
<li><code>n=1</code> 表示只检查 <code>cmpaz</code> 或 <code>cmpinc</code>；若是负极性，则反转所有数据点的正负号并修改 <code>cmpaz</code> 或 <code>cmpinc</code> 的值；</li>
<li><code>n=2</code> 表示只检查总增益的正负值；若为负值即表示负极性，则反转所有数据的正负号但不修改 <code>cmpaz</code> 或 <code>cmpinc</code>；</li>
<li><code>n=3</code> 表示同时检查 <code>cmpaz</code> 或 <code>cmpinc</code> 以及总增益的正负值，仅当其中之一符合负极性的要求时才做校正；</li>
</ul>
<p>需要注意，正负极性的概念仅适用于 6 个标准分量方向。对于垂向分量而言，通常需要校正极性，否则在 查看 Z 分量的波形数据时，可能会出现某个台站的波形极性不对的状况；对于水平向分量而言，由于通常会 旋转到大圆路径方向，所以不做极性校正，也不会有问题。总之，建议使用 <code>-z 1</code> 选项做极性校正。</p>
<h2 id="用法示例">用法示例</h2>
<p>从 SEED 文件中提取波形数据和 RESP 仪器响应文件：</p>
<pre><code>rdseed -R -d -f infile.seed</code></pre>
<p>其中，选项 <code>-R -d -f</code> 可以合写成 <code>-Rdf</code> 。</p>
<p>从 SEED 文件中提取波形数据和 SAC PZ 仪器响应文件：</p>
<pre><code>rdseed -pdf infile.seed</code></pre>
<p>从 miniSEED 文件中提取波形数据，并指定 dataless SEED 文件作为仪器响应文件：</p>
<pre><code>rdseed -Rdf infile.miniseed -g infile.dataless</code></pre>
<h2 id="警告与错误">警告与错误</h2>
<p>使用 <code>rdseed</code> 的过程中可能会遇到一些警告和错误。这些警告和错误会显示在终端，也会记录到日志文件 <code>rdseed.err_log</code> 中。</p>
<h3 id="警告-1">警告 1</h3>
<pre><code>Warning... Azimuth and Dip out of Range on AAK,BH1
Defaulting to subchannel identifier (for multiplexed data only)</code></pre>
<p>若分量的 <code>cmpaz</code> 和 <code>cmpinc</code> 所指定的传感轴方向与垂直方向的偏差很小，比如偏差在两度以内， 则将该分量的方位码设置为 <code>Z</code> 。对于近正东西和近南北方向，设置分量方位码为 <code>E</code> 和 <code>N</code> 。</p>
<p>若分量的敏感轴方向不与垂直向、正东西向、正南北向相近，则会出现此警告，此时可能会设置分量的范围码为 <code>1</code> 或其他的字符。因而该警告可忽略。</p>
<h3 id="警告-2">警告 2</h3>
<pre><code>Warning... Azimuth/Dip Reversal found FURI.BHZ, Data inversion was not selected</code></pre>
<p>该警告表示，根据分量的 <code>cmpaz</code> 和 <code>cmpinc</code> 检测到当前分量是负极性，但不对数据作极性校正。这种情况下使用 <code>-z 1</code> 选项，会修改数据的正负号，并将台站角度修改为正极性方向。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> SEED </tag>
            
            <tag> 比例 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[判断点在多边形内]]></title>
      <url>http://seisman.info/points-inside-polygons.html</url>
      <content type="html"><![CDATA[<p>在处理数据或绘图时，有时会需要判断点是否在一个封闭多边形内。比如想要筛选出某个多边形区域内的所有地震事件。GMT 的 <code>gmtselect</code> 命令可以实现这一需求。</p>
<a id="more"></a>
<p>假设有一个多边形文件 <code>polygon.xy</code> ，其内容为:</p>
<pre><code>2 2
7 5
5 8
4 7
2 5</code></pre>
<p>构成了一个不规则的多边形。</p>
<p>有一个数据点文件 <code>points.xy</code> ，其内容为:</p>
<pre><code>1 1
3 3
5 5
7 7
4 6
6 8
6 2</code></pre>
<p>现在想要筛选出位于多边形内的所有数据点，可以使用 <code>gmtselect</code> 命令:</p>
<pre><code>$ gmt gmtselect points.xy -Fpolygon.xy
3 3
5 5
4 6</code></pre>
<p>画图验证一下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">J=X10c/10c</div><div class="line">R=0/10/0/10</div><div class="line">PS=test.ps</div><div class="line"></div><div class="line">gmt psbasemap -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B1 -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制多边形</span></div><div class="line">gmt psxy polygon.xy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -W2p -L -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 绘制所有数据点：红色圆圈</span></div><div class="line">gmt psxy points.xy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sc0.2c -Gred -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 绘制多边形内的数据点：蓝色三角</span></div><div class="line">gmt gmtselect points.xy -Fpolygon.xy | gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -St0.8c -W2p,blue -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>上面的命令中， <code>gmtselect</code> 筛选出了 <code>points.xy</code> 的所有数据点中位于多边形 <code>polygon.xy</code> 中的点，通过管道传递给 <code>psxy</code> 命令。</p>
<div class="figure">
<img src="/images/2015101001.png">

</div>
<p>当然，也可以筛选出不在多边形内的点:</p>
<pre><code>$ gmt gmtselect points.xy -Fpolygon.xy -If
1 1
7 7
6 8
6 2</code></pre>
<p>更多的选项及功能，参考 <code>gmtselect</code> 命令的语法说明。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用 Wilber 3 申请地震波形数据]]></title>
      <url>http://seisman.info/wilber3.html</url>
      <content type="html"><![CDATA[<p>Wilber3 是 IRIS 提供的一个用于从 IRIS 申请地震事件波形数据的网页工具。</p>
<ul>
<li>官方页面： <a href="http://ds.iris.edu/wilber3/find_event" class="uri" target="_blank" rel="external">http://ds.iris.edu/wilber3/find_event</a></li>
<li>优点： 网页界面，简单直观</li>
<li>适用范围： 仅适用于申请单个或少量地震事件的波形数据</li>
</ul>
<p>本文将以 2015 年 5 月 12 日的尼泊尔 7.3 级地震为例，展示如何利用 Wilber3 申请该事件的波形数据。</p>
<a id="more"></a>
<h2 id="事件选择">事件选择</h2>
<p>进入 Wilber 主页，界面显示如图：</p>
<div class="figure">
<img src="/images/2015092801.png">

</div>
<p>全球地震目录中有非常多地震，首先要从中筛选中自己想要的事件。</p>
<p>图中 A 区显示了当前载入的地震目录的范围。默认载入 “过去 30 天全部震级的事件”，还可以选择载入 “过去 12 个月 4.0 级以上的事件”，或者 “1990 年以来 5.5 级以上的事件”，当然也可以完全自定义时间范围和震级范围。</p>
<p>尼泊尔地震属于 “过去 12 个月 4.0 级以上的事件”，所以可以选择载入这个目录，这个目录中包含了 15000 个，C 区展示了这些事件在地图上的位置，圆圈的大小代表震级的大小。D 区则列出了所有 15000 个地震事件的发震时刻、区域、震级、深度、经纬度等信息。</p>
<p>15000 个事件有些多，所以需要进一步缩小范围以找到自己想要的事件。可以在 C 区使用 “Draw Selection Box” 功能在地图上限定一个矩形区，也可以直接在 B 区输入区域范围、时间范围和震级的范围。</p>
<p>此处设置经度范围是 75 到 100，纬度范围是 15 到 35，设置日期范围为 2015 年 5 月 11 日到 2015 年 5 月 13 日，震级范围为 6.5 到 8 级。</p>
<ol style="list-style-type: decimal">
<li>不同地震目录给的事件位置可能有所差别，所以 Location 的范围不要设置太小，不然可能会找不到地震事件</li>
<li>IRIS 的数据使用的是 UTC 时间，而不是北京时间或当地时间，如果懒得去考虑时区的问题，可以稍微把时间范围放宽一些</li>
<li>不同地震目录的震级也可能不同，所以震级范围也要稍微给宽一些</li>
</ol>
<p>在应用上面的筛选标准之后，D 区事件列表中只剩下一个满足要求的事件，点击该事件的第二列的蓝色超链接，即可选中该地震事件。</p>
<h2 id="筛选台站">筛选台站</h2>
<p>选中地震事件后，界面显示如下：</p>
<div class="figure">
<img src="/images/2015092802.png">

</div>
<p>A 区给出了事件的相关信息，其中 “IRIS Event Page” 可以点进去看看，有不少关于该事件的研究结果。</p>
<p>B 区可以选择所需要的台网、通道码、震中距范围以及方位角范围。具体的筛选标准由具体的需求决定，这里不再介绍。通道码通常选 <code>BH?</code>，即全部宽频带波形数据。</p>
<p>C 区是台站分布，D 区列出了台站的信息，点击台站前的复选框可以选中或删除某些台站。</p>
<p>B 区的 “Show Record Section” 可以预览地震波形。台站筛选完成后，点击 “Request Data” 即可。</p>
<h2 id="波形数据">波形数据</h2>
<p>点击 “Request Data” 后会出现如下界面：</p>
<div class="figure">
<img src="/images/2015092803.png">

</div>
<p>Time Range 用于指定要申请的数据范围，默认值表示申请 P 波到时前 1 分钟到 P 波到时后 10 分钟内的波形数据。根据具体的研究对象以及 <code>taup</code> 计算的震相理论走时，来决定要申请的数据范围。</p>
<p>Output Format 选择波形数据的格式。通常建议选择 SEED 或 miniSEED。miniSEED 中只包含波形数据，SEED 则既包含波形数据又包含仪器响应信息。</p>
<p>Request Information 中，Your Name 处填写你的姓名，Request Label 用于指定数据文件的文件名，Email 是用于接收提醒的邮箱。</p>
<p>需要注意，Your Name 处填写你的姓名或其他随便什么名字都可以，但是要注意不要跟别人的名字冲突。因为 IRIS 会将你通过 Wilber 以及其他工具申请的所有数据都放在 IRIS 的 FTP 里，每人一个目录，目录名就是你填的 Name。如果你的 Name 和别人的 Name 一样，那么你申请的数据就会跑到别人的目录下，你的数据就会跟别人的数据搞混，为自己也为别人增添了不少麻烦。</p>
<h3 id="miniseed">miniSEED</h3>
<p>如果选择的是 miniSEED 格式，需要注意：</p>
<ol style="list-style-type: decimal">
<li>可以到 <a href="ftp://ds.iris.edu/pub/userdata/wilber/" class="uri" target="_blank" rel="external">ftp://ds.iris.edu/pub/userdata/wilber/</a> 目录下看看其他人已经用了哪些名字</li>
<li>Name 会被转换成全小写，空格会被 <code>-</code> 代替，比如 Name <code>Xiaoming Li</code> 在 FTP 里的目录名是 <code>xiaoming-li</code></li>
<li>申请得到的文件的文件名为 <code>label.miniseed</code></li>
</ol>
<h3 id="seed">SEED</h3>
<p>如果选择 SEED 数据格式，需要注意：</p>
<ol style="list-style-type: decimal">
<li>还需要进一步填写自己所在的机构、地址、电话并选择数据质量</li>
<li>可以到 <a href="ftp://ds.iris.edu/pub/userdata/" class="uri" target="_blank" rel="external">ftp://ds.iris.edu/pub/userdata/</a> 目录看看其他人已经用了哪些名字</li>
<li>Name 中空格会被 <code>_</code> 替换，比如 Name <code>Xiaoming Li</code> 在 FTP 里的目录是 <code>Xiaoming_Li</code></li>
<li>申请得到的文件名是 <code>label.xxxxx.seed</code> ，其中 <code>xxxxx</code> 是随机生成的 N 位整数，以保证相同 label 的不同数据可以区分开</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> IRIS </tag>
            
            <tag> 数据申请 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一些说明]]></title>
      <url>http://seisman.info/declarations.html</url>
      <content type="html"><![CDATA[<p>最初写博客只是想写着玩，没想到一写就写了四年，估计还会继续写下去。写的这些东西，对于很多地震学方向的人来说还是很有用的，所以这个博客以及我本人也受到了很多人的关注。一直以来，我都尽量避免在网络上公开自己的真实身份，这次因为参加培训的缘故，很多读者第一次接触到了现实中的我。我想，有些事情我应该说明或解释一下。</p>
<a id="more"></a>
<h2 id="关于我">关于我</h2>
<p>目前我愿意主动公开的个人信息如下：</p>
<ol style="list-style-type: decimal">
<li>男</li>
<li>90 年生</li>
<li>USTC 在读博士生</li>
<li>地球物理专业，天然地震学方向，目前的研究集中在地球深部结构</li>
</ol>
<p>如果你从其他途径获取了我的其他任何非公开信息，私下交流或传播没有问题，请勿在公开网络或公共场合公布这些信息：</p>
<ol style="list-style-type: decimal">
<li>公开网络包括博客、论坛、微博、人人等</li>
<li>非公开信息包括：QQ 号、微信号、手机号、除 <code>seisman.info@gmail.com</code></li>
</ol>
<h2 id="关于我的其他">关于我的其他</h2>
<ol style="list-style-type: decimal">
<li>记不住脸，尤其是只见过一面或者几面，但是几乎没有交流过的人。所以如果我们见过，但是再次见面的时候我却没有跟你打招呼，不是我比较傲慢，我只是没记住脸。。。</li>
<li>记不住名字，哪怕是很熟悉的人有时候也会突然想不起名字来</li>
<li>名字和脸对不上，有些脸我记得很清楚，有些名字我记得很清楚，但是却容易弄混，所以我在打招呼的时候几乎都不会喊名字</li>
<li>记不住其他信息，比如单位、导师、工作方向等等</li>
</ol>
<p>总之，在某些方面我的记忆力是超差的，我每次都解释为 “我把所有的记忆力都用在某些我特别关心的事物上了”，所以如果不幸我忘了你长什么样、忘了你叫什么名字或者是把名字什么的弄混了，请多多包涵。</p>
<h2 id="关于博客">关于博客</h2>
<ol style="list-style-type: decimal">
<li>本博客未添加任何广告。若发现任何广告弹窗，与本博客无关，请自行搜索关键词 “运营商广告劫持”；</li>
<li>未来有很多不确定因素，所以不确定是否会在某天宣布不再更新博客；</li>
<li>目前域名的有效期是 5 年，2013 年 6 月起，2018 年 6 月止。即便某天不再更新博客了，博客里的很多内容依然还是有用的，所以在域名到期后应该还会再续 5 年；</li>
<li>博客的图标来自于 Peter Shearer 的 Introduction to Seismology 一书的封面，估计涉及到版权问题，但是懒得再找图或画图了，所以暂时先用着；</li>
</ol>
<h2 id="博客的订阅方式">博客的订阅方式</h2>
<p>可以通过如下方式订阅博文更新：</p>
<ol style="list-style-type: decimal">
<li><p>RSS 订阅，可以第一时间收到博文的发布提醒。订阅地址为</p>
<pre><code>https://seisman.info/atom.xml</code></pre>
<p>可以使用 feedly 或者其他 RSS 阅读器订阅。</p></li>
<li><p>微信公众号，在微信中搜索 “SeisMan”，唯一的搜索结果就是本博客的微信公众号，在发布博文后，会第一时间在微信公众号中推送博文的摘要。</p></li>
</ol>
<h2 id="关于捐赠">关于捐赠</h2>
<ol style="list-style-type: decimal">
<li>我不是富人，穷学生一个，所以有捐赠我会很开心</li>
<li>我不是穷人，不至于依赖捐赠的钱过活</li>
<li>关于捐赠的更多细节，在 <a href="/donations.hmtl">捐赠页面</a> 中已经详细介绍</li>
</ol>
<h2 id="关于博文">关于博文</h2>
<ol style="list-style-type: decimal">
<li>部分博文的内容来自于个人的理解，无法对其正确性做任何保证，读者应对博文内容有自己的判断，由于相信本博客的博文而引起的后果，由读者自行承担；</li>
<li>不管是多老的博文，我都会尽力维护并更新，除非在文中专门指出 “本文不再维护更新”；</li>
<li>博文中出现的任何笔误，或者原理性错误，欢迎指出；</li>
<li>部分博文可能参考了网络上的其他文章，但是写的时候忘了记录，因而很多博文并没有列出参考资料，这些我没时间和精力一一订正，但依然欢迎指出；</li>
<li>部分博文中的内容可能涉及到版权问题，我会在遇到时删除相关博文；</li>
<li>本博客接受投稿，欢迎读者把自己觉得有用的东西投稿到博客中；投稿无报酬，是否接收最终决定权在我；有意投稿的读者请先邮件联系我告知稿件的大概内容，以免写完稿件后被我以 “与博客主题不符” 而拒绝。</li>
</ol>
<h2 id="交流讨论">交流讨论</h2>
<p>与我交流讨论、咨询问题的方式有如下几种：</p>
<ol style="list-style-type: decimal">
<li><p>博客留言</p>
<p>针对某篇博文的问题，可以直接在相关博文下留言。可以注册 Disqus 留言，也可匿名留言。但匿名用户是无法收到我的回复的邮件提醒的，所以匿名用户需要自己主动查看我是否有回复。</p></li>
<li><p>邮件联系</p>
<p>对于与博文无关的问题，或者是问题描述比较长的问题，请直接发送到 <a href="mailto:seisman.info@gmail.com" target="_blank" rel="external">seisman.info@gmail.com</a></p></li>
<li><p>加入 GMT 学习群</p>
<p>我目前以昵称 “知名不具” 活跃在 GMT 学习群（群号：218905582）中。相关问题请直接在群中提问，群成员大都会积极回复。我会不定时浏览群聊天记录，并回答其中尚未解决的一些问题。请不要直接与与我私聊，也不要一提问就 <span class="citation">@我</span>。需要私聊的问题，请通过邮件方式联系。</p></li>
<li><p>QQ 联系</p>
<p>虽然允许，但是尽量不要用 QQ 联系我。且跟我聊天时不要乱用感叹号。</p></li>
<li><p>直接到办公室找我</p>
<p>对于科大在校生且知道我办公室房间号的人来说，可以到直接到办公室找我，但最好提前通过其他方式说一声。以免我不在办公室或者忙于其他事情。</p></li>
</ol>
<p>几种方式的推荐优先级：<code>邮件联系 = 博客留言 &gt; 通过 GMT 学习群 &gt; QQ 联系 &gt; 到办公室找我</code></p>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[博客开通微信公众号]]></title>
      <url>http://seisman.info/wechat-subscription.html</url>
      <content type="html"><![CDATA[<p>SeisMan 博客刚刚开通了微信公众号，欢迎大家关注。</p>
<p>微信公众号的名字是 “SeisMan 博客”，微信号是 “seismaninfo”。</p>
<a id="more"></a>
<p>可以直接在公众号中搜索 “seisman”，搜索结果中唯一的一个就是。也可以微信扫下面的二维码直接添加：</p>
<div class="figure">
<img src="/images/wechat.png">

</div>
<p>目前的想法是，这个微信公众号中不会有更新什么干货。</p>
<p>当博客发布新博文时，我会在微信公众号发布消息，提醒读者有新博文发布，同时给出博文的内容摘要以及原文链接，使得读者可以随时收到博客的更新，并通过阅读博文摘要了解新发布的博文是否值得一看。也许也会贴一些不适合在博客中发布的会议通知、新闻等等。</p>
<p>为什么要开通这个微信公众号呢？</p>
<p>一方面是觉得好玩，想自己弄一个试试看；另一方面，之前博客只有两种订阅方式，一种是邮件订阅，一种是 RSS 订阅。邮件订阅每周会发送一封邮件，但邮件的排版比较糟糕，当初设置过一次之后就没有再管过。RSS 订阅，虽然我自己一直在用，但总觉得是一类相对小众的工具。所以，目前博客还没有一个让我满意的订阅方式。现在微信如此流行，或许微信公众号可以作为一种不错的订阅方式，至少值得尝试一下。</p>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[修改 SAC 所允许的最大文件数目]]></title>
      <url>http://seisman.info/change-max-file-allowed-in-sac.html</url>
      <content type="html"><![CDATA[<p>SAC 在处理数据时，一次性最多只能读入 1000 个 SAC 文件。当读入过多的 SAC 文件时，会出现如下警告:</p>
<pre><code>Max files: reading first 1000  files.</code></pre>
<p>并只读入文件列表中的前 1000 个文件。</p>
<p>想要突破最多只能读 1000 个文件的上限，就需要修改 SAC 的源代码。</p>
<p>最大文件数目由源码 <code>sac/inc/mach.h</code> 中的宏变量 <code>MDFL</code> 控制。将其中的:</p>
<pre><code>#define MDFL    1000</code></pre>
<p>改成:</p>
<pre><code>#define MDFL    10000</code></pre>
<p>即可将最大文件数目修改成 10000。</p>
<p>修改之后，重新编译安装即可。</p>
<p>简单测试了一下，修改后的确可以读取超过 1000 个文件，基本的数据处理命令也没有问题，但尚不确定是否有其他副作用。</p>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SAC技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 4 在 Mac 下的安装]]></title>
      <url>http://seisman.info/install-gmt4-under-mac.html</url>
      <content type="html"><![CDATA[<p>GMT 官方没有为 Mac 提供 GMT4 的安装包，因而只能通过其他方式安装。Mac 下有很多第三方软件管理工具，比如 MacPorts 和 Homebrew。MacPorts 和 Homebrew 中自带最新版本的 GMT，可以直接安装，是比较推荐的使用方式。某些情况下可能会希望自己手动编译，比如自己修改了 GMT 源码。</p>
<p>因而，本文会介绍四种安装 GMT4 的方法，列举如下</p>
<ol style="list-style-type: decimal">
<li>用 Homebrew 安装 GMT4</li>
<li>用 MacPorts 安装 GMT4</li>
<li>基于 Homebrew 安装 GMT4</li>
<li>基于 MacPorts 安装 GMT4</li>
</ol>
<a id="more"></a>
<h2 id="安装命令行开发工具">安装命令行开发工具</h2>
<p>在开始之前，先要安装 Mac 下的命令行开发工具。因为全新的 Mac 默认是没有自带的:</p>
<pre><code>$ xcode-select --install</code></pre>
<h2 id="使用-homebrew-安装">使用 Homebrew 安装</h2>
<ol style="list-style-type: decimal">
<li>到 <a href="http://brew.sh/" target="_blank" rel="external">Homebrew</a> 首页，复制首页上的安装代码到终端，执行即可安装 Homebrew。</li>
<li><p>使用 Homebrew 安装 GMT4:</p>
<pre><code>$ brew install homebrew/science/gmt4</code></pre></li>
</ol>
<h2 id="使用-macports-安装">使用 MacPorts 安装</h2>
<ol style="list-style-type: decimal">
<li>到 <a href="https://www.macports.org/install.php" target="_blank" rel="external">MacPorts</a> 网站，下载当前系统对应的 pkg 文件并安装</li>
<li><p>使用 MacPorts 安装 GMT4:</p>
<pre><code>$ sudo port install gmt4</code></pre></li>
</ol>
<h2 id="手动编译-gmt">手动编译 GMT</h2>
<p>手动编译 GMT 需要如下几步：</p>
<ol style="list-style-type: decimal">
<li>下载</li>
<li>解决依赖关系</li>
<li>编译 GMT 源码</li>
<li>安装海岸线数据</li>
<li>修改环境变量</li>
</ol>
<p>具体操作参考 <a href="/install-gmt4-under-linux.html">Linux 下安装 GMT4</a> 一文，Linux 与 Mac 唯一的不同仅仅是 “解决依赖关系” 这一步。</p>
<h3 id="解决依赖关系">解决依赖关系</h3>
<p>GMT4 依赖于 netCDF，必须安装；不依赖于 gdal，但 gdal 在转换数据格式时经常用到，推荐安装。</p>
<p>可以用 Homebrew 安装依赖包:</p>
<pre><code>$ brew install gdal
$ brew install homebrew/science/netcdf</code></pre>
<p>也可以用 MacPorts 安装依赖包:</p>
<pre><code>$ sudo port install netcdf +gdal +curl +geos +hdf5</code></pre>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 安装 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 添加断层名]]></title>
      <url>http://seisman.info/plot-fault-names.html</url>
      <content type="html"><![CDATA[<p>在 GMT 中绘制断层很简单，只要有断层的坐标数据，直接用 psxy 即可绘制。</p>
<p>有时不仅要绘制断层，还需要在断层线的旁边加上断层名，最直接的想法是用 pstext 将断层名写上去。使用 pstext 添加断层名时会遇到两个问题：</p>
<ol style="list-style-type: decimal">
<li>text 的位置；</li>
<li>text 的角度（一般情况下，断层名与断层线平行）；</li>
</ol>
<p>如果只是几条断层的话，可以手动指定并微调 text 的位置和角度，以达到想要的效果。如果要标记的断层名有点多，或者想要批量绘制不同区域的多张断层图，手动微调的方法就有些麻烦了。当然，如果真有需求的话，可以手动微调，建立一个断层名的数据库，以后用起来就方便多了。</p>
<a id="more"></a>
<h2 id="直接的想法">直接的想法</h2>
<p>为了能够将添加断层名这个事情自动化，就需要解决以上两个问题。对于任意一条断层而言：</p>
<ol style="list-style-type: decimal">
<li>text 的位置可以通过找断层线的中间点得到；</li>
<li>text 的角度可以通过 text 位置附近的几个点计算切线方向得到；</li>
</ol>
<p>思路很简单，自己实现起来也不算难。不过，其实 GMT 已经实现了这一功能，直接拿过来用即可。</p>
<h2 id="gmt-的解法">GMT 的解法</h2>
<p>GMT 的 psxy 命令中提供了 - Sq 选项可以用于在绘制线段的同时在线段上添加标注，利用这一选项可以实现给断层标注断层名的目的。</p>
<h3 id="最小示例">最小示例</h3>
<p>下面的例子是实现添加断层名的最小代码，关键在于 - Sq 选项：</p>
<ol style="list-style-type: decimal">
<li><code>n1</code> 表明在线段上只显示一次断层名，当然也可以选择显示多次；</li>
<li><code>:</code> 是一个分界符，不可缺少；</li>
<li><code>+Lh</code> 表明从多段数据的头段中读取 - L 选项作为断层名；</li>
<li>对于每段数据，在头段记录中都需要使用 <code>-L&lt;label&gt;</code> 来指定断层名；</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">gmt psxy -R90/130/30/60 -JM15c -B5 -Sqn1:+Lh &gt; map.ps &lt;&lt; EOF</div><div class="line">&gt; -L<span class="string">"AAA Fault"</span></div><div class="line">95.00 35.00</div><div class="line">97.56 37.17</div><div class="line">100.27 39.29</div><div class="line">103.14 41.34</div><div class="line">106.20 43.31</div><div class="line">109.45 45.20</div><div class="line">112.93 46.99</div><div class="line">116.63 48.67</div><div class="line">120.00 50.00</div><div class="line">&gt; -L<span class="string">"BBB Fault"</span></div><div class="line">95.00 55.00</div><div class="line">96.59 54.61</div><div class="line">98.16 54.19</div><div class="line">99.69 53.76</div><div class="line">101.19 53.30</div><div class="line">102.65 52.83</div><div class="line">104.09 52.34</div><div class="line">105.49 51.83</div><div class="line">106.86 51.31</div><div class="line">108.20 50.77</div><div class="line">109.51 50.21</div><div class="line">110.00 50.00</div><div class="line">EOF</div></pre></td></tr></table></figure>
<p>绘图效果如下：</p>
<div class="figure">
<img src="/images/2015082101.png">

</div>
<h3 id="稍复杂的示例">稍复杂的示例</h3>
<p>-Sq 有很多子选项，可以对图进行进一步修改，详情参考官方文档。</p>
<p>将上面例子中的 - Sq 选项改成:</p>
<pre><code>-Sqn1:+Lh+f15p,blue+n0c/0.3c</code></pre>
<p>其中：</p>
<ul>
<li><code>+f15p,blue</code> 用于修改断层名的字号和颜色</li>
<li><code>+n0c/0.3c</code> 表明将断层名沿着垂直断层的方向偏移 0.3 厘米；</li>
</ul>
<p>效果如下：</p>
<div class="figure">
<img src="/images/2015082102.png">

</div>
<h3 id="自定义">自定义</h3>
<p>上图的效果已经很不错了，但是现实情况可能会很复杂，尤其是在断层比较多的时候，可能几个断层名会重叠在一起。此时想要自动判断并调整断层名的位置就比较困难了，所以需要在已有位置的基础上做一些手动的调整。</p>
<p>给上例中的 - Sq 选项中额外加上一个 + T 子选项，即:</p>
<pre><code>-Sqn1:+Lh+f15p,blue+n0c/0.3c+Tfaultname.txt</code></pre>
<p>使用该选项后，会在绘图的同时将每个断层名的信息输出到文件 faultname.txt 中，其格式为:</p>
<pre><code>X   Y   angle   label</code></pre>
<p>对照着画出来的图，手动调整不甚满意的断层名的位置和角度。然后放弃之前的 <code>psxy -Sq</code> 的代码，使用 psxy 绘制断层，pstext 绘制断层名 faultname.txt。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 绘制图中图]]></title>
      <url>http://seisman.info/gmt-insert-map.html</url>
      <content type="html"><![CDATA[<p>英文一般称为 inset map 或 insert map，中文还不确定有没有专门的名词，一般常称为图中图、小图、嵌入图。</p>
<p>所谓 insert map，即在绘制小区域地图时，在图上的某个角落里绘制一张更大范围的地图，并在大范围地图上绘制一个方框，以更清楚地表明小区域的地理位置。</p>
<p>若是了解 GMT 中图层的概念以及图层叠加的原理，就可以很容易地把 insert map 画出来。由于 GMT4 和 GMT5 语法上的差异，这里同时给出 GMT4 和 GMT5 两个版本的绘图脚本。二者原理是差不多的，只是语法上有些差异，因而下面只解释 GMT5 脚本中的细节，对 GMT4 脚本不做过多介绍。</p>
<a id="more"></a>
<h2 id="效果图">效果图</h2>
<div class="figure">
<img src="/images/2015081601.png">

</div>
<h2 id="gmt5-脚本">GMT5 脚本</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=115/123/35/40             <span class="comment"># 小区域地图的范围 - R</span></div><div class="line">J=M20c                      <span class="comment"># 小区域的投影方式 - J</span></div><div class="line">PS=map.ps</div><div class="line"></div><div class="line"><span class="comment"># 打开 GMT</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制小区域的地图</span></div><div class="line">gmt pscoast -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B1 -Df -W2p -I2p -N1/2p -A1000 -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># ...</span></div><div class="line"><span class="comment"># 此处可以任意添加其他绘图命令</span></div><div class="line"><span class="comment"># ...</span></div><div class="line"></div><div class="line"><span class="comment"># 开始绘制 insert map</span></div><div class="line">Rg=72/135/16/55     <span class="comment"># 大区域地图的范围 - R</span></div><div class="line">Jg=M7c              <span class="comment"># 大区域地图的投影方式 - J</span></div><div class="line"><span class="comment"># 绘制大区域地图的海岸线及边框</span></div><div class="line">gmt pscoast -R<span class="variable">$Rg</span> -J<span class="variable">$Jg</span> -B0 -B+gwhite -Df -N1 -W -A5000 -K -O --MAP_FRAME_TYPE=plain &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 利用 psbasemap 在大区域地图内绘制小区域所在的方框</span></div><div class="line">gmt psbasemap -R<span class="variable">$Rg</span> -J<span class="variable">$Jg</span> -D<span class="variable">$R</span> -F+p2p,blue -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 结束 GMT 绘图</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>整个脚本的思路已经在脚本注释中做了解释。本质上就是先绘制小区域地图而不去管 insert map，待小区域地图绘制完成后，再单独绘制一个 insert map。</p>
<p>绘制 insert map 时，使用了两个命令：pscoast 和 psbasemap。其中，pscoast 的作用是绘制大区域地图的边框以及海岸线，psbasemap 用于在大区域地图内绘制一个矩形区域，当然也可以用 psxy 命令代替。</p>
<p>在使用 pscoast 命令绘制大区域地图时，有几个需要解释的地方：</p>
<ol style="list-style-type: decimal">
<li><code>-B0</code> 使得大区域地图的边框不显示刻度；</li>
<li>默认情况下，边框内部是透明的，此时会在 insert map 内看到下一图层里的一些元素，<code>-B+gwhite</code> 使得边框内填充白色；</li>
<li><code>--MAP_FRAME_TYPE=plain</code> 设置边框类型为一般的直线，默认值是 fancy 即火车轨道边框；</li>
<li>可以设置 <code>MAP_FRAME_PEN</code> 以修改边框的粗细；</li>
<li>pscoast 命令中可以使用 - X 和 - Y 选项以调整 insert map 在图中的位置；</li>
</ol>
<h2 id="gmt4-脚本">GMT4 脚本</h2>
<p>GMT4 脚本相对于 GMT5 脚本的主要区别在于：GMT5 中任意命令都可以通过 <code>-B+gwhite</code> 的语法指定边框内填充白色，而 GMT4 中只有 psbasemap 命令可以通过 <code>-Gwhite</code> 选项来实现填充白色。因而 GMT4 的脚本中，需要先使用 psbasemap 绘制一个白色填充的边框，再使用 pscoast 绘制海岸线。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">xmin=115</div><div class="line">xmax=123</div><div class="line">ymin=35</div><div class="line">ymax=40</div><div class="line">R=<span class="variable">$xmin</span>/<span class="variable">$xmax</span>/<span class="variable">$ymin</span>/<span class="variable">$ymax</span></div><div class="line">J=M20c</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">pscoast -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B1 -Df -W2p -I2p -N1/2p -A1000 -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">Rg=72/135/16/55</div><div class="line">Jg=M7c</div><div class="line">psbasemap -R<span class="variable">$Rg</span> -J<span class="variable">$Jg</span> -B0 -Gwhite -K -O --BASEMAP_TYPE=plain &gt;&gt; <span class="variable">$PS</span></div><div class="line">pscoast -R<span class="variable">$Rg</span> -J<span class="variable">$Jg</span> -Df -N1 -W -A5000 -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">psxy -R<span class="variable">$Rg</span> -J<span class="variable">$Jg</span> -W2p,blue -K -O -L &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line"><span class="variable">$xmin</span> <span class="variable">$ymin</span></div><div class="line"><span class="variable">$xmin</span> <span class="variable">$ymax</span></div><div class="line"><span class="variable">$xmax</span> <span class="variable">$ymax</span></div><div class="line"><span class="variable">$xmax</span> <span class="variable">$ymin</span></div><div class="line">EOF</div><div class="line"></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2015-08-16：初稿</li>
<li>2015-11-02：GMT5 脚本使用 <code>psbasemap</code> 的 <code>-D</code> 选项以简化代码</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 区域填色]]></title>
      <url>http://seisman.info/area-fill.html</url>
      <content type="html"><![CDATA[<h2 id="提出问题">提出问题</h2>
<p>GMT 中可以用 <code>psxy</code> 绘制多段数据，画出多个闭合的多边形。一个示例命令如下:</p>
<pre><code>gmt psxy input.dat -R0/360/-90/90 -JX15c/10c -Bx60 -By30 -W1p -L &gt; test.ps</code></pre>
<a id="more"></a>
<p>本例中的输入数据 <code>input.dat</code> 的内容为:</p>
<pre><code>&gt;
30 20
90 20
90 60
30 60
&gt;
120 10
150 35
180 20
160 -10
130 -30
&gt;
200 10
230 25
240 40
280 5
300 -20</code></pre>
<p>画出来的图效果如下：</p>
<div class="figure">
<img src="/images/2015080501.png">

</div>
<p>现在想要给不同的区域填充不同的颜色，目标效果图如下：</p>
<div class="figure">
<img src="/images/2015080502.png">

</div>
<p>要实现区域填色，有两种方法，分别是使用 <code>-G</code> 选项和使用 <code>-C</code> 选项。</p>
<h2 id="g-选项">-G 选项</h2>
<p>在每段数据的头段记录中加上 <code>-Gcolor</code> 选项以指定当前多边形的填充色。</p>
<p>还是同样的命令，此时输入数据变成:</p>
<pre><code>&gt; -Gred
30 20
90 20
90 60
30 60
&gt; -G0/100/20
120 10
150 35
180 20
160 -10
130 -30
&gt; -G0/0/120
200 10
230 25
240 40
280 5
300 -20</code></pre>
<p><code>-G</code> 选项设置了第一个多边形填充红色，第二个多边形填充 <code>0/100/20</code>，第三个多边形填充 <code>0/0/120</code> 。</p>
<h2 id="c-选项">-C 选项</h2>
<p>可以使用 <code>-C</code> 选项指定要使用的 cpt 文件，且每段数据的头段记录中加上 <code>-Zval</code> 。</p>
<p>下面的命令中使用了增加了 <code>-Carea.cpt</code> 选项:</p>
<pre><code>gmt psxy input.dat -R0/360/-90/90 -JX15c/10c -Bx60 -By30 -W1p -L -Carea.cpt &gt; test.ps</code></pre>
<p>CPT 文件 <code>area.cpt</code> 的内容为:</p>
<pre><code>0   red
1   blue
2   200/0/20
3   0/0/120
4   100/100/100</code></pre>
<p>该 cpt 表明，若 Z 值取零，则填充红色，若 Z 值为 1，则填充蓝色，其他同理。</p>
<p>指定 <code>-C</code> 选项的同时，也需要在数据的头段记录中加上 <code>-Z</code> 选项，以指定每个多边形的填充色:</p>
<pre><code>&gt; -Z0
30 20
90 20
90 60
30 60
&gt; -Z2
120 10
150 35
180 20
160 -10
130 -30
&gt; -Z3
200 10
230 25
240 40
280 5
300 -20</code></pre>
<p>此时，三个多边形的填充色分别是红色、 <code>200/0/20</code> 和 <code>0/0/120</code> 。</p>
<h2 id="说明">说明</h2>
<p>上面介绍的两种方法中， <code>-G</code> 选项比较简单，只需要少量的修改即可实现。 <code>-C</code> 选项需要修改的地方较多，但更具有普适性，也更易于编程处理。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安装 evt2sac]]></title>
      <url>http://seisman.info/install-evt2sac.html</url>
      <content type="html"><![CDATA[<p><code>evt2sac</code> 用于将 NEIC 的 EVT 格式的数据转换为 SAC 格式。</p>
<p>主页： <a href="https://seiscode.iris.washington.edu/projects/evt2sac" class="uri" target="_blank" rel="external">https://seiscode.iris.washington.edu/projects/evt2sac</a></p>
<a id="more"></a>
<p><code>evt2sac</code> 最近一次更新是 1993 年，20 多年前的代码编译起来还是有些困难的，因而 一点一点介绍如何修改代码就太麻烦了，本文直接给出我修改后可编译的版本。</p>
<p>修改后的代码下载：<a href="http://7j1zxm.com1.z0.glb.clouddn.com/downloads/evt2sac.tar.bz2" target="_blank" rel="external">evt2sac.tar.bz2</a></p>
<p>对官方代码的修改列举如下：</p>
<ol style="list-style-type: decimal">
<li>修改并简化 Makefile，使用 gcc 和 gfortran 编译器</li>
<li>删除了不需要的文件</li>
<li><code>evt2sac.c</code> 、 <code>evt_subs.c</code> 、 <code>ndt_subs.c</code> 中 include 了 <code>stdlib.h</code>、 <code>string.h</code> 等头文件</li>
<li><code>fglue2.F</code> 中，subroutine 中的 include 语句需要放在变量定义之前</li>
<li>修复了 <code>fprintf</code> 的语法错误</li>
<li><code>distaz_</code> 改为 <code>distaz</code> ，请删除了前两个参数中的 <code>&amp;</code> 符号。主要是因为 SAC 的源码已经从 Fortran 变成了 C。</li>
</ol>
<p>修改后的版本可以直接编译（可能需要修改 Makefile 中的 <code>SACLIB</code> 变量）。但是否能够正常使用，尚不确定。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 格式转换 </tag>
            
            <tag> SAC </tag>
            
            <tag> 软件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[博客被 Google 认定为 “对用户非常有用” 啦]]></title>
      <url>http://seisman.info/google-sitelinks.html</url>
      <content type="html"><![CDATA[<p>无聊的时候会在搜索引擎里以关键词 “seisman” 搜自己，看看在搜索引擎里的排名是怎样的。</p>
<p>从一开始的完全搜不到，到后来 Google 搜索结果中排第一，再到后来各大搜索引擎的搜索结果中都排第一，表明博客的读者量以及访问量都在不断提升。</p>
<p>今天又用 Google 搜了一下，发现搜索出来的结果跟平常不太一样了，效果图如下：</p>
<div class="figure">
<img src="/images/2015072901.png">

</div>
<p>除了指向博客主页的链接之外，还有 6 个指向博客其他内容的链接。</p>
<p>查了一下，这个东西叫 “站点链接”，是 Google 首创的一种搜索结果的显示方式，详细的介绍在 <a href="https://support.google.com/webmasters/answer/47334?hl=zh-Hans" target="_blank" rel="external">这里</a>。按照 Google 官方的解释</p>
<blockquote>
<p>只有在我们认为搜索结果中的站点链接对用户非常有用的情况下，我们才会显示。</p>
</blockquote>
<p>哈哈～被 Google 肯定好开心～</p>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地球物理学家列表]]></title>
      <url>http://seisman.info/geophysicist.html</url>
      <content type="html"><![CDATA[<p>欢迎补充。</p>
<table>
<thead>
<tr class="header">
<th align="left">Name</th>
<th align="left">Keywords</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left"><a href="http://eqseis.geosc.psu.edu/~cammon/" target="_blank" rel="external">Charles J. Ammon</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.mantleplumes.org/DLA.html%3E" target="_blank" rel="external">Don L. Anderson</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.geos.ed.ac.uk/homes/acurtis/" target="_blank" rel="external">Andrew Curtis</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://bullard.esc.cam.ac.uk/~chapman/" target="_blank" rel="external">Chris Chapman</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://web.gps.caltech.edu/~clay/" target="_blank" rel="external">Robert W. Clayton</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.phys.uconn.edu/~cormier" target="_blank" rel="external">Vernon F. Cormier</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.geo.uu.nl/~deuss/" target="_blank" rel="external">Arwen Deuss</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://web.mst.edu/~sgao/" target="_blank" rel="external">Stephen Shangxing Gao</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.mpl.ucsd.edu/people/pgerstoft/" target="_blank" rel="external">Peter Gerstoft</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.ualberta.ca/~ygu/" target="_blank" rel="external">Yu Jeffrey Gu</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.gps.caltech.edu/content/donald-v-helmberger" target="_blank" rel="external">Donald V. Helmberger</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://eaps4.mit.edu/faculty/Hilst/" target="_blank" rel="external">Robert van der Hilst</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.geo.titech.ac.jp/lab/hirose/en/home.html" target="_blank" rel="external">Kei Hirose</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.seismology.harvard.edu/ishii.html" target="_blank" rel="external">Miaki Ishii</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.geol.ucsb.edu/faculty/ji/" target="_blank" rel="external">Chen Ji</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://quake.utah.edu/about-us/uuss-staff-directory/dr-keith-koper" target="_blank" rel="external">Keith D. Koper</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://komatitsch.free.fr/" target="_blank" rel="external">Dimitri Komatitsch</a></td>
<td align="left">SEM</td>
</tr>
<tr class="even">
<td align="left"><a href="http://igppweb.ucsd.edu/~gabi/" target="_blank" rel="external">Gabi Laske</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://web.gps.caltech.edu/~linf/" target="_blank" rel="external">Fan-Chi Lin</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left">[Qinya Liu]</td>
<td align="left">SEM, Adjoint Tomography</td>
</tr>
<tr class="odd">
<td align="left"><a href="http://es.ucsc.edu/~thorne/" target="_blank" rel="external">Thorne Lay</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://igppweb.ucsd.edu/~guy/" target="_blank" rel="external">Guy Master</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://earthscience.rice.edu/faculty/niu/" target="_blank" rel="external">Fenglin Niu</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://geophysics.eas.gatech.edu/people/zpeng/" target="_blank" rel="external">Zhigang Peng</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://seismo.berkeley.edu/~barbara/" target="_blank" rel="external">Barbara Romanowicz</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.earth.lsa.umich.edu/~jritsema/" target="_blank" rel="external">Jeroen Ritsema</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://ciei.colorado.edu/ritzwoller_m" target="_blank" rel="external">Michael Ritzwoller</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://homepages.see.leeds.ac.uk/~earsro" target="_blank" rel="external">Sebatian Rost</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://seismolab.gso.uri.edu/~savage/" target="_blank" rel="external">Brian Savage</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.geol.umd.edu/~nschmerr" target="_blank" rel="external">Nicholas Schmerr</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://mahi.ucsd.edu/shearer/" target="_blank" rel="external">Peter M. Shearer</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://inside.mines.edu/~rsnieder/" target="_blank" rel="external">Roel Snieder</a></td>
<td align="left">Code Wave Interferometry</td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.geology.illinois.edu/people/xsong/Sites/index.html" target="_blank" rel="external">Xiaodong Song</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.jamstec.go.jp/res/ress/stan/TanakaHome/Welcome.html" target="_blank" rel="external">Satoru Tanaka</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://rses.anu.edu.au/~hrvoje/" target="_blank" rel="external">Hrvoje Tkalčić</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://web.utah.edu/thorne/index.html" target="_blank" rel="external">Michael Thorne</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.princeton.edu/geosciences/tromp/index.xml" target="_blank" rel="external">Jeroen Tromp</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://web.gps.caltech.edu/~tsai/" target="_blank" rel="external">Victor C. Tsai</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://earthweb.ess.washington.edu/vidale/John_Vidale/Home.html" target="_blank" rel="external">John Vidale</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://seis.ustc.edu.cn/" target="_blank" rel="external">Lianxing Wen</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.cuhk.edu.hk/sci/essc/people/yang.html" target="_blank" rel="external">Hongfeng Yang</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://staff.ustc.edu.cn/~hjyao/" target="_blank" rel="external">Huajian Yao</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://staff.ustc.edu.cn/~zhang11/" target="_blank" rel="external">Haijiang Zhang</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.aob.gp.tohoku.ac.jp/kazan/zhao_English.html" target="_blank" rel="external">Dapeng Zhao</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://anquetil.colorado.edu/szhong/" target="_blank" rel="external">Shijie Zhong</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="external">Lupei Zhu</a></td>
<td align="left"></td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[pssac2 使用教程]]></title>
      <url>http://seisman.info/pssac2-notes.html</url>
      <content type="html"><![CDATA[<p><code>pssac2</code> 是 <code>pssac</code> 的升级版。相比于 <code>pssac</code> 而言增加了更多的功能，选项也更加符合 GMT 的风格。</p>
<p><code>pssac2</code> 与 <code>pssac</code> 的选项之间有很多相似之处，所以本文只介绍二者之间的不同之处，读者应首先阅读《pssac 使用教程》。</p>
<a id="more"></a>
<h2 id="gmt-标准选项">GMT 标准选项</h2>
<p>pssac2 继承了 GMT 的众多标准选项，包括：</p>
<ol style="list-style-type: decimal">
<li>必须选项： <code>-J -R</code></li>
<li>可选选项： <code>-B -K -O -U -P  -X -Y -W -V</code></li>
</ol>
<p>与 <code>pssac</code> 相比：</p>
<ul>
<li>多了 <code>-P</code> 选项，使得 pssac2 命令中可以直接设置纸张方向；</li>
<li>pssac 中 <code>-V</code> 选项用于交换 X 轴和 Y 轴，pssac2 中 <code>-V</code> 选项表示 Verbose 模式；</li>
</ul>
<h2 id="特有选项">特有选项</h2>
<p><code>pssac2</code> 的特有选项包括:</p>
<pre><code>-M -N -S -G -g -C -E -n -D -l -L -r -s -v</code></pre>
<p>其中，与 <code>pssac</code> 功能完全相同的选项有:</p>
<pre><code>-E -N -r</code></pre>
<h3 id="v-选项">-v 选项</h3>
<p>pssac 中的 <code>-V</code> 选项用于绘制垂直的波形，即交换了 X 轴和 Y 轴。这个功能在 pssac2 中命令为 <code>-v</code> ，而 <code>-V</code> 被用于 Verbose 模式，更符合 GMT 的风格。</p>
<h3 id="v-选项-1">-V 选项</h3>
<p>Verbose 模式，可以多次使用 - V 选项，这样 Verbose 级别会依次增加，进而输出更多的信息。</p>
<h3 id="s-选项">-s 选项</h3>
<p>有时候数据的字节序与机器的字节序不同，此时可以用 <code>-s</code> 选项交换数据的字节序。</p>
<h3 id="s-选项-1">-S 选项</h3>
<p>pssac2 中 <code>-S</code> 选项有两种用法，一种是直接指定波形偏移量，比如 <code>-S2</code> 表示偏移 2 秒；一种是从 SAC 头段 usern 中读取偏移量，比如 <code>-Su0</code> 表示从头段 USER0 中读取偏移量。</p>
<p>需要注意的一点是，对于前一种情况，波形会向右偏移；而对于后一种情况，波形会向左偏移。</p>
<p>比如，如果 USER0 中的值为 2，则 <code>-S2</code> 和 <code>-Su0</code>，前者将波形向左移 2 秒，后者将波形向右移 2 秒。尚不确定这是 Bug 还是 Feature。</p>
<h3 id="g-与---g-选项">-G 与 - g 选项</h3>
<p>pssac 中 - G 选项的用法为 <code>-Gr/g/b/c</code> ，用于将振幅大于 <code>c</code> 的部分涂成 <code>r/g/b</code> 色。</p>
<p>pssac2 中 - G 选项的用法为 <code>-Gr/g/b/c/t0/t1</code> ，其中 <code>t0/t1</code> 表示只给该时间内的数据涂色。</p>
<p>pssac2 中新增了 <code>-g</code> 选项，用于给振幅低于 <code>c</code> 的部分涂色。</p>
<h3 id="m-选项">-M 选项</h3>
<p>-M 选项有四种用法：</p>
<ol style="list-style-type: decimal">
<li><code>-Msize</code> ：将波形归一化，size 的含义与 pssac 中完全相同；</li>
<li><code>-Msize/alpha</code> ：alpha 只能取正值，对波形进行几何扩散的校正；</li>
<li><code>-Msize/b</code> ：按照 JB 走时表的结果进行振幅校正；</li>
<li><code>-Msize/s</code> ：sin 函数校正，比例因子为 <code>(1/size) * sqrt(sin(gcarc))</code></li>
</ol>
<p>需要注意：</p>
<ol style="list-style-type: decimal">
<li>pssac2 中，-M 选项是必须的，因而 pssac2 不能绘制绝对振幅，只能绘制相对振幅。不确定是 Bug 还是 Feature。</li>
<li>pssac2 中 <code>-E</code> 选项中 <code>t</code> 后面必须有值，即 <code>-Ekt</code> 是错误的，此时可以使用 <code>-Ekt-6</code></li>
</ol>
<h3 id="c-选项">-C 选项</h3>
<p>-C 选项用于截取部分数据，有四种用法</p>
<ul>
<li><code>-C10/20</code> 直接指定时间窗</li>
<li><code>-Ct0/20</code> 时间窗的起始位置使用头段变量 T0 中的值</li>
<li><code>-C10/t0</code> 时间窗的结束位置使用头段变量 T0 中的值</li>
<li><code>-Ct0/t1</code> 时间窗用头段变量 T0 和 T1 的值来指定</li>
</ul>
<h3 id="n-选项">-n 选项</h3>
<p>表示允许震中距为负值。</p>
<h2 id="在地图上绘制波形">在地图上绘制波形</h2>
<p>用 pssac 将波形画在地图上还是有些麻烦的，而 pssac2 可以很轻松地解决这个问题。</p>
<p>当 - J 使用的是非地理投影（比如 <code>-JX</code>）时，pssac2 与 pssac 几乎没有区别。而当 - J 使用的是地理投影时，则意味着是要将波形绘制在地图上。</p>
<p>将波形绘制在地图上有额外的三个选项可以控制：</p>
<h3 id="l-选项">-L 选项</h3>
<p>-L 选项指定图上单位长度代表的秒数。比如 <code>-L3</code> 表示图上 1 英寸表示 3 秒。</p>
<h3 id="l-选项-1">-l 选项</h3>
<p><code>-lx/y/length/bar_length/font_size</code></p>
<p>绘制时间轴的比例尺。这个选项不确定有没有效果，因为一直没有调出来。</p>
<h3 id="d-选项">-D 选项</h3>
<p><code>-Ddx/dy</code> 指定了波形在地图上的额外偏移量。</p>
<h3 id="示例代码">示例代码</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=M15c</div><div class="line">R=-120/-60/30/65</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B10/10 -Ggray -K -O -A1000 &gt;&gt; <span class="variable">$PS</span></div><div class="line">saclst stlo stla f *.z | awk <span class="string">'&#123;print $2, $3&#125;'</span> | psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sa0.5c -Gblack -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">saclst stlo stla f *.z | awk <span class="string">'&#123;print $2, $3,"15 0 0 TR", $1&#125;'</span> | pstext -J<span class="variable">$J</span> -R<span class="variable">$R</span> -D-0.1c/-0.1c -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">pssac2 -J<span class="variable">$J</span> -R<span class="variable">$R</span> -M1 -K -O -L1000 -D-0.1/0 *.z &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>默认会将波形放在台站处，也可以通过传递 <code>sacfile X Y pen</code> 格式的数据手动指定波形位置。</p>
<p>注意：</p>
<ol style="list-style-type: decimal">
<li>该脚本中使用的是 GMT4 的绘图命令；</li>
<li>若使用 GMT5 的绘图命令，会出现问题，表现为所有的波形不会出现在台站处，而是挤在左下角。出现这个问题的根本原因尚不清楚。</li>
<li>pssac2 的 GMT5 版本存在严重 bug，目前（2015-09-21）无法使用；</li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-08-09：初稿；</li>
<li>2015-07-19：修订稿；</li>
<li>2016-03-16： <code>-Ekt</code> 会报错，必须指定 n 值；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> pssac2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在地图上绘制波形]]></title>
      <url>http://seisman.info/plot-traces-on-maps.html</url>
      <content type="html"><![CDATA[<p>将 SAC 波形数据绘制在地图上也算是常见的需求之一。最常见的情况是，在地图上有一些台站，需要将波形画在台站的附近。</p>
<p>此问题的难点在于，在画地图时，-R 指定的是区域范围，即横轴是经度，纵轴是纬度，而 pssac 在绘制波形时，横轴是时间，纵轴是振幅。因而想要将波形放在特定的位置，不是一件容易的事情。</p>
<a id="more"></a>
<h2 id="生成示例">生成示例</h2>
<p>用 SAC 自带的数据，生成几个示例数据，供接下来使用:</p>
<pre><code>SAC&gt; dg sub tele ntkl.z nykl.z onkl.z sdkl.z
SAC&gt; w ntkl.z nykl.z onkl.z sdkl.z</code></pre>
<p>用 <code>saclst</code> 查看一下这几个波形数据的相关信息:</p>
<pre><code>$ saclst b e stlo stla f *.z
ntkl.z      199.965     1600.95    -114.592     62.4797
nykl.z      199.962     1600.97      -74.53     44.5483
onkl.z      199.618     1600.62    -93.7022     50.8589
sdkl.z      199.098     1600.11    -104.036     44.1204</code></pre>
<h2 id="先绘制地图">先绘制地图</h2>
<p>在考虑如何把波形画在地图上之前，先得有一个地图。用如下代码绘制一个地图：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=M15c</div><div class="line">R=-120/-60/30/65</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 绘制海岸线</span></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B10/10 -Ggray -K -O -A1000 &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 绘制台站位置</span></div><div class="line">saclst stlo stla f *.z | awk <span class="string">'&#123;print $2, $3&#125;'</span> | psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sa0.5c -Gblack -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 绘制台站名</span></div><div class="line">saclst stlo stla f *.z | awk <span class="string">'&#123;print $2, $3,"15 0 0 TR", $1&#125;'</span> | pstext -J<span class="variable">$J</span> -R<span class="variable">$R</span> -D-0.1c/-0.1c -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>代码中使用了 <code>saclst</code> 和 <code>awk</code> 提取了每个波形所对应的台站经纬度，并通过管道传递给 <code>psxy</code> 和 <code>pstext</code> 命令。</p>
<p>地图效果如下：</p>
<div class="figure">
<img src="/images/2015071801.png">

</div>
<h2 id="第一个波形振幅图">第一个波形振幅图</h2>
<p>以 <code>ntkl.z</code> 的波形为例，先不去想如何把波形放在台站附近，只考虑如何将波形画在地图上。</p>
<p>先把代码写出来，如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=M15c</div><div class="line">R=-120/-60/30/65</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B10/10 -Ggray -K -O -A1000 &gt;&gt; <span class="variable">$PS</span></div><div class="line">saclst stlo stla f *.z | awk <span class="string">'&#123;print $2, $3&#125;'</span> | psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sa0.5c -Gblack -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">saclst stlo stla f *.z | awk <span class="string">'&#123;print $2, $3,"15 0 0 TR", $1&#125;'</span> | pstext -J<span class="variable">$J</span> -R<span class="variable">$R</span> -D-0.1c/-0.1c -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制波形</span></div><div class="line">pssac -JX4c/2.6c -R200/1600/0/2 -B500/1 -M1 -Ent -K -O ntkl.z &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>生成的效果如下：</p>
<div class="figure">
<img src="/images/2015071802.png">

</div>
<p>解释一些 pssac 中各个选项的含义及作用：</p>
<ul>
<li><code>-R</code> 选项中 X 轴的范围 <code>200/1600</code> 是波形的时间跨度，这里要绘制整个波形，所以时间跨度由波形的 B 值和 E 值决定；当然也可以只绘制波形中的一小段，这个放后面再说；</li>
<li><code>-JX</code> 中的底图长度 <code>4c</code> 用于控制波形在地图上的长度；</li>
<li><code>-M1</code> 会对波形做振幅归一化，使得波形的最大振幅差在地图上显示的高度为 1** 英寸 **；修改这个值可以控制波形的高度；</li>
<li><code>-R</code> 选择中 Y 轴的范围设置为 <code>0/2</code> 以及 <code>-Ent</code> 中的 <code>n</code> 是固定的，直接用就好，不需要修改；这样设计的原因会在后面解释；</li>
<li><code>-JX</code> 中的 Y 轴长度 <code>2.6c</code> 为底图的高度；由于波形的最大振幅差已经设定为 1 英寸，即 2.54 厘米，底图的高度必须大于等于波形的高度，如果底图高度取 <code>2.54c</code>，可能会导致某些波形被截断，所以要底图高度要稍大一些，可以一点一点增加底图高度看具体效果；</li>
<li>此代码中 <code>-B500/1</code> 为波形加了边框，这样做是为了看起来更直观，稍后会把这个边框去掉；</li>
</ul>
<h2 id="将波形放对位置">将波形放对位置</h2>
<p>前面已经把波形画到了地图上，还需要将波形移动到台站所在的位置。最直观的想法是在用 pssac 绘制波形时，同时使用 <code>-X</code> 和 <code>-Y</code> 选项移动波形的坐标原点。那么 <code>-X</code> 和 <code>-Y</code> 的偏移量分别是多少呢？这需要借助于 GMT 的 <code>mapproject</code> 命令。</p>
<p><code>ntkl.z</code> 台站的位置是 <code>(-114.592, 62.4797)</code> ， <code>mapproject</code> 命令可以计算出任意一点相对于当前底图左下角坐标原点的偏移量:</p>
<pre><code>$ echo -114.592 62.4797 | mapproject -JM15c -R-120/-60/30/65
1.352   12.2477921602</code></pre>
<p>这里的输出结果表明， <code>(-114.6, 62.5)</code> 这一坐标相对于底图左下角原点的距离是 <code>(1.35c, 12.25c)</code> 。</p>
<p>知道偏移距离之后，给代码加上 <code>-Xa1.35c -Ya12.25c</code> 就可以把波形偏移到台站处了。 <code>-X</code> 和 <code>-Y</code> 选项中在偏移量之前加上了 <code>a</code>，使得将波形偏移到台站坐标处的同时不修改原底图的坐标原点，这样不会影响到后面波形的绘制。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=M15c</div><div class="line">R=-120/-60/30/65</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B10/10 -Ggray -K -O -A1000 &gt;&gt; <span class="variable">$PS</span></div><div class="line">saclst stlo stla f *.z | awk <span class="string">'&#123;print $2, $3&#125;'</span> | psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sa0.5c -Gblack -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">saclst stlo stla f *.z | awk <span class="string">'&#123;print $2, $3,"15 0 0 TR", $1&#125;'</span> | pstext -J<span class="variable">$J</span> -R<span class="variable">$R</span> -D-0.1c/-0.1c -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">pssac -JX4c/2.6c -R200/1600/0/2 -B500/1 -M1 -Ent -K -O -Xa1.35c -Ya12.25c ntkl.z &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>绘图效果如下：</p>
<div class="figure">
<img src="/images/2015071803.png">

</div>
<p>上图还是有问题。因为 <code>-X</code> 和 <code>-Y</code> 控制的是 pssac 的底图原点相当于地图底图的原点的偏移量，因而导致波形的底图边框左下角恰好位于台站位置处。</p>
<p>从美观等角度考虑，可能希望波形起点位于五角星的正右边一点。因而需要将 <code>mapproject</code> 计算出来的 X 偏移量调大一点，Y 偏移量则应减去底图高度的一半。这个例子中，可以将 <code>-Xa1.35c -Ya12.25c</code> 改成 <code>-Xa1.5c -Ya11c</code>。如果希望波形起点位于五角星的正左边一点，也是可以的，自己指定一个额外的偏移量即可。</p>
<p>绘图效果如下：</p>
<div class="figure">
<img src="/images/2015071804.png">

</div>
<h2 id="绘制所有波形">绘制所有波形</h2>
<p>前面已经把一个台站的波形放对了位置，接下来就需要把所有波形都放对位置。</p>
<p>可以使用 <code>mapproject</code> 命令获取所有台站位置相对于底图左下角的偏移量，如下所示:</p>
<pre><code>$ saclst stlo stla f *.z | awk &#39;{print $2, $3, $1}&#39; | mapproject -JM15c -R-120/-60/30/65
1.352   12.2477921602   ntkl.z
11.3675 4.57807021226   nykl.z
6.57445 6.91932494984   onkl.z
3.991   4.42902501583   sdkl.z</code></pre>
<p>然后在 <code>mapproject</code> 的输出的基础上加上额外的偏移量，波形就可以放在台站正右方了。</p>
<p>代码如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=M15c</div><div class="line">R=-120/-60/30/65</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B10/10 -Ggray -K -O -A1000 &gt;&gt; <span class="variable">$PS</span></div><div class="line">saclst stlo stla f *.z | awk <span class="string">'&#123;print $2, $3&#125;'</span> | psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sa0.5c -Gblack -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">saclst stlo stla f *.z | awk <span class="string">'&#123;print $2, $3,"15 0 0 TR", $1&#125;'</span> | pstext -J<span class="variable">$J</span> -R<span class="variable">$R</span> -D-0.1c/-0.1c -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">pssac -JX4c/2.6c -R200/1600/0/2 -M1 -Ent -K -O -Xa1.5c -Ya11c ntkl.z &gt;&gt; <span class="variable">$PS</span></div><div class="line">pssac -JX4c/2.6c -R200/1600/0/2 -M1 -Ent -K -O -Xa11.5c -Ya3.25c nykl.z &gt;&gt; <span class="variable">$PS</span></div><div class="line">pssac -JX4c/2.6c -R200/1600/0/2 -M1 -Ent -K -O -Xa6.67c -Ya5.6c onkl.z &gt;&gt; <span class="variable">$PS</span></div><div class="line">pssac -JX4c/2.6c -R200/1600/0/2 -M1 -Ent -K -O -Xa4.2c -Ya3.1c sdkl.z &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>绘图效果如下：</p>
<div class="figure">
<img src="/images/2015071805.png">

</div>
<p>上图还是有些问题，比如 <code>nykl.z</code> 台站的波形右边有点过界了， <code>sdkl.z</code> 似乎被限幅了，可以修改 <code>-JX4c/2.6c</code> 来微调。微调的事情就不再说了。</p>
<h2 id="自动化">自动化</h2>
<p>如果只有几个波形的话，直接为每个波形计算偏移距，然后手写 pssac 语句倒也不麻烦。如果台站很多的话，就需要将整个流程自动化了。一方面是因为要画多个波形的话，手写 pssac 工作量有些大；另一方面，命令中的某些参数存在关联，因而微调某个参数的同时，可能也要同时调整其他参数（比如，上面的代码中，若要微调一下地图的 <code>-J</code> 和 <code>-R</code> ，则所有的偏移量都需要重新计算并修改）。</p>
<p>下面给出用 Perl 写的自动化脚本。之所以用 Perl 而不是用 Bash，一方面是因为自动化过程中涉及到一些浮点数运算，而 Bash 的浮点运算比较麻烦，另一方面是因为我不会写稍复杂的 Bash 脚本。</p>
<p>注意：本脚本只能使用 GMT4 的绘图命令，使用 GMT5 的命令会出现问题，请勿使用。</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env perl</span></div><div class="line"><span class="keyword">use</span> strict;</div><div class="line"><span class="keyword">use</span> warnings;</div><div class="line"></div><div class="line"><span class="keyword">my</span> $J = <span class="string">"M15c"</span>;</div><div class="line"><span class="keyword">my</span> $R = <span class="string">"-120/-60/30/65"</span>;</div><div class="line"><span class="keyword">my</span> $PS = <span class="string">"map.ps"</span>;</div><div class="line"></div><div class="line"><span class="keyword">system</span> <span class="string">"psxy -J$J -R$R -T -K&gt; $PS"</span>;</div><div class="line"></div><div class="line"><span class="comment"># 绘制海岸线</span></div><div class="line"><span class="keyword">system</span> <span class="string">"pscoast -J$J -R$R -B10/10 -Ggray -K -O -A1000&gt;&gt; $PS"</span>;</div><div class="line"></div><div class="line"><span class="keyword">my</span> @sacfiles = <span class="keyword">glob</span> <span class="string">"*.z"</span>;</div><div class="line"><span class="comment"># 绘制台站位置</span></div><div class="line"><span class="keyword">open</span>(PSXY,<span class="string">"| psxy -J$J -R$R -Sa0.5c -Gblack -K -O&gt;&gt; $PS"</span>);</div><div class="line"><span class="keyword">foreach</span> (@sacfiles) &#123;</div><div class="line">    <span class="keyword">my</span> ($fname, $stlo, $stla) = <span class="keyword">split</span> <span class="string">" "</span>, <span class="string">`saclst stlo stla f $_`</span>;</div><div class="line">    <span class="keyword">print</span> PSXY <span class="string">"$stlo $stla\n"</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">close</span>(PSXY);</div><div class="line"></div><div class="line"><span class="comment"># 绘制台站名</span></div><div class="line"><span class="keyword">open</span>(PSTEXT,<span class="string">"| pstext -J$J -R$R -D-0.1c/-0.1c -K -O&gt;&gt; $PS"</span>);</div><div class="line"><span class="keyword">foreach</span> (@sacfiles) &#123;</div><div class="line">    <span class="keyword">my</span> ($fname, $stlo, $stla) = <span class="keyword">split</span> <span class="string">" "</span>, <span class="string">`saclst stlo stla f $_`</span>;</div><div class="line">    <span class="keyword">print</span> PSTEXT <span class="string">"$stlo $stla 15 0 0 TR $fname\n"</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">close</span>(PSTEXT);</div><div class="line"></div><div class="line"><span class="comment"># 波形相关参数</span></div><div class="line"><span class="keyword">my</span> $width = <span class="number">4</span>;      <span class="comment"># 波形的底图宽度</span></div><div class="line"><span class="keyword">my</span> $height = <span class="number">2.6</span>;   <span class="comment"># 波形的底图高度</span></div><div class="line"><span class="keyword">my</span> $M = <span class="string">"-M1"</span>;      <span class="comment"># 波形在图上的高度为 1 英寸</span></div><div class="line"><span class="keyword">my</span> $E = <span class="string">"-Ent"</span>;     <span class="comment"># 波形剖面图类型</span></div><div class="line"><span class="keyword">my</span> $Rsac = <span class="string">"-R200/1600/0/2"</span>;    <span class="comment"># 波形的范围</span></div><div class="line"><span class="keyword">my</span> $Jsac = <span class="string">"-JX<span class="subst">$&#123;width&#125;</span>c/<span class="subst">$&#123;height&#125;</span>c"</span>;</div><div class="line"><span class="keyword">my</span> $dx = <span class="number">0</span>.<span class="number">15</span>;      <span class="comment"># 对 X 偏移量的校正</span></div><div class="line"><span class="keyword">my</span> $dy = -$height/<span class="number">2.0</span>;  <span class="comment"># 对 Y 偏移量的校正</span></div><div class="line"></div><div class="line"><span class="keyword">foreach</span> (@sacfiles) &#123;</div><div class="line">    <span class="keyword">my</span> ($fname, $stlo, $stla) = <span class="keyword">split</span> <span class="string">" "</span>, <span class="string">`saclst stlo stla f $_`</span>;</div><div class="line"></div><div class="line">    <span class="comment"># 用 mapproject 计算偏移量</span></div><div class="line">    <span class="keyword">my</span> ($Xshift, $Yshift) = <span class="keyword">split</span> <span class="string">" "</span>, <span class="string">`echo $stlo $stla | mapproject -J$J -R$R`</span>;</div><div class="line"></div><div class="line">    <span class="comment"># 对计算出的偏移量做微调</span></div><div class="line">    $Xshift += $dx;</div><div class="line">    $Yshift += $dy;</div><div class="line"></div><div class="line">    <span class="comment"># 绘制波形</span></div><div class="line">    <span class="keyword">system</span> <span class="string">"pssac $Jsac $Rsac $M $E -Xa<span class="subst">$&#123;Xshift&#125;</span>c -Ya<span class="subst">$&#123;Yshift&#125;</span>c -K -O $fname &gt;&gt; $PS"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">system</span> <span class="string">"psxy -J$J -R$R -T -O&gt;&gt; $PS"</span>;</div></pre></td></tr></table></figure>
<p>这个 Perl 脚本的自动化程度比较高，对参数的微调基本不会影响到图的整体效果。下面稍微解释一下其中可以微调的变量：</p>
<ul>
<li><code>$J</code> ：地图的投影方式；</li>
<li><code>$R</code> ：地图的区域范围；</li>
<li><code>$M</code> ：波形在图上的高度（inch）；</li>
<li><code>$width</code> ：波形底图的宽度（cm），相当于波形在图上的宽度；</li>
<li><code>$height</code> ：波形底图的高度（cm），要求比 <code>$M</code> 给出的值稍大；</li>
<li><code>$Rsac</code> ：波形的范围，横轴范围需要自己根据数据调整，纵轴范围固定为 <code>0/2</code> ；</li>
<li><code>$E</code> ：固定为 <code>-Ent</code>，如果想要只绘制波形的一部分，可以稍做修改，参考后面一节；</li>
<li><code>$Jsac</code> ：波形的投影方式，不需要修改；</li>
<li><code>$dx</code> ：对 <code>mapproject</code> 计算出的 X 偏移量的微调；</li>
<li><code>$dy</code> ：对 <code>mapproject</code> 计算出的 Y 偏移量的微调；</li>
</ul>
<p>注：该脚本中所有波形文件共用同一个 <code>$Rsac</code>，这是一个限制。如果波形的 B 和 E 值不同，则需要对每个波形使用不同的 <code>$Rsac</code>，这需要对脚本做一点微调。</p>
<h2 id="只绘制一段波形">只绘制一段波形</h2>
<p>前面的代码中绘制的是整条波形，有时候会需要只绘制波形中的一段。比如 P 波的震相到时位于 SAC 文件的头段变量 T0 中，想要将数据中 T0 前 30 秒到 T0 后 30 秒的波形画在地图上。</p>
<p>对前面给出的 Perl 代码稍作修改即可：</p>
<ul>
<li>将 <code>$E</code> 的值改成 <code>-Ent0</code> ；</li>
<li>将 <code>$R</code> 的值改成 <code>-R-30/30/0/2 -C</code> ；</li>
</ul>
<p>最终得到的效果图如下（示例数据中本没有标记 T0，这里我随便标记了几个 T0 作为 P 波到时）：</p>
<div class="figure">
<img src="/images/2015071806.png">

</div>
<p>几点说明：</p>
<ul>
<li><code>-Ent0</code> 中 <code>n</code> 表示绘制 Y 轴为文件序号的剖面图，因为每个 pssac 命令中只绘制一个波形，因而这个波形会被画在 <code>Y=1</code> 处，因而此处 <code>-R</code> 中 Y 轴的范围取的是 0 到 2。实际上只要 Y 轴的范围包含 1 即可，比如 Y 轴范围取 <code>0.5/1.5</code> 、 <code>0/3</code> 均可，可以尝试取不同的值查看其效果；</li>
<li><code>-Ent0</code> 中 <code>t0</code> 表示以 T0 为参考时间，此时 T0 对应的时刻相当于 0，T0 前后 30 秒就很容易用 <code>-R-30/30/0/2</code> 来表示了；</li>
<li><code>-C</code> 选项很重要。若不使用 <code>-C</code> 选项， <code>-M1</code> 会将整个波形的最大振幅差归一化到 1 英寸，进而导致截取的部分波形最大振幅差比较小；若使用了 <code>-C</code> 选项，表示截取 - 30 秒到 30 秒的波形，然后将这段波形的最大振幅差归一化到 1 英寸；</li>
</ul>
<h2 id="额外的说明">额外的说明</h2>
<p>前面的所有代码中，都使用了 <code>-Ent</code> 或 <code>-Ent0</code> 选项，即表示 Y 轴为文件序号的剖面图。明明只有一个波形，直接画波形振幅图不就好了吗，为什么一定要弄成剖面图呢？</p>
<p>的确，在绘制整个波形的时候，完全可以不使用 <code>-Ent</code> 选项的，此时就是最简单的波形振幅图，此时波形位于 <code>Y=0</code> 处，因而 <code>-R</code> 中 Y 的范围改成 <code>-1/1</code> 或者其他包含 0 的范围即可。</p>
<p>在绘图部分波形的时候，也可以不使用 <code>-Ent0</code> 选项。比如 P 波到时为 600 秒，前后 30 秒也就是 570 到 630 秒，直接把 <code>-R</code> 选项中的 X 范围改成 <code>570/630</code> 即可。但不同的波形 P 波到时不同，所以 X 轴的范围也不同，这种做法每次都要先提取 T0 的值，然后加减 30 秒计算 X 轴范围，相对来说比较麻烦。</p>
<p>绘制部分波形时，更合理也更直观的做法，肯定是指定 T0 为参考时刻。要指定 T0 为参考时刻，就必须使用 <code>-E</code> 选项，而使用 <code>-E</code> 选项就意味着要绘制剖面图。剖面类型有 5 种，当剖面类型为 <code>n</code> 时，Y 值取 <code>0/2</code> 即可；如果使用其他剖面类型，Y 值则要依赖于波形中的头段。因而限定了剖面类型为 <code>n</code> 。</p>
<p>在绘制整个波形时，使用 <code>-Ent</code> 且 Y 轴范围为 <code>0/2</code>，使得脚本可以只需要尽可能少的修改即可适用于绘制部分波形。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> pssac </tag>
            
            <tag> SAC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[pssac 使用教程]]></title>
      <url>http://seisman.info/pssac-notes.html</url>
      <content type="html"><![CDATA[<p><strong>注意：本文仅针对 Prof. Lupei Zhu 的 pssac 程序，其仅可在 GMT 4下使用。 对于GMT5用户，GMT 在 5.3.1 之后自带了 pssac，可以使用 <code>gmt pssac</code> 直接调用。</strong></p>
<p>相关文档见:</p>
<ul>
<li>http://gmt.soest.hawaii.edu/doc/latest/supplements/meca/pssac.html</li>
<li>http://modules.gmt-china.org/pssac.html</li>
</ul>
<p><code>pssac</code> 可以读取 SAC 波形数据，并利用 GMT 的绘图功能将波形数据绘制在 PS 文件中。 <code>pssac</code> 绘制的波形图，大致可以分为三类：</p>
<ol style="list-style-type: decimal">
<li>波形振幅图：横轴是时间，纵轴是振幅；</li>
<li>剖面图：横轴是时间，纵轴是其他物理量（比如震中距、方位角、反方位角以及文件号）；</li>
<li>任意位置图：将波形文件绘制在图上的任意位置；</li>
</ol>
<p>本文首先简单介绍 <code>pssac</code> 的各个选项，然后依次介绍如何绘制波形振幅图、剖面图以及任意位置图，在这个过程中会详细介绍较复杂的选项。</p>
<a id="more"></a>
<h2 id="选项一览">选项一览</h2>
<p>终端输入 <code>pssac</code> 即可得到 pssac 的使用说明。pssac 的命令中主要包含了三个部分：</p>
<ol style="list-style-type: decimal">
<li>GMT 的标准选项</li>
<li>pssac 的特有选项</li>
<li>SAC 文件</li>
</ol>
<h3 id="gmt-标准选项">GMT 标准选项</h3>
<p>pssac 继承了 GMT 的众多标准选项，包括：</p>
<ol style="list-style-type: decimal">
<li>必须选项： <code>-J -R</code></li>
<li>可选选项： <code>-B -K -O -U -X -Y -W</code></li>
</ol>
<p>这些选项的具体用法可以参考 GMT 官方文档，简单说明如下：</p>
<ul>
<li><code>-J</code> ：设置投影方式以及底图尺寸；</li>
<li><code>-R</code> ：设置横纵坐标的范围；</li>
<li><code>-B</code> ：设置底图边框的属性；</li>
<li><code>-K -O</code> ：图层叠加；</li>
<li><code>-U</code> ：Unix 时间戳；</li>
<li><code>-X -Y</code> ：移动绘图原点；</li>
<li><code>-W</code> ：用于设置线条的粗细、颜色与线型；</li>
</ul>
<p>需要注意： <code>pssac</code> 不支持 <code>-P</code> 选项。</p>
<h3 id="pssac-特有选项">pssac 特有选项</h3>
<p><code>pssac</code> 的特有选项有:</p>
<pre><code>-C -E -G -I -M -N -Q -r -S -V</code></pre>
<p>先简单介绍一个这些选项的作用：</p>
<ul>
<li><code>-I</code> ：绘图之前先对波形做积分；代码中在做积分时，没有乘以采样间隔，因而导致波形的绝对振幅有误，但波形的形状是正确的；</li>
<li><code>-Q</code> ：绘图之前先对波形做平方；</li>
<li><code>-r</code> ：绘图之前先去除均值；该选项仅在同时使用 <code>-M</code> 选项时有效；</li>
<li><code>-Nclip</code> ：使用该选项会使得波形振幅限制在 <code>[-clip, clip]</code> 范围内；若波形数据中某数据点的振幅值大于 clip，则该数据点会被赋值为 clip；若某数据点的振幅值小于 - clip，则该数据点会被赋值为 - clip；该选项仅在同时使用 <code>-M</code> 选项时有效；</li>
<li><code>-Gr/g/b/c</code> ：将振幅大于 <code>c</code> 的部分填色，颜色由 <code>r/g/b</code> 决定；此处只支持 RGB 颜色；不支持颜色名、HSV 等；</li>
<li><code>-Ct1/t2</code> ：只截取波形中 t1 到 t2 时间段内的数据；若只使用 <code>-C</code> 而不给出 t1 和 t2，则会根据 <code>-R</code> 选项指定的 X 轴范围对数据做截取；</li>
<li><code>-Msize/alpha</code> ：将波形数据振幅归一化到某个尺寸；</li>
<li><code>-Sshift</code> ：将波形数据整体移动 shift 秒，相当于 <code>b=b+shift</code> ；</li>
<li><code>-E</code> ：设置剖面图的 Y 轴类型，以及数据的时间对齐方式；</li>
<li><code>-V</code> ：垂直绘制波形，即交换 X 轴和 Y 轴；</li>
</ul>
<p>不同的选项对数据做了不同的处理，这就涉及到数据处理的顺序问题。前面的处理会影响到后面的处理，因而也会影响到其他选项的参数的选取。pssac 中波形的处理顺序，或者说不同选项之间的优先级：</p>
<ol style="list-style-type: decimal">
<li><p>先处理 X 轴:</p>
<pre><code>波形对齐 (-E) =&gt; 波形整体 shift(-S) =&gt; 截窗 (-C)</code></pre></li>
<li><p>再处理 Y 轴，即波形发生了变化:</p>
<pre><code>积分 (-I) =&gt; 平方(-Q) =&gt; 去均值(-r) =&gt; 振幅归“一” 化(-M) =&gt; 限幅处理(-N)</code></pre></li>
<li>交换 X 轴和 Y 轴（-V）</li>
<li><p>绘制波形:</p>
<pre><code>绘制波形 (-W) =&gt; 填色 (-G)</code></pre></li>
</ol>
<h2 id="波形振幅图">波形振幅图</h2>
<p>这一节会介绍如何用 pssac 绘制最简单的波形振幅图，在介绍的同时会尽可能详细地解释每个选项的意义。在绘制简单的波形振幅图时不需要使用 <code>-E</code> 选项，所以 <code>-E</code> 选项的介绍放在绘制剖面图时再介绍。</p>
<h3 id="示例-sac-数据">示例 SAC 数据</h3>
<p>先用 SAC 生成两个示例数据，以方便重复下面的绘图:</p>
<pre><code>SAC&gt; fg seis
SAC&gt; rmean
SAC&gt; ch t0 12   // 做了 t0 标记，供后面使用
SAC&gt; w seis.1
SAC&gt; mul 2      // 将数据整体乘以 2，写到新文件中
SAC&gt; w seis.2</code></pre>
<p>用 <code>saclst</code> 查看一下两个数据的头段信息:</p>
<pre><code>$ saclst b e t0 depmax depmin f seis.?
seis.1         9.46       19.45          12     1.61919    -1.47073
seis.2         9.46       19.45          12     3.23837    -2.94147</code></pre>
<h3 id="单个波形的振幅">单个波形的振幅</h3>
<p>先以 <code>seis.1</code> 为例，根据头段信息可知，该数据的时间范围为 <code>[9.46,19.45]</code>， 振幅范围为 <code>[-1.47,1.62]</code> 。据此，可以设置 - R 选项的参数为 <code>-R9/20/-2/2</code> :</p>
<pre><code>pssac -JX20c/10c -R9/20/-2/2 seis.1 &gt; test.ps</code></pre>
<div class="figure">
<img src="/images/2015071701.png">

</div>
<p>上面的例子中只使用了 - J 和 - R 选项，是 pssac 的最小示例。通常情况下，还需要使用 - B 选项给波形图加上边框:</p>
<pre><code>pssac -JX20c/10c -R9/20/-2/2 -B1:&quot;T(s)&quot;:/0.5:&quot;Amplitude&quot;:WSen seis.1 &gt; test.ps</code></pre>
<div class="figure">
<img src="/images/2015071702.png">

</div>
<p>加上边框之后就很清楚了，横轴表示时间，纵轴表示波形的绝对振幅。</p>
<h3 id="绘制多个波形">绘制多个波形</h3>
<p>绘制一个波形是不够的，pssac 还可以一次性绘制多个波形:</p>
<pre><code>pssac -JX25c/5c -R10/16/-3.2/3.2 -B1:&quot;T(s)&quot;:/1:&quot;Amplitude&quot;:WSen seis.? &gt; test.ps</code></pre>
<p>这个例子中，同时绘制了 seis.1 和 seis.2 两个波形，为了看上去更明显，这里使用了稍稍不同的 - J 和 - R。可以看到 seis.2 和 seis.1 共用了 X 轴和 Y 轴，跟 SAC 中的 <code>plot2</code> 命令的效果相同。</p>
<div class="figure">
<img src="/images/2015071703.png">

</div>
<h3 id="s-选项的效果">-S 选项的效果</h3>
<p><code>-S</code> 选项相当于将数据的 b 值加上了 <code>shift</code> 秒，因而会影响到 X 轴的范围，即影响到 - R 选项的参数:</p>
<pre><code>pssac -JX20c/10c -R29/40/-2/2 -B1:&quot;T(s)&quot;:/0.5:&quot;Amplitude&quot;:WSen -S20 seis.1 &gt; test.ps</code></pre>
<p>上面的代码中使用了 <code>-S20</code> ，将波形整体移动了 20 秒，此时移动后的波形 <code>b=29.46, e=39.45</code> ，因而 <code>-R</code> 选项也要相应的变化。</p>
<div class="figure">
<img src="/images/2015071704.png">

</div>
<h3 id="c-选项的效果">-C 选项的效果</h3>
<p><code>-C</code> 选项的作用在于从当前数据中截取其中一段，这样可以只显示一个长波形中的一小段:</p>
<pre><code>pssac -JX20c/10c -R9/20/-2/2 -B1:&quot;T(s)&quot;:/0.5:&quot;Amplitude&quot;:WSen -C11/14 seis.1 &gt; test.ps</code></pre>
<p>本例中，数据的时间范围是 <code>[9.46, 19.45]</code>， <code>-C</code> 选项截取了其中的 11 到 14 秒，用于绘图，效果图如下，注意与图 2 对比。</p>
<div class="figure">
<img src="/images/2015071705.png">

</div>
<p>由于 <code>-S</code> 选项优先于 <code>-C</code> 选项，因而使用 <code>-S</code> 选项会对 <code>-R</code> 和 <code>-C</code> 的参数同时产生影响:</p>
<pre><code>pssac -JX20c/10c -R29/40/-2/2 -B1:&quot;T(s)&quot;:/0.5:&quot;Amplitude&quot;:WSen seis.1 -S20 -C31/34 &gt; test.ps</code></pre>
<div class="figure">
<img src="/images/2015071706.png">

</div>
<p>本例中，同时使用了 <code>-S</code> 和 <code>-C</code> ，由于 <code>-S</code> 优先于 <code>-C</code>，所以波形数据的时间范围首先被 <code>-S20</code> 选项从 <code>[9.46, 19.45]</code> 移动到 <code>[29.46, 39.45]</code> ，而 <code>-C31/34</code> 则截取了偏移后的波形数据的 31 到 34 秒，相当于截取偏移之前数据的 11 到 14 秒。</p>
<h3 id="i--q--r">-I, -Q, -r</h3>
<p>三个选项分别实现波形的积分、平方和去均值，加上这些选项后会影响波形的振幅，因而需要调整 - R 中 Y 轴的范围。另外需要注意的是，<code>-C</code> 选项的优先级要高于这三个选项，因而若同时使用了 <code>-C</code> 选项，则只会对截取的这一段数据做积分 / 平方 / 去均值的操作。这几个选项相对简单，且不常用，暂且不多说。</p>
<h3 id="m-选项">-M 选项</h3>
<p><code>-M</code> 选项会对波形进行 “归一化”，只是这里的“归一化” 并不真的代表将振幅归一化到 1。</p>
<p><code>-M</code> 选项的语法为 <code>-Msize[/alpha]</code>，依据参数的不同可以进一步分为三种用法。</p>
<ol style="list-style-type: decimal">
<li><code>-Msize</code></li>
<li><code>-Msize/alpha</code> (alpha&lt;0)</li>
<li><code>-Msize/alpha</code> (alpha&gt;0)</li>
</ol>
<p><code>-M</code> 选项多用于剖面图中，很少用于波形振幅图中，但本质上是没有区别的，故而在这里一并介绍。</p>
<h4 id="msize">-Msize</h4>
<p>size 的单位是英寸，这种用法会使得所有波形的最大振幅差在图上的长度为 size 英寸。其中，最大振幅差是指波形的最大振幅值与最小振幅值的差的绝对值，即 <code>abs(depmax-depmin)</code> 。</p>
<pre><code>pssac -JX6i/5i -R9/20/-2.5/2.5 -B1:&quot;T(s)&quot;:/0.5g0.5:&quot;Amplitude&quot;:WSen -M2 seis.? &gt; test.ps</code></pre>
<p>这个例子中， <code>-M2</code> 将所有波形做归一化使得最大振幅差对应的高度为 2 英寸。由于 Y 轴的范围是 <code>[-2.5, 2.5]</code>，Y 轴的高度为 5 英寸，即图上 1 个 Y 单位所对应的长度为 1 英寸，因而归一化之后最大振幅差对应 2 英寸，即 2 个 Y 单位，从图中也可以很明显的看出来。</p>
<div class="figure">
<img src="/images/2015071707.png">

</div>
<p>这种做法使得所有波形在图上看上去最大振幅差都是 size 英寸，因而所有波形都失去了绝对振幅和相对振幅信息。以这个例子为例，图中读出的振幅值已经不再是波形真实的振幅值，即丢失了绝对振幅；另一方面，本例中绘制了 seis.1 和 seis.2 两个 SAC 文件，尽管两个 SAC 文件的振幅有两倍的差距，归一化之后相对振幅信息丢失，所以看上去两个波形完全重合了。</p>
<h4 id="alpha-小于-0">alpha 小于 0</h4>
<p>若 alpha&lt;0，则会根据第一个波形数据计算归一化因子，使得第一个波形的最大振幅差在图上等于 size 英寸，而其余的波形则会乘以同一个归一化因子。因而这种做法，所有波形虽然失去了绝对振幅信息，但却保留了相对振幅信息。</p>
<h4 id="alpha-大于-0">alpha 大于 0</h4>
<p>这种情况下，归一化因子为:</p>
<pre><code>yscale = pow(abs(h.dist), alpha)*size</code></pre>
<p>这样设计的原因是，对于一个正常的波形来说，震中距越大，由于几何扩散的效应，振幅越小。这个选项相当于对几何扩散项进行校正，即绘制了不考虑几何扩散情况下波形的相对振幅。</p>
<p>其中 alpha 是几何扩散因子，而 size 的含义不是太清晰。</p>
<h3 id="n-选项">-N 选项</h3>
<p><code>-Nclip</code> 选项会将绝对振幅超过 clip 的部分做截断。需要注意， <code>-N</code> 的优先级很低，因而 clip 值的选取要考虑其他选项对振幅的影响:</p>
<pre><code>pssac -JX6i/5i -R9/20/-2.5/2.5 -B1:&quot;T(s)&quot;:/0.5g0.5:&quot;Amplitude&quot;:WSen -M2 -N0.3 seis.1 &gt; test.ps</code></pre>
<p>本例中，对绝对振幅超过 0.3 的部分做截断。此处的 0.3 是经过归一化之后的振幅值，因而没有明确的物理含义。</p>
<div class="figure">
<img src="/images/2015071708.png">

</div>
<h3 id="v-选项">-V 选项</h3>
<p><code>-V</code> 选项会交换 X 轴和 Y 轴，因而 <code>-J</code> 、 <code>-R</code> 和 <code>-B</code> 都需要做相应修改:</p>
<pre><code>pssac -JX5c/10c -R-2/2/9/20 -B1/2WSen seis.1 -V &gt; test.ps</code></pre>
<div class="figure">
<img src="/images/2015071709.png">

</div>
<p>在某些特定的研究中会需要使用竖排模式。比如接收函数中，地震图中的某个震相到时可能与某个界面的深度成正比。通过将一系列波形竖排起来，纵坐标的时间对应某个特定的深度，因而可以很直观地看到界面深度的变化。</p>
<h3 id="w-和---g-选项">-W 和 - G 选项</h3>
<p><code>-W</code> 选项用于设置画笔数学，<code>-G</code> 选项用于控制波形的颜色填充:</p>
<pre><code>pssac -JX20c/10c -R9/20/-2/2 -B1:&quot;T(s)&quot;:/0.5:&quot;Amplitude&quot;:WSen -W0.2p,blue -G255/0/0/0 seis.1 &gt; test.ps</code></pre>
<p>本例中，线条宽度为 0.2p，颜色为蓝色，并对大于 0 的部分填充红色（ <code>255/0/0</code>）。</p>
<div class="figure">
<img src="/images/2015071710.png">

</div>
<h2 id="剖面图">剖面图</h2>
<p>剖面图：横轴为时间，纵轴为其他物理量，pssac 中纵轴可以是震中距、方位角、反方位角以及文件序号。</p>
<p>pssac 使用 <code>-E</code> 选择来指定剖面图的具体性质，同时用 <code>-M</code> 选项对多个波形做归一化。其他的选项参考前面的说明。</p>
<h3 id="生成示例数据">生成示例数据</h3>
<p>先利用 SAC 自带的数据，生成绘制剖面图所需要的示例数据:</p>
<pre><code>SAC&gt; dg sub local cal.z cao.z cda.z cdv.z cmn.z cva.z cvl.z cvy.z
SAC&gt; rmean
SAC&gt; taper
SAC&gt; bp c 0.5 3
SAC&gt; w cal.z cao.z cda.z cdv.z cmn.z cva.z cvl.z cvy.z</code></pre>
<p>查看一下这些文件的基本头段信息：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ saclst b e a dist gcarc az baz f *.z</div><div class="line">cal.z      9.99365     50.0089     20.5949     12.4876    0.112316      234.02     53.9503</div><div class="line">cao.z      9.99365     50.0089     22.2028     23.0074    0.206933      144.09     324.182</div><div class="line">cda.z      9.99365     50.0089      23.078     23.9117    0.215068     350.813     170.787</div><div class="line">cdv.z      9.99365     50.0089     19.5975      5.4563   0.0490751     4.64117     184.644</div><div class="line">cmn.z      9.99365     50.0089     20.6763     12.3995    0.111524     350.452     170.437</div><div class="line">cva.z      9.99365     50.0089     20.7882     12.9964    0.116892     329.957     149.912</div><div class="line">cvl.z      9.99365     50.0089      21.867     17.9895    0.161802     312.309     132.218</div><div class="line">cvy.z      9.99365     50.0089     22.3656     18.8976     0.16997     318.278     138.192</div></pre></td></tr></table></figure>
<h3 id="波形振幅图-1">波形振幅图</h3>
<p>先用前面介绍过的方法，绘制一个波形振幅图。从数据的头段中可知，时间范围大概是 <code>[10, 50]</code> ，振幅的范围为 <code>[-500,500]</code> ，因而设置 - R 的范围为 <code>-R9/55/-500/500</code> :</p>
<pre><code>pssac -JX20c/10c -R9/55/-500/500 -B10/100WSen *.z &gt; test.ps</code></pre>
<p>此时，所有的波形共用 X 轴和 Y 轴，类似于 SAC 中 <code>plot2</code> 的绘图效果。</p>
<div class="figure">
<img src="/images/2015071711.png">

</div>
<h3 id="最简单的剖面图">最简单的剖面图</h3>
<p><code>-E</code> 选项表明要绘制剖面图，其语法为 <code>-E(k|d|a|n|b)(t[n]|vel)</code>。语法中被小括号分开的两部分，分别用于指定剖面类型和时间轴对齐方式。</p>
<p>pssac 支持的剖面类型包括：</p>
<ul>
<li>a：Y 轴为方位角</li>
<li>b：Y 轴为反方位角</li>
<li>d：Y 轴为震中距（单位为度）</li>
<li>k：Y 轴为震中距（单位为千米）</li>
<li>n：Y 轴为波形的序号（从 1 到 N）</li>
</ul>
<p>不同的剖面类型，对应的 Y 轴的范围就不同。下面的例子展示了不同的剖面类型所使用的命令，注意其中 <code>-R</code> 和 <code>-B</code> 选项的差异:</p>
<pre><code>pssac -JX20c/10c -R10/50/3/28 -B10:&quot;T(s)&quot;:/5:&quot;Dist(km)&quot;:WSen -Ekt -M0.5 *.z &gt; test.ps
pssac -JX20c/10c -R10/50/-50/380 -B10:&quot;T(s)&quot;:/60:&quot;Azimuth&quot;:WSen -Eat -M0.5 *.z &gt; test.ps
pssac -JX20c/10c -R10/50/-50/380 -B10:&quot;T(s)&quot;:/60:&quot;Back Azimuth&quot;:WSen -Ebt -M0.5 *.z &gt; test.ps
pssac -JX20c/10c -R10/50/0/0.25 -B10:&quot;T(s)&quot;:/0.05:&quot;Dist(degree)&quot;:WSen -Edt -M0.5 *.z &gt; test.ps
pssac -JX20c/10c -R10/50/0/9 -B10:&quot;T(s)&quot;:/1:&quot;No.&quot;:WSen -Ent -M0.5 *.z &gt; test.ps</code></pre>
<p>这里只展示一下 <code>-Ek</code> 的结果，其他结果类似，此处 - M 的含义与之前介绍的相同。</p>
<div class="figure">
<img src="/images/2015071712.png">

</div>
<p>时间轴对齐方式有三种（下面的例子中剖面类型都假定为 <code>k</code> ）：</p>
<ul>
<li><code>-Ekt</code> 表示按照绝对时间对齐</li>
<li><code>-Ektn</code> 表示按照某个头段对齐</li>
<li><code>-Ekvel</code> 表示按照给定的视速度对齐</li>
</ul>
<p>说明：</p>
<ol style="list-style-type: decimal">
<li>n 可以取值为 - 5，-3，-2 以及 0 到 9
<ul>
<li>-5 表示按照文件开始时间（b）对齐</li>
<li>-3 表示按发震时刻（o）对齐</li>
<li>-2 表示按初至到时对齐（a）对齐</li>
<li>0 到 9 表示按照 t0-t9 对齐</li>
<li>若 n 取数字，则等效于不指定 n，即 <code>-Ekt-8</code> 等效于 <code>-Ekt</code></li>
</ul></li>
<li>按照视速度对齐的代码是 <code>t -= fabs(h.dist)/reduce_vel</code></li>
</ol>
<p>下面的例子中展示了按照 b 值对齐，按照 a 值对齐，以及按照视速度 7 km/s 对齐的结果，注意其中 - R 选项的区别:</p>
<pre><code>pssac -JX20c/10c -R0/40/0/0.25 -B10:&quot;T(s)&quot;:/0.05:&quot;Dist(degree)&quot;:WSen -Edt-5 -M0.5 *.z &gt; test.ps
pssac -JX20c/10c -R-15/35/0/0.25 -B10:&quot;T(s)&quot;:/0.05:&quot;Dist(degree)&quot;:WSen -Edt-2 -M0.5 *.z &gt; test.ps
pssac -JX20c/10c -R10/50/0/0.25 -B10:&quot;T(s)&quot;:/0.05:&quot;Dist(degree)&quot;:WSen -Ed7 -M0.5 *.z &gt; test.ps</code></pre>
<p>这里只给出 <code>-Edt-2</code> 的绘图结果：</p>
<div class="figure">
<img src="/images/2015071713.png">

</div>
<p><code>-Edt-2</code> 表示所有的波形要按照头段中的 a 值对齐，此时，波形中 a 所对应的数据点都位于 X 轴的 0 值处。因为数据中 a 大概在 20 秒左右，因而按照 a 值对齐之后，原波形的 X 轴范围 <code>[10,50]</code> 就变成了现在的 <code>[-10, 30]</code> 左右。</p>
<h3 id="c-选项">-C 选项</h3>
<p>由于 <code>-E</code> 的优先级高于 <code>-C</code> 的优先级，故而 - C 中的时间窗要根据对齐后的数据时间轴来选择:</p>
<pre><code>pssac -JX20c/10c -R-15/35/0/0.25 -B10:&quot;T(s)&quot;:/0.05:&quot;Dist(km)&quot;:WSen -Edt-2 -M0.5 -C-5/25 *.z &gt; a.ps</code></pre>
<p>如下图所示，对齐后的 X 轴范围是 - 15 到 35，此时的截窗范围为对齐后的 - 5 到 25 秒：</p>
<div class="figure">
<img src="/images/2015071714.png">

</div>
<h2 id="任意位置图">任意位置图</h2>
<p>pssac 只支持 5 种剖面类型，有时候可能想要绘制其他量的剖面（比如慢度），或者想要在任意位置放置一个波形，或者想要不同波形有不同的画笔属性。这就需要用到 pssac 的另一个功能，即从标准输入中传递数据给 pssac。</p>
<p>要传递给 pssac 的数据有四列，格式为:</p>
<pre><code>sacfile X Y pen</code></pre>
<p>其中 <code>sacfile</code> 为 SAC 文件名，X 为波形起点时刻的 shift 量，Y 为波形在 Y 轴的位置，pen 为画笔属性。</p>
<pre><code>$ pssac -JX20c/10c -R10/70/0/15 -B10/5 -M1 &gt; a.ps &lt;&lt; EOF
cal.z 10 3 1p,black,-
cao.z 15 6 1p,red,-
cda.z 15 10 2p,black
EOF</code></pre>
<p>效果图如下：</p>
<div class="figure">
<img src="/images/2015071715.png">

</div>
<p>注意：这一功能不能用于将波形画在地图上。对于地图而言，-R 指定的横轴为经度、纵轴是纬度，而 pssac 中 - R 指定的横轴是时间，纵轴是振幅。对于纵轴，可以使用 <code>-M</code> 选项对振幅进行任意比例的缩放，所以振幅和纬度之间的不一致性是可以消除的。而对于横轴而言，经度与时间的不一致性却很难消除。因而，想要用 pssac 将波形绘制在地图上，没有一个比较好的解决方案。但对于具体需求而言，是有可能使用某些 “黑科技” 来实现的，这将放在单独的博文中讨论。</p>
<h2 id="其他">其他</h2>
<p>这里会介绍算法中的一些细节。</p>
<h3 id="msize-归一化">-Msize 归一化</h3>
<p>振幅的归一化算法中实际上是将数据的振幅乘以比例因子 yscale，其中:</p>
<pre><code>yscale = size*fabs((north-south))/(h.depmax-h.depmin)/project_info.pars[1])</code></pre>
<p>其中，</p>
<ul>
<li><code>north</code> 和 <code>south</code> 为 - R 选项中指定的 Y 轴的最大值和最小值；</li>
<li><code>h.depmax</code> 和 <code>h.depmin</code> 为当前数据的振幅的最大值和最小值；</li>
<li><code>project_info.pars[1]</code> 是 - J 选项中当前投影的高度，单位为 inch；</li>
</ul>
<p>在这个例子中:</p>
<pre><code>pssac -JX6i/5i -R9/20/-2.5/2.5 -B1:&quot;T(s)&quot;:/0.5g0.5:&quot;Amplitude&quot;:WSen -M2 seis.1 &gt; test.ps</code></pre>
<ul>
<li><code>north=2.5 Y; south=-2.5 Y</code>（这里 Y 表示 Y 轴的单位，其物理意义可以是振幅，也可以是震中距等）</li>
<li><code>h.depmax=1.619187 Y; h.depmin=-1.470733 Y</code></li>
<li><code>project_info.pars[1] = 5 inch</code></li>
<li><code>size = 2 inch</code></li>
</ul>
<p>则波形的最大振幅差经过归一化之后为:</p>
<pre><code>(h.depmax-h.depmin) * yscale = size * abs(north-south)/project_info.pars[1]
                             = 2 inch * (2.5 Y - (-2.5 Y))/5 inch
                             = 2 Y</code></pre>
<p>即归一化之后的最大振幅差在图上的高度为 2 个 Y 单位。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-08-08：初稿；</li>
<li>2015-07-17：将原稿的几篇合并并整理成一篇；</li>
<li>2016-03-16：解释了 <code>-E</code> 选项中 n 取其他值的含义；</li>
<li>2016-03-16：修复了图片 Y 轴标签的 bug；Thanks to <a href="mailto:gwx2013@USTC" target="_blank" rel="external">gwx2013@USTC</a>；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> pssac </tag>
            
            <tag> GMT </tag>
            
            <tag> 教程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 绘制无刻度轴]]></title>
      <url>http://seisman.info/axes-without-ticks.html</url>
      <content type="html"><![CDATA[<h2 id="提出问题">提出问题</h2>
<p>要绘制一张底图，要求</p>
<ol style="list-style-type: decimal">
<li>左边和下边有标注和刻度；</li>
<li>右边和上边无标注且无刻度；</li>
</ol>
<p>最直接的想法是使用 <code>-BWSen</code>，绘图得到的效果图如左图所示，右边和上边虽然没有了标注，但是刻度线依然存在。实际想要实现的效果是右图。</p>
<div class="figure">
<img src="/images/2015071501.png">

</div>
<a id="more"></a>
<h2 id="解决问题">解决问题</h2>
<p>GMT 中 <code>-B</code> 选项可以用 <code>WSENwsen</code> 的组合来设置是否显示某边以及某边是否有标注。也可以分别设置 X 轴和 Y 轴的标注 / 刻度间隔，但却不能为 X 轴的上边和下边分别设置不同标注 / 刻度间隔。因而，这个问题没有直接的解决办法。</p>
<p>这里给出的办法是，使用两次 <code>psbasemap</code>，分别绘制底图的左、下边和右上边。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=0/10/0/10</div><div class="line">J=X10c/6c</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制底图的左边和下边</span></div><div class="line">gmt psbasemap -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Bxa2 -Bya2 -BWS -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 绘制底图的右边和上边</span></div><div class="line">gmt psbasemap -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B0 -Ben -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 其他绘图命令（不要再使用 - B 选项）</span></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>代码中的第一个 <code>psbasemap</code> 命令中， <code>-BWS</code> 表明当前命令只绘制底图的左边和下边； <code>-Bxa2</code> 和 <code>-Bya2</code> 分别设置了两条边的标注间隔，可以根据自己的需求任意修改。第二个 <code>psbasemap</code> 命令中， <code>-Ben</code> 表明当前命令只绘制底图的右边和上边， <code>-B0</code> 表示右边和上边的标注 / 刻度间隔为零，即刻度线。</p>
<p>本示例中，第一个命令的 <code>-BWS</code> 和第二个命令的 <code>-Ben -B0</code> 是必须的，其他的选项及参数可以根据自己的需求修改。</p>
<p>另外，需要注意，绘制底图之后的其余绘图命令中都不要再使用 <code>-B</code> 选项（<code>psscale</code> 除外）。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SEED 格式转 SAC 格式]]></title>
      <url>http://seisman.info/convert-seed-to-sac.html</url>
      <content type="html"><![CDATA[<p>本文会介绍将 SEED、miniSEED 等格式转换为 SAC 格式所使用的工具和用法。需要注意， 本文并不会详细介绍工具的具体语法，只介绍常用的功能，其他功能及选项，读者应自行阅读相关文档。</p>
<a id="more"></a>
<h2 id="seed-格式简介">SEED 格式简介</h2>
<p>SEED，即 Standard for the Exchange of Earthquake Data，是地震学波形数据的标准格 式之一。每个 SEED 文件中可以包含多台站多分量多时间段的连续波形数据。</p>
<p>SEED 格式又可以细分为三种格式：</p>
<ol style="list-style-type: decimal">
<li>Full SEED 格式：也就是一般说的 SEED 格式，包含波形数据以及仪器相关信息；</li>
<li>miniSEED 格式：仅包含波形数据；</li>
<li>dateless SEED 格式：仅包含仪器相关信息；</li>
</ol>
<h2 id="rdseed-seed-sac">rdseed: SEED =&gt; SAC</h2>
<p>rdseed 可以直接提取波形数据:</p>
<pre><code>rdseed -df infile.seed</code></pre>
<p>可以同时提取波形数据以及 RESP 仪器响应文件:</p>
<pre><code>rdseed -Rdf infile.seed</code></pre>
<p>还可以同时提取波形数据以及 SAC PZ 仪器响应文件:</p>
<pre><code>rdseed -pdf infile.seed</code></pre>
<h2 id="rdseed-seed-resppz">rdseed: SEED =&gt; RESP/PZ</h2>
<p>只提取 RESP 文件:</p>
<pre><code>rdseed -Rf infile.seed</code></pre>
<p>只提取 PZ 文件:</p>
<pre><code>rdseed -pf infile.seed</code></pre>
<h2 id="rdseed-dataless-seed-resppz">rdseed: Dataless SEED =&gt; RESP/PZ</h2>
<p>从 Dataless SEED 中提取 RESP:</p>
<pre><code>rdseed -Rf infile.dataless</code></pre>
<p>从 Dataless SEED 中提取 PZ:</p>
<pre><code>rdseed -pf infile.dataless</code></pre>
<h2 id="rdseed-miniseed-sac">rdseed: miniSEED =&gt; SAC</h2>
<p>利用 rdseed 将 miniSEED 数据转换为 SAC 格式时，需要使用 <strong>对应</strong> 的 dataless SEED 数据。</p>
<p>从 miniSEED 中提取波形数据:</p>
<pre><code>rdseed -df infile.miniseed -g infile.dataless</code></pre>
<p>从 miniSEED 中提取波形数据，同时从 dataless SEED 中提取 RESP:</p>
<pre><code>rdseed -Rdf infile.miniseed -g infile.dataless</code></pre>
<p>从 miniSEED 中提取波形数据，同时从 dataless SEED 中提取 PZ:</p>
<pre><code>rdseed -pdf infile.miniseed -g infile.dataless</code></pre>
<h2 id="mseed2sac-miniseed-sac">mseed2sac: miniSEED =&gt; SAC</h2>
<p>mseed2sac 可以直接将 miniSEED 文件转换为 SAC 格式，而不需要 dataless SEED 文件:</p>
<pre><code>mseed2sac infile.miniseed</code></pre>
<p>但解压出来的 SAC 文件中只有台站名和台网名，与用 miniSEED 解压出来的 SAC 数据相比， 少了 cmpaz、cmpinc、stla、stlo、stel、stdp、kcmpnm 信息，因而需要手动添加台站信息。</p>
<p>在使用 mseed2sac 时，还可以加上额外的 metafile 和 selectfile 文件，以及地震事件信息。比如:</p>
<pre><code>mseed2sac -m metafile -I selectfile -E 2006,123,15:27:08.7/-20.33/-174.03/65.5/Tonga</code></pre>
<p>其中 metafile 提供了台站的基本信息，selectfile 中列出了要提取哪些台站的数据。具体文件格式参考官方文档。</p>
<p>metafile 可以自己根据格式生成，也可以直接使用 IRIS 提供的 <a href="https://seiscode.iris.washington.edu/projects/ws-fetch-scripts/files" target="_blank" rel="external">FetchMetadata</a> 脚本获取。</p>
<h2 id="obspy-miniseed-sac">obspy: miniSEED =&gt; SAC</h2>
<p>obspy 可以读取 miniSEED，并输出为多种格式，输出时文件名的格式需要自己指定。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> obspy.core <span class="keyword">import</span> read</div><div class="line"></div><div class="line">st = read(<span class="string">"20150612.miniseed"</span>)</div><div class="line"><span class="keyword">for</span> tr <span class="keyword">in</span> st:</div><div class="line">    fname = <span class="string">"%s.%s.%s.%s.SAC"</span> % (tr.stats.network, tr.stats.station, tr.stats.location, tr.stats.channel)</div><div class="line">    tr.write(fname, format=<span class="string">"SAC"</span>)</div></pre></td></tr></table></figure>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="https://ds.iris.edu/ds/nodes/dmc/data/formats/" target="_blank" rel="external">IRIS Data Format</a></li>
<li><a href="http://ds.iris.edu/ds/nodes/dmc/data/formats/dataless-seed/" target="_blank" rel="external">IRIS Dataless SEED</a></li>
<li><a href="https://seiscode.iris.washington.edu/projects/mseed2sac/wiki" target="_blank" rel="external">mseed2sac</a></li>
<li><a href="http://portal.resif.fr/?Working-with-SEED-data&amp;lang=en" target="_blank" rel="external">Working with SEED data</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 格式转换 </tag>
            
            <tag> SAC </tag>
            
            <tag> SEED </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT5 自定义坐标轴]]></title>
      <url>http://seisman.info/gmt5-custom-axes.html</url>
      <content type="html"><![CDATA[<h2 id="问题的提出">问题的提出</h2>
<p>GMT 绘图时可以使用 <code>-B</code> 选项指定每个坐标轴的刻度、标注以及网格线。默认情况下的设置有时可能无法 满足需求，比如想要在特定位置设置刻度，比如任意格式的日期、非 log10 的刻度等，就需要自己设置了。</p>
<a id="more"></a>
<h2 id="解决方案">解决方案</h2>
<p>GMT5 的 <code>-B</code> 选项，使用 <code>-B[p|s]x|ycYourTickFileName</code> 语法可以自定义轴的标注及刻度。</p>
<h2 id="示例">示例</h2>
<p>想要画一张中国西南地区 2008~2013 年地震活动性的 XY 图，要求：</p>
<ol style="list-style-type: decimal">
<li>X 坐标的 Primary 标注是 <code>yyyymmdd</code> 日期格式；</li>
<li>Secondary 刻度位于每个季度的最后一天，比如，2008 年第一季度 20080331，第二季度 20080630，第三季度 20080930。</li>
</ol>
<p>代码如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">input=chuandian_eq.txt</div><div class="line">title=<span class="string">"Southwest China Seismicity"</span></div><div class="line">PS=chuandian_seismicity.ps</div><div class="line">J=X6i/2i</div><div class="line">R=1/2192/3/9</div><div class="line"></div><div class="line">gmt psbasemap -J<span class="variable">$J</span> -R<span class="variable">$R</span> -BWSen+t<span class="string">"<span class="variable">$title</span>"</span>  -Bya1f0.5+lMagnitude -BpxcDateTick_px.txt -P -K &gt; <span class="variable">$PS</span></div><div class="line">gmt psbasemap -J<span class="variable">$J</span> -R<span class="variable">$R</span> -BsxcDateTick_sx.txt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">awk <span class="string">'&#123;print $1, $3&#125;'</span> <span class="variable">$input</span> | gmt psxy -JX6i/2i -R1/2192/3/9 -Sc0.1c -W1p,black -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">rm gmt.*</div></pre></td></tr></table></figure>
<p>成图效果：</p>
<div class="figure">
<img src="/images/2015060601.png">

</div>
<p>代码说明：</p>
<ol style="list-style-type: decimal">
<li><p><code>chuandian_eq.txt</code> 中包含了中国西南 2008~2013 年大于等于 4 级地震事件，文件有三列，第一列是从 20080101 为第一天起算的日期序号，第二列是日期，第三列是震级，格式如下:</p>
<pre><code>32 20080201 4.800000
47 20080216 4.400000
58 20080227 5.000000
95 20080404 4.100000
...</code></pre></li>
<li><p><code>DateTick_px.txt</code> 用于控制 Primary 标注。其内容有三列，第一列是标注的 X 坐标，第二列可以是 <code>a</code> 或 <code>f</code> 或 <code>g</code>，这里使用的是 <code>a</code>，表示当前文件控制的是标注 (annotations)，第三列是用户自定义的要显示的标注，如:</p>
<pre><code>1 a 20080101
367 a 20090101
732 a 20100101
1097 a 20110101
1462 a 20120101
1828 a 20130101
2192 a 20131231</code></pre></li>
<li><p><code>DateTick_sx.txt</code> 用于控制 Secondary 刻度 (frame)，其内容如下:</p>
<pre><code>91  f 20080331
182 f 20080630
274 f 20080930
456 f 20090331
547 f 20090630
639 f 20090930
821 f 20100331
912 f 20100630
1004 f 20100930
1186 f 20110331
1277 f 20110630
1369 f 20110930
1552 f 20120331
1643 f 20120630
1735 f 20120930
1917 f 20130331
2008 f 20130630
2100 f 20130930</code></pre></li>
<li><p>似乎一个命令中只能使用一次自定义轴语法，故而这里使用了两次 <code>psbasemap</code>，分别完成 Primary 标注和 Secondary 刻度的绘制，然后再调用 <code>psxy</code> 绘制具体数据。</p></li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ol style="list-style-type: decimal">
<li>初稿 By Joe Wang(<a href="mailto:cjmuqiao@163.com" target="_blank" rel="external">cjmuqiao@163.com</a>)；</li>
</ol>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[底图边框与网格线]]></title>
      <url>http://seisman.info/frame-and-gridline.html</url>
      <content type="html"><![CDATA[<p>本文介绍 GMT 的 - B 选项的两种稍特殊的用法，以实现只绘制边框和只绘制网格线的目的。</p>
<p>两点说明：</p>
<ol style="list-style-type: decimal">
<li>示例采用 GMT5 语法，但方法对于 GMT4 也同样适用；</li>
<li>想不起来当初为什么会有只绘制网格线的需求了，所以这里只写如何实现，而不说为什么会有如此奇怪的需求。</li>
</ol>
<a id="more"></a>
<h2 id="绘制边框和网格线">绘制边框和网格线</h2>
<p>使用下面的命令，会得到一个含有边框、标注、刻度和网格线的图:</p>
<pre><code>gmt psbasemap -R0/10/0/4 -JX10c/4c -Ba1f1g1 &gt; test.ps</code></pre>
<p>效果如下：</p>
<div class="figure">
<img src="/images/2015051901.png">

</div>
<p>GMT 默认绘制四条边，即虽然命令里没有 <code>-BWSEN</code>，但实际上可以认为是有的，所以上面绘制出来的图有四个边框。</p>
<h2 id="只绘制边框">只绘制边框</h2>
<p><code>-BWSEN</code> 表示要绘制四条边， <code>-B0</code> 设置了四条边的标注、刻度和网格线的间距都是零，即可认为是不绘制标注、刻度和网格线:</p>
<pre><code>gmt psbasemap -R0/10/0/4 -JX10c/4c -B0 -BWSEN &gt; test.ps</code></pre>
<p>效果图</p>
<div class="figure">
<img src="/images/2015051902.png">

</div>
<h2 id="只绘制网格线">只绘制网格线</h2>
<p>想要只绘制网格线，即：</p>
<ul>
<li>不绘制标注：用 <code>-Ba0</code> ，或不指定 a 的间隔，或用 <code>-Bwsen</code></li>
<li>不绘制刻度：用 <code>-Bf0</code> ，或不指定 f 的间隔；</li>
<li>不绘制边框：这是要解决的问题；</li>
</ul>
<p>想要不绘制边框，关键在于要使用某个选项压制 GMT 默认的 <code>-BWSEN</code> 选项，这里使用 <code>-BZ</code> 选项，即只绘制 Z 轴，而对于二维图来说没有 Z 轴，所以使用 <code>-BZ</code> 可以覆盖 GMT 默认的 <code>-BWSEN</code> :</p>
<pre><code>gmt psbasemap -R0/10/0/10 -JX10c/10c -Bg1 -BZ &gt; test.ps</code></pre>
<p>效果图：</p>
<div class="figure">
<img src="/images/2015051903.png">

</div>
<p>解决这个问题还有另外一个办法，即设置 <code>MAP_FRAME_WIDTH</code> 与 <code>MAP_GRID_PEN_PRIMARY</code> 为同样的粗细。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[球状模型下的 Tau 积分]]></title>
      <url>http://seisman.info/tau-integral-in-spherical-earth.html</url>
      <content type="html"><![CDATA[<p>在计算震相走时的过程中，对 <span class="math inline">\(\tau(p)\)</span> 函数的积分是其中比较重要的一步， 具体 <span class="math inline">\(\tau(p)\)</span> 函数如何使用，在地震学教材里都有介绍。</p>
<a id="more"></a>
<h2 id="基本公式">基本公式</h2>
<p>在球状分层模型下，任意一层内的 <span class="math inline">\(\tau(p)\)</span> 函数的积分可以写成：</p>
<p><span class="math display">\[\tau(p) = \int_{r_1}^{r_2} \frac{\eta}{r} dr\]</span></p>
<p>其中 <span class="math inline">\(r_1\)</span> 和 <span class="math inline">\(r_2\)</span> 分别是这一层的上下边界的地球半径。<span class="math inline">\(p\)</span> 是射线参数（水平慢度）， <span class="math inline">\(\eta\)</span> 是垂直慢度，<span class="math inline">\(r\)</span> 是地球半径。</p>
<p>对于常见的地球模型，比如 PREM，都是给出了地球内部各个深度的速度值。因而对于 每一个球层来说，速度都是半径的函数，进而导致垂直慢度是半径的函数，因而积分会变得复杂起来。</p>
<p>下面会介绍几种 <span class="math inline">\(\tau(p)\)</span> 积分的思路。为了更直观起见，现在假设有这一一个球层， 上下边界的半径分别为 3480 km 和 3380 km，速度分别为 8.06 km/s 和 8.20 km/s。</p>
<h2 id="匀速层积分法">匀速层积分法</h2>
<p>最简单的方法是将球层内的速度近似为一个常数。比如这里，可以把这个 100km 厚的球层 当做是一个匀速层。但是这个速度怎么取就是一个问题了。取 8.06 的话积分结果偏大， 取 8.20 的话积分结果偏小。取均值 8.13 吧，好像又没有什么道理，毕竟垂直慢度跟速度 之间又不是线性关系。所以把整个球层当做匀速有点不靠谱，而且误差会很大。</p>
<h2 id="线性速度积分法">线性速度积分法</h2>
<p>一个比较合理的假设是，在球层内速度线性变化，即</p>
<p><span class="math display">\[v = a + b r\]</span></p>
<p>其中 a 和 b 的值由上下边界的半径和速度决定。</p>
<p>在速度线性变化的假定下，<span class="math inline">\(\tau(p)\)</span> 函数的积分是没有解析表达式的，只能进行数值积分。</p>
<p>数值积分的话，一般可以调用库函数，自己写的话也挺简单。比如可以考虑把 100 km 的球层， 再细分为 1km 的子球层，然后用矩形积分公式或梯形积分公式做数值积分。</p>
<p>理论上，子球层的厚度越小，计算结果越精确，同时也导致计算量越大。而如果子球层的 厚度取得不够小，则计算的误差可能稍大。</p>
<h2 id="指数慢度模型">指数慢度模型</h2>
<p>假设每一层的 <strong>慢度</strong> 模型的形式为 <span class="math inline">\(u=a r^b\)</span>，这种模型一般称为 Bullen Type 模型， 这也是 TauP 中使用的慢度模型。</p>
<p>将上下边界的半径和慢度带入：</p>
<p><span class="math display">\[u_1 = a r_1^b\]</span></p>
<p><span class="math display">\[u_2 = a r_2^b\]</span></p>
<p>计算得到：</p>
<p><span class="math display">\[b = \frac{\log(u_1/u_2)}{\log(r_1/r_2)}\]</span></p>
<p>在这样的近似下，<span class="math inline">\(\tau(p)\)</span> 函数的积分可以进一步简化。</p>
<p>将慢度的公式代入射线参数的定义中：</p>
<p><span class="math display">\[p = u \sin \theta = a r^b \sin \theta\]</span></p>
<p>将上式对半径求导数：</p>
<p><span class="math display">\[0 = ab r^{b-1} dr \sin \theta + a r^b \cos \theta d\theta\]</span></p>
<p>整理得到：</p>
<p><span class="math display">\[\frac{dr}{r} = - \frac{\cos\theta}{b \sin\theta} d\theta\]</span></p>
<p>代入 tau 函数的积分公式：</p>
<p><span class="math display">\[\tau(p) = \int_{r_1}^{r_2} \eta \frac{dr}{r}\]</span></p>
<p><span class="math display">\[= \int_{r_1}^{r_2} p \frac{\cos \theta}{\sin\theta} \frac{dr}{r}\]</span></p>
<p><span class="math display">\[= -\frac{p}{b} \int_{\theta_1}^{\theta_2} \frac{\cos^2\theta}{\sin^2\theta} d\theta\]</span></p>
<p><span class="math display">\[= -\frac{p}{b} \int_{\theta_1}^{\theta_2} (\frac{1}{\sin^2\theta}-1) d\theta\]</span></p>
<p><span class="math display">\[= -\frac{p}{b} \int_{\theta_1}^{\theta_2} d(\frac{\cos\theta}{\sin\theta}-\theta)\]</span></p>
<p><span class="math display">\[= - \frac{p}{b}(\theta_2-\theta_1) - \frac{1}{b}(\eta_2-\eta_1)\]</span></p>
<p>根据 <span class="math inline">\(\tau(p)\)</span> 函数的定义 <span class="math inline">\(\tau(p)=T(p)-pX(p)\)</span>，对比上式有：</p>
<p><span class="math display">\[T(p) = \frac{1}{b}(\eta_1-\eta_2)\]</span></p>
<p><span class="math display">\[X(p) = \frac{1}{b}(\theta_2-\theta_1)\]</span></p>
<p>其中：</p>
<p><span class="math display">\[\eta_1 = \sqrt{u_1^2-p^2}\]</span></p>
<p><span class="math display">\[\eta_2 = \sqrt{u_2^2-p^2}\]</span></p>
<p><span class="math display">\[\theta_1 = \arctan \frac{p}{\eta_1}\]</span></p>
<p><span class="math display">\[\theta_2 = \arctan \frac{p}{\eta_2}\]</span></p>
<p>整个球层的积分就被大大简化了。</p>
<h2 id="特殊处理">特殊处理</h2>
<h3 id="p-小于-u1-且-p-小于-u2">p 小于 u1 且 p 小于 u2</h3>
<p>此时该射线可以正常穿过该层，直接用公式计算即可。</p>
<h3 id="p-小于-u1-且-p-大于-u2">p 小于 u1 且 p 大于 u2</h3>
<p>此时射线会进入该层，并在该层内入射角达到 90 度，最终反转，从下行波变成上行波。</p>
<p>射线反转时有 <span class="math inline">\(p=u\)</span>，即垂直慢度为零，根据慢度模型可以直接计算出反转深度 <span class="math inline">\(r_p\)</span>， 此时 <span class="math inline">\(\tau(p)\)</span> 的积分上限 <span class="math inline">\(r_2\)</span> 应该改成反转深度 <span class="math inline">\(r_p\)</span>。</p>
<p>实际计算时，并不需要计算反转深度，因而射线在反转深度处有 <span class="math inline">\(\eta_2=0\)</span> 且 <span class="math inline">\(\eta_2=\frac{\pi}{2}\)</span>，可以直接代入公式即可。</p>
<h3 id="p-大于-u2">p 大于 u2</h3>
<p>此时，射线无法进入该层，直接返回零距离和零走时。</p>
<h3 id="速度间断面">速度间断面</h3>
<p>在模型中，速度间断面是通过在同一深度给出两个不同的速度来表示的。在程序中， 直接判断这一层的厚度是否等于零即可。若厚度为零，则表示该深度有速度间断， 不可用上面的公式计算，直接返回零距离和零走时即可。</p>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li>An Introduction to Seismology, Earthquake, and Earth Structure, Seth Stein &amp; Michael Wysession, 2003, P159</li>
<li>TauP 软件包，SlownessLayer.java 的 TimeDist 函数；</li>
<li>Introduction to Seismology, Peter Shearer, 2009, P367</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 走时 </tag>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CPS330 的安装]]></title>
      <url>http://seisman.info/install-cps330.html</url>
      <content type="html"><![CDATA[<p>CPS330 全称 Computer Programs in Seismology，是圣路易斯大学地震中心开发并维护的 一款地震学软件包，其主要关注地震波在地壳和上地幔介质中的传播和解释。</p>
<p>本文介绍如何在 Linux 系统下编译安装 CPS330。</p>
<a id="more"></a>
<ol style="list-style-type: decimal">
<li>申请： <a href="http://www.eas.slu.edu/eqc/eqccps.html" class="uri" target="_blank" rel="external">http://www.eas.slu.edu/eqc/eqccps.html</a></li>
<li><p>解压:</p>
<pre><code>$ tar -xvf NP330.Jun-11-2014.tgz
$ cd PROGRAMS.330</code></pre></li>
<li><p>确认当前系统是 32 还是 64 位：</p>
<p>执行 <code>uname -a</code> ，若输出中包含 <code>x86_64</code> 则是 64 位，若输出包含类似 <code>i686</code> 则为 32 位。</p></li>
<li><p>配置</p>
<p>如果是 32 位系统则:</p>
<pre><code>$ ./Setup LINUX40</code></pre>
<p>如果是 64 位系统则:</p>
<pre><code>$ ./Setup LINUX6440</code></pre></li>
<li><p>编译:</p>
<pre><code>$ ./C</code></pre>
<p>接下来会编译一段时间，最终在 bin 目录下应该生成 149 个可执行文件。当然， 不同版本可能可执行文件的数目有差异。</p></li>
<li><p>修改环境变量</p>
<p>向 <code>~/.bashrc</code> 文件中添加如下语句:</p>
<pre><code>export PATH=/path/to/PROGRAMS.330/bin:${PATH}</code></pre>
<p>保存后，重启终端即可。</p></li>
</ol>
<p>说明：编译时使用 <code>gcc</code> 和 <code>gfortran</code> 编译器。<code>g77</code> 已经是很老旧的版本了，稍微新的 Linux 发行版中都不再提供了，因而不推荐使用。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[震相走时的计算]]></title>
      <url>http://seisman.info/travel-time-calculation.html</url>
      <content type="html"><![CDATA[<p>震相走时的计算是地震学的基本问题之一。</p>
<p>目前，计算一维分层模型下的震相走时，主要使用两个程序包：ttimes 和 TauP。 ttimes 相对来说有些古老，所以多数情况下更推荐使用 TauP。但 TauP 不支持 PKPab、 PKPbc 这种震相名，所以偶尔可能还是需要使用 ttimes。</p>
<p>ttimes 和 TauP 都是根据 Buland and Chapman（BSSA,1983）提出的理论框架来实现的， 本文是对这篇文章的核心内容的简单总结。</p>
<a id="more"></a>
<h2 id="提出问题">提出问题</h2>
<p>给定一维水平分层模型，若震源位于地表，要求计算某一震相（如 P 波）在特定震中距 （如 50 度）处的震相走时。</p>
<p>说明：</p>
<ol style="list-style-type: decimal">
<li>球状分层模型和水平分层模型下的理论公式基本相同，只是个别变量需要做 简单替换，这里用更简单的水平分层模型；</li>
<li>震源位于地表或地下，只会影响到积分的上下限，这里为了简化，将震源放在地表；</li>
<li>这里以简单的 P 波为例，理论上是可以算各种复杂路径的震相的；</li>
</ol>
<h2 id="基本公式">基本公式</h2>
<p>对于一个速度仅是深度的函数的一维分层速度模型 <span class="math inline">\(v(z)\)</span>，其慢度为</p>
<p><span class="math display">\[u(z) = \frac{1}{v(z)}\]</span></p>
<p>定义射线参数（即水平慢度）为</p>
<p><span class="math display">\[p = \frac{\sin(i(z))}{v(z)}\]</span></p>
<p>其中 <span class="math inline">\(i(z)\)</span> 是射线与垂直方向的夹角。垂直慢度为</p>
<p><span class="math display">\[\eta(p, z) = (u^2(z)-p^2)^{\frac{1}{2}}\]</span></p>
<p>在做了如上定义后，对于从地表发出的任意一条射线参数为 <span class="math inline">\(p\)</span> 的射线，即可计算出 该射线所对应的走时和震中距 (Introduction to Seismology, Peter Shearer, 公式 4.31-4.32 及之间的推导)：</p>
<p><span class="math display">\[T(p) = 2\int_0^{z_p} \frac{u^2(z)}{\eta} dz\]</span></p>
<p><span class="math display">\[X(p) = 2p\int_0^{z_p}\frac{dz}{\eta}\]</span></p>
<p>其中 <span class="math inline">\(z_p\)</span> 是射线的反转点（turning point）的深度。</p>
<p>另一个重要的公式是：</p>
<p><span class="math display">\[p = \frac{dT}{dX}\]</span></p>
<h2 id="基本解法">基本解法</h2>
<p>有了上面的几个公式，基本就可以有一个直观暴力的解法了。</p>
<p>对于任一射线参数 <span class="math inline">\(p\)</span>，都可以找到射线的 <span class="math inline">\(z_p\)</span>，然后即可积分计算该射线所对应的 震中距 <span class="math inline">\(X(p)\)</span> 和走时 <span class="math inline">\(T(p)\)</span>。</p>
<p>但是问题中要计算的是特定震中距 X0 的走时，那么就可以对射线参数进行遍历，每给 一个射线参数，就计算一个震中距 X(p)，若 X(p)&gt;X0，则把射线参数改大一些， 若 X(p)&lt;X(0)，则把射线参数改小一些。最终，总可以找到一个射线参数，使得 X(p) 和 X0 几乎相等。</p>
<p>这基本就是一个二分查找，实现起来也很简单。但此方法的问题在于，假定了 X(p) 是 p 的 单调递减函数，而真实地球模型中有低速层和高速不连续面，会出现三叉波和影区，不 符合单调递减函数的假设。在同一个震中距处可以有多个射线参数。</p>
<p>因而这里的思路仅适用于某些简单的震相，比如 P、PcP、PKiKP 之类。</p>
<h2 id="taup">tau(p)</h2>
<p>定义 delay-time 函数 <span class="math inline">\(\tau(p)\)</span>：</p>
<p><span class="math display">\[\tau(p) = T(p) - pX(p)\]</span></p>
<p>简单推导可知，tau 函数可以用如下公式计算：</p>
<p><span class="math display">\[\tau(p) = 2\int_0^{z_p} \eta dz\]</span></p>
<p>且其具有如下性质：</p>
<p><span class="math display">\[\frac{d\tau}{dp} = \frac{dT}{dp} - X(p) - p \frac{dX}{dp}
                 = \frac{dT}{dX}\frac{dX}{dp} - X(p) - p \frac{dX}{dp}
                 = -X(p)\]</span></p>
<p>由于 X(p) 是震中距，为非负值，因而，<span class="math inline">\(d\tau/dp\)</span> 是个非正值。即函数 <span class="math inline">\(\tau(p)\)</span> 的 斜率是非正值，因而 tau 函数是一个单调递减函数，即对任意一个射线参数 p，都有唯一的 tau。</p>
<h2 id="thetapx-函数">theta(p,x) 函数</h2>
<p>进一步定义 theta 函数：</p>
<p><span class="math display">\[\theta(p,x) = \tau(p) + px\]</span></p>
<p>再看看前面 tau 函数的定义：</p>
<p><span class="math display">\[T(p) = \tau(p) + pX(p)\]</span></p>
<p>theta(p,x) 和 T(p) 看上去很相似，但需要特别注意的是，T(p) 是 p 的函数，而 theta 是 p 和 x 的函数。即在 T(p) 的定义中，X(p) 是射线 p 所对应的震中距，具有唯一或唯 N 个值； 而 theta 函数中，x 是一个任意的变量，理解这一点很重要。</p>
<p>theta 函数对 p 求偏导，可得：</p>
<p><span class="math display">\[\frac{\partial \theta}{\partial p} = \frac{d\tau}{dp} + x = x - X(p)\]</span></p>
<p>因而，若在某个 p0 处，有 theta 函数对 p 的偏导为零，则有 x=X(p0)，进而有：</p>
<p><span class="math display">\[T(p_0) = \tau(p_0) + p_0 X(p_0) = \theta(p_0, X(p_0))\]</span></p>
<p>上面的公式表明：若某个 p0 处，theta 函数对 p 的偏导为零，则该射线参数 p0 所对应的 theta 值就是射线的走时 T(p0)。</p>
<p>下图是一个比较直观的例子（Chapman, 1978, GJI, Figure 12）。对于存在高速区的情况， 走时曲线中会出现三叉波，如左上图 T(X) 曲线所示。左下图中给出了 tau(p) 曲线，是一个 单调递减曲线。对于震中距 A、B、C、D，分别计算了其对应的 theta 曲线，如右边四张图所示。</p>
<div class="figure">
<img src="/images/2015050201.png">

</div>
<ul>
<li>对于震中距 A，从 theta 曲线中可以看出，该曲线有三个局部极值，因而在震中距 A 处， 有三条射线参数不同的射线，在不同的时间抵达震中距 A；</li>
<li>对于震中距 B，左边有一个明显的局部极值，右边有一小段，theta 曲线近似为平的， 这意味着，存在某段射线参数，其到震中距 B 的走时基本是一样的。这一点一般称为 caustic，在射线理论中，这里的振幅是无穷大的。</li>
<li>对于震中距 C，有一个局部极值点；</li>
<li>对于震中距 D，无局部极值点；</li>
</ul>
<p>总之，对于特定震中距，计算出 theta 曲线后，从曲线中很容易看出在该震中距处有哪些 射线在何时到达，这也是 WKBJ 理论地震图计算方法的基本原理的一部分。</p>
<h2 id="高级解法">高级解法</h2>
<p>有了上面的 theta 函数及其性质作为理论基础，就可以顺畅的解决上面的问题了。</p>
<p>基本步骤如下：</p>
<ol style="list-style-type: decimal">
<li>读取速度模型，计算得到慢度模型</li>
<li>对 p 做遍历，计算得到离散的 tau(p) 函数</li>
<li>计算特定震中距 X0 处的 theta(p,x)，即 theta(p,X0)，或表示为 theta(p)</li>
<li>寻找 theta(p) 对 p 的偏导为零的点，即 theta(p) 的局部极值点</li>
<li>每个极值点处射线参数 p0 即为符合要求的射线参数，而 theta(p0) 则为要计算的走时</li>
</ol>
<h2 id="其他细节">其他细节</h2>
<p>上面总结了计算走时的理论框架，实际数值计算时还甚至到更多的细节，具体参考 1983 那篇文章的后面部分。</p>
<ol style="list-style-type: decimal">
<li>tau(p) 积分的计算</li>
<li>震源深度的处理</li>
<li>极值的寻找</li>
<li>震相名的解析</li>
<li>…</li>
</ol>
<h2 id="参考文献">参考文献</h2>
<ol style="list-style-type: decimal">
<li>Chapman, C. H. (1978). A new method for computing synthetic seismograms. Geophysical Journal International, 54(3), 481-518.</li>
<li>Shearer, P. M. (2009). Introduction to seismology. Cambridge University Press.</li>
<li>Buland, R., and Chapman, C. H. (1983). The computation of seismic travel times. Bulletin of the Seismological Society of America, 73(5), 1271-1302.</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 走时 </tag>
            
            <tag> 理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[调用 SAC 进行 Hilbert 变换]]></title>
      <url>http://seisman.info/hilbert-transform-in-sac.html</url>
      <content type="html"><![CDATA[<p>需要在 C 程序中对数据做 Hilbert 变换，自己写显然是不可能的啦，重复造轮子不说， 写的还不一定对。找了一些代码，发现都写的好复杂，后来发现 SAC 在函数库中提供了 Hilbert 变换的接口，可以直接调用。</p>
<p><code>firtrn</code> 可以用于对数据进行 Hilbert 变换，但是官方没有给一个比较直白的例子。 下面就贴一个我写的例子啦。</p>
<a id="more"></a>
<p>需要注意，SAC 自带的 Hilbert 变换要求数据至少 201 个点。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NPTS 1000</span></div><div class="line"><span class="function"><span class="keyword">float</span> *<span class="title">hilbert</span><span class="params">(<span class="keyword">float</span> *in, <span class="keyword">int</span> npts)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">float</span> data[NPTS];</div><div class="line">    <span class="keyword">float</span> *hdata;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="comment">// 准备输入数据</span></div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;NPTS; i++)  data[i] = i;</div><div class="line"></div><div class="line">    <span class="comment">// 进行 Hilbert 变换，hdata 为 Hilbert 变换的结果</span></div><div class="line">    hdata = hilbert(data, NPTS);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; NPTS; i++)</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%f\n"</span>, hdata[i]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 这里定义了 hilbert 函数，是对 firtrn 函数的一个封装</span></div><div class="line"><span class="function"><span class="keyword">float</span> *<span class="title">hilbert</span><span class="params">(<span class="keyword">float</span> *in, <span class="keyword">int</span> npts)</span> </span>&#123;</div><div class="line">    <span class="keyword">float</span> *buffer;</div><div class="line">    <span class="keyword">float</span> *out;</div><div class="line"></div><div class="line">    buffer = (<span class="keyword">float</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">float</span>)*<span class="number">50000</span>);</div><div class="line">    out = (<span class="keyword">float</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">float</span>)*npts);</div><div class="line">    firtrn(<span class="string">"HILBERT"</span>, in, npts, buffer, out);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> out;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 5.1.2 在 Windows 下的安装]]></title>
      <url>http://seisman.info/install-gmt5-under-windows.html</url>
      <content type="html"><![CDATA[<p>本文介绍如何在 Windows 7 下安装 GMT5.1.2。</p>
<a id="more"></a>
<h2 id="下载">下载</h2>
<p>Windows 下安装 GMT5.1.2 需要下载三个文件：</p>
<ol style="list-style-type: decimal">
<li><a href="http://mirrors.ustc.edu.cn/gmt/bin/gmt-5.1.2-win64.exe" target="_blank" rel="external">GMT 64 位安装包</a> 或 <a href="http://mirrors.ustc.edu.cn/gmt/bin/gmt-5.1.2-win32.exe" target="_blank" rel="external">GMT 32 位安装包</a></li>
<li><a href="https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs919/gs919w64.exe" target="_blank" rel="external">ghostscript 64 位安装包</a> 或 <a href="https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs919/gs919w32.exe" target="_blank" rel="external">ghostscript 32 位安装包</a></li>
<li><a href="http://pages.cs.wisc.edu/~ghost/gsview/download/gsv50w64.exe" target="_blank" rel="external">GSView 64 位安装包</a> 或 <a href="http://pages.cs.wisc.edu/~ghost/gsview/download/gsv50w32.exe" target="_blank" rel="external">GSView 32 位安装包</a></li>
</ol>
<h2 id="安装">安装</h2>
<h3 id="安装-gmt">安装 GMT</h3>
<p>跟大多数 Windows 的程序一样，双击 exe 就好。几个需要注意的地方如下图：</p>
<p>GMT5 安装文件会自动添加环境变量，如下图所示，三个可选项中选第一个或第二个就好。不要选第三个，除非你知道自己在做什么。</p>
<div class="figure">
<img src="/images/2015041801.png">

</div>
<p>GMT5 默认的安装目录是 <code>c:\programs\gmt5</code>，使用此默认值就好，不建议修改此安装目录。</p>
<p>尝试安装在 <code>c:\Program Files\gmt5</code> 下，执行命令好像也没问题，但不确定目录名中的空格是否会在什么地方挖个坑。</p>
<div class="figure">
<img src="/images/2015041802.png">

</div>
<p>选择组件那里，Runtimefiles 是必须的，DCW 是国界、省界数据，Documentation 是官方文件以及官方示例，GSHHG 是海岸线数据。所以四个都安装就好。</p>
<div class="figure">
<img src="/images/2015041803.png">

</div>
<p>安装完成之后，启动 cmd：“开始”-&gt;“所有程序”-&gt;“附件”-&gt;“命令提示符”，也可以直接在开始那里搜索 “cmd”。在 cmd 窗口中键入 <code>gmt</code>，效果如下则表明 GMT 安装成功。</p>
<div class="figure">
<img src="/images/2015041804.png">

</div>
<h3 id="安装-ghostscript">安装 ghostscript</h3>
<p>ghostscrip 的安装没什么好说的，在安装的最后，第一个复选框一定要选上，这关系到 GMT 能否支持中文的问题。</p>
<div class="figure">
<img src="/images/2015041805.png">

</div>
<h3 id="安装-gsview">安装 GSView</h3>
<p>GSView 的安装没什么好说的，一直点下去用默认的选项就好。</p>
<h2 id="测试">测试</h2>
<p>GMT 自带了一些例子，可以把 <code>C:\programs\gmt5\share\doc\examples</code> 目录下的例子复制一份到自己的目录下。每个例子里包含了 bat 脚本，以及执行脚本所需的数据文件。</p>
<p>双击即可直接执行 bat 脚本，右键编辑即可查看 bat 脚本的内容。</p>
<p>双击生成的 PS 文件即可用 GSView 打开。</p>
<h2 id="其他">其他</h2>
<p>安装完成后，你可以对如下几篇博文感兴趣：</p>
<ol style="list-style-type: decimal">
<li><a href="/gmt4-style-guide.html">GMT4 脚本风格指南</a>：虽然是针对 GMT4 的，但是对 GMT5 也有一定的指导意义</li>
<li><a href="how-to-use-gmt-under-windows.html">Windows 下使用 GMT 的正确姿势</a>：教你如何在 Windows 下更愉快地使用 GMT</li>
<li><a href="/gmt-chinese-support-under-windows.html">GMT 在 Windows 下的中文支持</a>：如何在 GMT 中添加中文</li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2015-04-18：初稿；</li>
<li>2015-06-02：更新至 5.1.2；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> GMT </tag>
            
            <tag> Windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一些产品的推广链接]]></title>
      <url>http://seisman.info/my-referral-links.html</url>
      <content type="html"><![CDATA[<p>本文列出了我在使用的部分产品/服务的推广链接，读者若点击我的推广链接，注册并使用 相关的产品/服务，则我可以获取一定的好处。</p>
<a id="more"></a>
<h2 id="greenvpn">GreenVPN</h2>
<p>推广链接： <a href="http://gjsq.me/1638242" class="uri" target="_blank" rel="external">http://gjsq.me/1638242</a></p>
<h2 id="七牛云存储">七牛云存储</h2>
<p>七牛云存储一般用于托管博客中的静态资源，比如图片、文件等。目前本博客的静态资源都托管在七牛中。</p>
<p>推广链接: <a href="https://portal.qiniu.com/signup?code=3ljo5rxaartxu" class="uri" target="_blank" rel="external">https://portal.qiniu.com/signup?code=3ljo5rxaartxu</a> （0/8）</p>
<p>点击以上推广链接，注册七牛并称为标准用户，则我将获得每月 5GB 的下载流量。</p>
<p>标准用户永久获得以下免费额度：</p>
<ol style="list-style-type: decimal">
<li>10GB 永久免费存储空间</li>
<li>每月 10GB 下载流量</li>
<li>每月 10 万次 Put 请求</li>
<li>每月 100 万次 Get 请求</li>
</ol>
<p>成为标准用户需要：</p>
<ol style="list-style-type: decimal">
<li>注册账户</li>
<li>激活邮箱</li>
<li>绑定手机</li>
<li>填写身份证号码</li>
<li>上传身份证持证照</li>
</ol>
<p>考虑到需要提供隐私信息，非坚定用户还是不要注册了。</p>
<h2 id="dropbox">Dropbox</h2>
<p>Dropbox 是知名的网盘服务，与百度云之类的网盘不同，其提供的容量很小，因而主要用于小文件的备份以及同步。</p>
<p>其特点在于：</p>
<ol style="list-style-type: decimal">
<li>免费用户只有 2GB 容量，最大可扩容到 18GB 以上；付费用户容量为 1T，对于国内用户稍稍有些贵；</li>
<li>跨平台，是为数不多的支持 Linux 的网盘之一（另外一个是坚果云）；</li>
<li>同步功能强大；</li>
<li>已被墙；</li>
</ol>
<p>邀请链接： <a href="https://db.tt/sC6uCvbu" class="uri" target="_blank" rel="external">https://db.tt/sC6uCvbu</a> (2/32)</p>
<p>若点击此链接注册 Dropbox，则我和你都会获得 500MB 的永久容量。</p>
<h2 id="onedrive">OneDrive</h2>
<p>微软的云服务，新版的 Word、Excel、PowerPoint 以及 Onenote 等等都可以直接保存到 OneDrive 中。初始免费容量 15G。</p>
<p>邀请链接：<a href="https://onedrive.live.com/?invref=7a70adf12890b43a&amp;invsrc=90" class="uri" target="_blank" rel="external">https://onedrive.live.com/?invref=7a70adf12890b43a&amp;invsrc=90</a> (0/10)</p>
<p>若点击此链接注册 OneDrive，则我和你均可获得 500MB 容量。</p>
<h2 id="lastpass">LastPass</h2>
<p>LastPass 是一款跨平台的密码管理器，支持 Linux。桌面版免费，若需要同步到移动端则需要付费升级。</p>
<p>邀请链接： <a href="https://lastpass.com/f?9962066" class="uri" target="_blank" rel="external">https://lastpass.com/f?9962066</a></p>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[从 3D 数据中截取剖面]]></title>
      <url>http://seisman.info/profile-from-3d-data.html</url>
      <content type="html"><![CDATA[<p>本文所说的 3D 数据是指 XYZD 数据。常见的情况是数据中包含四列：经度、纬度、深度、值。</p>
<p>GMT 几乎是不可以处理 3D 数据的，比如与网格相关的命令只支持 2D netCDF 文件。另外，GMT 绘制 3D 图的效果也很一般，因而通常情况下都需要从 3D 数据中截取剖面，绘制剖面图。</p>
<p>本文试着介绍如何从 3D 数据中截取自己想要的剖面。</p>
<a id="more"></a>
<h2 id="数据准备">数据准备</h2>
<p>因为我手头没有真实的数据，所以这里虚构一个 3D 数据。就示例而言，虚构的数据也许比真实的数据的演示效果更好。</p>
<p>虚构数据如下：</p>
<ul>
<li>X 的范围为 0 到 9，间隔为 1；</li>
<li>Y 的范围为 10 到 19，间隔为 1；</li>
<li>Z 的范围为 20 到 29，间隔为 1；</li>
<li>D 的值由 X、Y、Z 的值唯一决定；</li>
</ul>
<p>生成虚构数据的 C 代码如下：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i, j, k;</div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">10</span>; j &lt; <span class="number">20</span>; ++j)</div><div class="line">            <span class="keyword">for</span> (k = <span class="number">20</span>; k &lt; <span class="number">30</span>; ++k)</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d %d %d\n"</span>, i, j, k, i*<span class="number">100</span>+(j<span class="number">-10</span>)*<span class="number">10</span>+(k<span class="number">-20</span>) );</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="截取垂直于坐标轴的剖面">截取垂直于坐标轴的剖面</h2>
<p>最简单的情况是从 3D 速度结构中截取某个深度的速度结构，比如 Z=24 这个垂直于 Z 轴的平面。此时直接用 <code>gawk</code> 将 3D 数据中 Z=24 的点提取出来:</p>
<pre><code>gawk &#39;$3==24 {print $1,$2,$4}&#39; data.xyzd &gt; Z24.xyd</code></pre>
<p>如果数据的间隔比较小，用 <code>$3==4</code> 去判断可能有些危险，更安全点的方法是:</p>
<pre><code>gawk &#39;$3&gt;23.999 &amp;&amp; $3&lt;24.001 {print $1,$2,$4}&#39; data.xyzd &gt; Z24.xyd</code></pre>
<p>截取了这个剖面之后，下面就是 <code>xyz2grd</code> 和 <code>grdimage</code> 了，不多说。</p>
<h2 id="截取垂直于坐标平面的平面">截取垂直于坐标平面的平面</h2>
<p>最常见的情况是，地表有一个测线，需要做一个沿着这个测线的垂直于地表的剖面。</p>
<p>这里用 project 命令虚构起点在 (2,12)，终点为 (5,16)，间距为 1 的剖面:</p>
<pre><code>project -C2/12 -E5/16 -G1 &gt; track.data</code></pre>
<p>track.data 内容如下，三列数据分别为经度、纬度以及离起点的距离（大圆距离）:</p>
<pre><code>2   12  0
2.59831503664   12.8115096006   1
3.20049364771   13.6216595304   2
3.80680955458   14.4303509263   3
4.41754162203   15.2374825707   4
5   16  4.94662175502</code></pre>
<p>思路其实很简单，如上面那个例子，先用 <code>gawk</code> 取深度 Z=20 处的平面，然后将其转换为网格文件，并用 <code>grdtrack</code> 取该深度在测线上的值；然后取下一个深度，依次处理下去。</p>
<p>下面给出了一个示例脚本，该脚本可以解决本文的问题，但灵活性不够，所以使用者需要根据自己的情况改写或重写，理解原理最重要。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment"># 用于清除上一次执行该脚本时生成的文件</span></div><div class="line"><span class="keyword">if</span> [<span class="_">-e</span> track.profile]; <span class="keyword">then</span></div><div class="line">    rm track.profile</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="comment"># 对深度进行循环</span></div><div class="line"><span class="keyword">for</span> ((i = 20; i &lt; 30; i++)); <span class="keyword">do</span></div><div class="line">    <span class="comment"># 取某个深度的剖面</span></div><div class="line">    gawk -v dep=<span class="variable">$i</span> <span class="string">'$3==dep &#123;print $1,$2,$4&#125;'</span> data.xyzd &gt; <span class="variable">$i</span>.xyd</div><div class="line">    <span class="comment"># 将数据转换为 netCDF 格式</span></div><div class="line">    xyz2grd <span class="variable">$i</span>.xyd -R0/9/10/19 -I1/1 -G<span class="variable">$i</span>.nc -V</div><div class="line">    <span class="comment"># 在该深度处做 grdtrack，最终结果重定向到 track.profile 中</span></div><div class="line">    grdtrack track.data -G<span class="variable">$i</span>.nc | gawk -v dep=<span class="variable">$i</span> <span class="string">'&#123;print $3, dep, $4&#125;'</span> &gt;&gt; track.profile</div><div class="line"></div><div class="line">    rm <span class="variable">$i</span>.xyd <span class="variable">$i</span>.nc</div><div class="line"><span class="keyword">done</span>;</div></pre></td></tr></table></figure>
<p>几点说明:</p>
<ol style="list-style-type: decimal">
<li>使用 <code>gawk</code> 时，涉及到要向 <code>gawk</code> 传递一个 bash 中的变量，需要使用 <code>-v</code> 选项；</li>
<li><code>grdtrack</code> 命令的输出有四列，分别是经度、纬度、离起点的距离以及 Z；</li>
<li>绘制剖面时，一般需要离起点的距离，以及深度这两个信息，所以用 <code>gawk</code> 处理了一下；</li>
<li>所有的循环的输出都重定向到文件 <code>track.profile</code>，最终该文件中有三列，离起点的距离、深度以及值；</li>
</ol>
<h2 id="任意一个倾斜剖面">任意一个倾斜剖面</h2>
<p>这个说难不难，说简单也不简单。首先，如何用一些参数去定义这个剖面就是个问题。假设定义好了，就可以通过某些计算，得到这个剖面与地表的交线以及剖面与各个深度水平面的交线。</p>
<p>有了这些交线，就可以用与上面的例子类似的方法对每个深度处做 <code>grdtrack</code>，然后把结果收集起来即可。</p>
<p>思路有了，具体的就不写啦。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[全球地形起伏数据：SRTM15_PLUS]]></title>
      <url>http://seisman.info/srtm15-plus.html</url>
      <content type="html"><![CDATA[<p>SRTM15_PLUS 是 <a href="/srtm30-plus.html">SRTM30_PLUS</a> 的升级版，其空间分辨率为 15 弧秒， 相当于 0.5km。其包含了陆地高程和海洋深度数据，具体信息参考 SRTM30_PLUS 的介绍。</p>
<p>数据下载：</p>
<ol style="list-style-type: decimal">
<li><a href="ftp://topex.ucsd.edu/pub/srtm15_plus/README.V1.txt" target="_blank" rel="external">README</a></li>
<li><a href="ftp://topex.ucsd.edu/pub/srtm15_plus/SRTM15.kmz" target="_blank" rel="external">Google KMZ</a></li>
<li><a href="ftp://topex.ucsd.edu/pub/srtm15_plus/topo15.grd" target="_blank" rel="external">14GB netCDF 数据</a></li>
</ol>
<p>netCDF 数据可直接在 GMT 中使用。</p>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
            <tag> 地形 </tag>
            
            <tag> 网格 </tag>
            
            <tag> 高程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[修改 GMT 生成的 PS 文件的标题]]></title>
      <url>http://seisman.info/change-title-of-postscript-files-generated-by-gmt.html</url>
      <content type="html"><![CDATA[<p>本文整理自： <a href="http://gmt.soest.hawaii.edu/boards/1/topics/1820" class="uri" target="_blank" rel="external">http://gmt.soest.hawaii.edu/boards/1/topics/1820</a></p>
<p>需要说明的一点，本文是要修改 PS 文件的标题，而不是 PS 文件的文件名。</p>
<p>用编辑器打开任意一个 GMT 生成的 PS 文件，查看文件的前几行，其中一行大概如下:</p>
<pre><code>%%Title: GMT v5.1.1 (r12968) [64-bit] Document from psxy</code></pre>
<p>这就是所谓的 PS 文件的标题。当用 evince 或 gv 打开 PS 文件时，该标题会在软件的某个位置显示。</p>
<a id="more"></a>
<p>从上面的例子中可以看到，GMT 生成的 PS 文件的标题中几乎没有带有任何有意义的信息。而在 看图的时候可能经常需要从几张相似的图中区分哪张图来自哪个数据，当然可以通过定义很 复杂的 PS 文件名来区分不同的数据，但那么大的一个标题不用，似乎有些太浪费了。</p>
<p>GMT 软件自身不能自定义 PS 文件的标题，只能通过外部程序实现:</p>
<pre><code>sed -i &#39;s/^%%Title:.*/%%Title:&#39;&quot;$NEW_TITLE/&quot; $FILE</code></pre>
<p>其中变量 <code>$FILE</code> 是要修改标题的 PS 文件名， <code>$NEW_TITLE</code> 是要修改的新标题。 这条命令本质上就是一个简单的字符串替换而已，比如:</p>
<pre><code>sed -i &#39;s/^%%Title:.*/%%Title:&#39;&quot;This is new title/&quot; test.ps</code></pre>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[修改 Y 轴的坐标标注的方向]]></title>
      <url>http://seisman.info/change-orientation-of-y-axis-annotations.html</url>
      <content type="html"><![CDATA[<p>在用 GMT 绘制底图时，通常 Y 轴的标注都是水平的，比如如下绘制底图的命令:</p>
<pre><code>gmt psbasemap -R0/50/-10/10 -JM10c -Bx10 -By10 &gt; test.ps</code></pre>
<p>效果如下图</p>
<div class="figure">
<img src="/images/2015031101.png">

</div>
<p>有些时候想要让 Y 轴的标注逆时针旋转 90 度，即 Y 轴的标注方向与 Y 轴平行而不是与 X 轴平行。想要实现的效果如下图。</p>
<a id="more"></a>
<div class="figure">
<img src="/images/2015031102.png">

</div>
<p>想要实现上图所示的效果，很简单，只需要修改 GMT 的参数 <code>MAP_ANNOT_OBLIQUE</code> 即可，代码如下:</p>
<pre><code>gmt set MAP_ANNOT_OBLIQUE 32
gmt psbasemap -R0/50/-10/10 -JM10c -Bx10 -By10 &gt; test.ps</code></pre>
<p>几点说明：</p>
<ol style="list-style-type: decimal">
<li>GMT4 下需要修改 <code>OBLIQUE_ANNOTATION</code> 为 32；</li>
<li>该参数对 <code>JX</code> 无效，可能只对地理投影有效；</li>
</ol>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[征集《SAC 参考手册》维护者]]></title>
      <url>http://seisman.info/maintainers-for-sac-manual-wanted.html</url>
      <content type="html"><![CDATA[<p>如题，希望能够征集到多名志愿者参与《SAC 参考手册》的维护。</p>
<a id="more"></a>
<h2 id="手册简介">手册简介</h2>
<p>SAC（Seismic Analysis Code）是地震学专业常用的数据处理软件之一，《SAC 参考手册》是一本详细介绍 SAC 用法的中文电子书。2011 年暑假，我尝试翻译了官方的英文文档，2012 年初将其整理为 PDF，并放在网络上免费下载，2012 年至 2015 年的三年间，该手册不断更新，目前文档的最新版本为 v3.3。</p>
<ul>
<li>文档发布页： <a href="http://seisman.info/sac-manual.html" class="uri">http://seisman.info/sac-manual.html</a></li>
<li>项目主页： <a href="https://github.com/seisman/SAC_Docs_zh" class="uri" target="_blank" rel="external">https://github.com/seisman/SAC_Docs_zh</a></li>
</ul>
<h2 id="我为何不再维护">我为何不再维护</h2>
<p>自 3.0 版发布之后，我就已经有不再维护该手册的想法：</p>
<ul>
<li>我对于 SAC 已经足够熟悉，日常使用过程中，没有阅读手册的需求，也就没有更新的动力；</li>
<li>进入博士阶段，科研的压力日益繁重，没有足够的时间和精力继续维护；</li>
</ul>
<h2 id="为何要征集维护者">为何要征集维护者</h2>
<ol style="list-style-type: decimal">
<li>SAC 在接下来的几年之内都不会被淘汰，依然是地震学专业常用的数据处理软件之一；</li>
<li>当 SAC 软件更新时，手册也需要及时更新；用着新版的软件却读着旧版的文档，谁也不知道什么时候会遇到一个坑；</li>
<li>整个文档的主体部分我已经基本做完，维护者的负担不会太大；</li>
</ol>
<h2 id="需要维护的内容">需要维护的内容</h2>
<p>所谓的维护，主要包括如下几个方面：</p>
<ol style="list-style-type: decimal">
<li>随着 SAC 软件新版本的发布，新增或更新手册中相应的内容；</li>
<li>完善未讲清楚或易引起歧义的部分；</li>
<li>修复错别字；</li>
<li>增加日常数据处理过程中的一些 SAC 技巧；</li>
<li>对于命令及用法，若不同版本间存在不兼容，则以最新版本的 SAC 为准，并在正文或脚注中适当提及版本间的差异。</li>
<li>增加你认为值得加入的部分；</li>
<li>文档整体布局的调整以及 LaTeX 源码的简化；</li>
</ol>
<h2 id="对维护者的最低要求">对维护者的最低要求</h2>
<ol style="list-style-type: decimal">
<li>SAC 用户（SAC 初学者）；</li>
<li>操作系统以 Linux 为主；</li>
<li>有时间和精力；</li>
<li>了解 LaTeX、Git 的基础知识（至少愿意学习和了解）；</li>
</ol>
<h2 id="维护者可以得到什么">维护者可以得到什么</h2>
<p>维护者完全无偿工作，没有任何经济上的报酬（若是有机会，我可以请吃顿饭）。除此之外，维护者还可以得到如下一些虚无缥缈的东西：</p>
<ol style="list-style-type: decimal">
<li>手册中会将你列为维护者，并留有邮箱；</li>
<li>结识更多的 SAC 用户以及地震学同行；</li>
<li>了解 MarkDown 和 LaTeX 的基础语法；</li>
<li>学会使用 Git，参与开源项目；</li>
</ol>
<h2 id="如何参与">如何参与</h2>
<p>具体操作方式见 SAC 参考手册附录 E 的文档更新与维护一章。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2015-03-07：初稿；</li>
<li>2015-03-09：补充了参与维护的具体步骤；</li>
<li>2015-03-13：置顶本文；</li>
<li>2015-03-23：取消置顶；</li>
<li>2015-08-07：更新了 git 协作流程；</li>
<li>2016-03-08：操作流程放在 SAC 手册中，不再本页显示；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SAC </tag>
            
            <tag> 文档 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[fk 用法笔记]]></title>
      <url>http://seisman.info/fk-notes.html</url>
      <content type="html"><![CDATA[<p>fk 是 Prof. Lupei Zhu 写的一个用于计算 <strong>水平分层模型</strong> 下的理论格林函数并合成 理论地震图的代码包。代码是开源的，可以直接编译使用。</p>
<a id="more"></a>
<p>代码中包含了如下几个重要的命令/脚本：</p>
<ul>
<li><code>fk</code> ：用于计算格林函数的主程序；</li>
<li><code>st_fk</code> ：用于计算静态格林函数的主程序；</li>
<li><code>trav</code> ：用于计算 P、S 初至到时的辅助程序；</li>
<li><code>sachd</code> ：用于修改 SAC 头段的辅助程序；</li>
<li><code>fk.pl</code> ：对 <code>fk</code> 、 <code>st_fk</code> 、 <code>trav</code> 和 <code>sachd</code> 的封装，一般情况下直接使用 <code>fk.pl</code> 脚本即可；</li>
<li><code>syn</code> ：用于将格林函数合成为理论地震图三分量的程序；</li>
</ul>
<p>因而，实际操作的时候，只需要调用 <code>fk.pl</code> 生成格林函数，再调用 <code>syn</code> 将格林函数合成为三分量地震图即可。</p>
<h2 id="相关文献">相关文献</h2>
<ol style="list-style-type: decimal">
<li>Haskell (1964), BSSA</li>
<li>Wang and Herrmann (1980), BSSA</li>
<li>Takeuchi and Saito (1972), Methods in Computational Physics</li>
<li>Zhu and Rivera (2002), GJI</li>
</ol>
<p>建议的阅读方式：</p>
<ul>
<li>若想了解 <code>fk.pl</code> 中每个选项的含义，阅读 Zhu and Rivera (2002) 以及本文就差不多了；</li>
<li>若想理解代码的实现细节，则需要在 Zhu and Rivera(2002) 的基础上，阅读其余三篇文章，至少要阅读 Haskell (1964)。</li>
</ul>
<p>需要注意的一点是，这几篇文献虽然说的都是同一种方法，但在很多东西的定义上是有区别的，所以在推导代码中的公式时应以 Zhu and Rivera (2002) 为准。Zhu and Rivera (2002) 区别于前面其他文献的地方主要在于，重新定义了传播矩阵，并将静态解与动态解统一到同一个公式中。</p>
<h2 id="基础原理">基础原理</h2>
<p>这里不涉及算法的细节，只介绍一些基础的东西。</p>
<p>根据 Zhu and Rivera (2002)，在定义了柱坐标系之后，位移可以表示为：</p>
<div class="figure">
<img src="/images/2015022801.png">

</div>
<p>公式中涉及到了一个求和与两个积分：</p>
<ul>
<li>对频率的积分，本质上就是一个反傅里叶变换，技术上很成熟了，可以不管</li>
<li>对 m 的求和，其实是对方位角模数的求和，理论上是要从零求和到无穷的。但是由于震源的简单性，只需要对几项做求和即可，具体的求和数目由震源类型决定：
<ul>
<li>爆炸源：m=0</li>
<li>单力源：m=0, 1</li>
<li>双力偶：m=0, 1, 2</li>
</ul></li>
<li>对 k 的积分是一个难点，只能进行数值积分，由于积分核 <span class="math inline">\(U_z R_m^k + U_r S_m^k + U_{\theta} T_m^k\)</span> 比较复杂，在做数值积分的时候就需要更多的考虑。</li>
</ul>
<p>积分核 <span class="math inline">\(U_z R_m^k + U_r S_m^k + U_{\theta} T_m^k\)</span> 中 R、S、T 是柱坐标下的基矢量，由一堆 Bessel 函数组成，已知。该算法中的一大堆数学推导以及细节都是为了求出 Uz、Ur 和 Ut。具体 Uz、Ur 和 Ut 怎么求，不是本文的重点，需要了解的只能自己推公式。</p>
<h2 id="使用说明">使用说明</h2>
<p>先把用法贴在这里作为参考:</p>
<pre><code>fk.pl -Mmodel/depth[/f_or_k] [-D] [-Hf1/f2] [-Nnt/dt/smth/dk/taper]
    [-Ppmin/pmax[/kmax]] [-Rrdep] [-SsrcType] [-Uupdn] [-Xcmd] distances</code></pre>
<h3 id="速度模型">速度模型</h3>
<p><code>-Mmodel/depth/k_or_f</code> 中的 <code>model</code> 为模型文件名， <code>k</code> 和 <code>f</code> 的作用在下面会解释。</p>
<h4 id="格式">格式</h4>
<p>fk 的输入速度模型是一维水平分层速度模型，其格式为:</p>
<pre><code>thickness vs vp/vs [rho Qs Qp]</code></pre>
<p>或:</p>
<pre><code>thickness vs vp [rho Qs Qp]</code></pre>
<p>其中</p>
<ul>
<li>列 1：该层的厚度（km）</li>
<li>列 2：S 波速度（km/s）</li>
<li>列 3：波速比或 P 波速度</li>
<li>列 4：密度（ <span class="math inline">\(g/cm^3\)</span> ）</li>
<li>列 5：S 波的 Q 值</li>
<li>列 6：P 波的 Q 值</li>
</ul>
<p>其中前三列是必须的，若未指定密度，则使用经验公式 <code>rho=0.77+0.32*vp</code>；若未指定 Qs，则取 Qs=500；若未指定 Qp，则取 Qp=2*Qs。</p>
<h4 id="关于-k-和-f">关于 k 和 f</h4>
<ul>
<li>若命令行中使用 <code>-Mmodel/depth</code> ，则表示输入模型为第二种格式；</li>
<li>若命令行中使用 <code>-Mmodel/depth/k</code>，则表示输入模型使用第一种格式，即第三列是波速比；</li>
<li>若命令行中使用 <code>-Mmodel/depth/f</code>，则表示需要对速度模型做展平变换，当震中距较大时需要这样做；</li>
</ul>
<h4 id="备注">备注</h4>
<ul>
<li><code>fk.pl</code> 的输入模型是先 Vs 再 Vp，而 <code>fk.pl</code> 在调用 <code>fk</code> 时使用的模型是先 Vp 后 Vs，注意不要搞混；</li>
<li>若第一层的厚度为零，则该行指定了上半空间的参数；</li>
<li>若第一层的厚度不为零，则上半空间为真空，该层给出了地表下方第一层的参数；</li>
<li>最后一层会被自动当做下半无限半空间，并修改其厚度为 0；</li>
<li>对于液态层（如海水和外核）：
<ul>
<li>S 波速度可以用零表示，程序中用自动用 0.0001 替换零值；</li>
<li>Qs 值不可以取为零，应取某小值；</li>
</ul></li>
</ul>
<h3 id="震源">震源</h3>
<h4 id="震源深度">震源深度</h4>
<p>震源深度由 <code>-Mmodel/depth/[f_or_k]</code> 中的 <code>depth</code> 指定，单位为 km。</p>
<p>需要注意，震源深度不能位于速度模型的分界面上，即震源的深度必须位于模型某层的内部。</p>
<p>大多数计算理论地震图的方法都会有这样的限制，因为在计算过程中会用到震源所在层的速度或密度，若震源位于速度模型的分界面上，则会出现参数的间断。</p>
<h4 id="震源类型">震源类型</h4>
<p>fk 中用 <code>-SsrcType</code> 指定震源类型，其中 <code>srcType</code> 可以取如下三个值：</p>
<ul>
<li>0：爆炸源；</li>
<li>1：单力源；</li>
<li>2：双力偶源；</li>
</ul>
<h3 id="台站">台站</h3>
<h4 id="台站深度">台站深度</h4>
<p><code>-Rrdep</code> 中 <code>rdep</code> 用于设置 receiver 的深度（单位为 km），默认值为零，即台站位于地表。</p>
<p>需要注意，fk 中要求震源和台站不能位于同一深度。代码中，会计算震源和台站之间的深度差 <code>hs</code>，并将其作为分母。但这一限制的本质原因尚不清楚。</p>
<h4 id="台站震中距">台站震中距</h4>
<p><code>fk.pl</code> 命令行中可以指定多个震中距，震中距的默认单位为 km。</p>
<p>当震中距较大时，以 km 做单位很不方便，此时可以使用 <code>-D</code> 选项，表明震中距的单位为度。同时，由于震中距比较大，此时可能还需要对速度模型做展平变换。</p>
<h3 id="时间序列">时间序列</h3>
<p>说说 <code>-Nnt/dt/smth/dk/taper</code> 中的 nt、dt 和 smth。</p>
<h4 id="采样间隔">采样间隔</h4>
<p><code>dt</code> 即生成的格林函数的采样间隔。与此同时，<code>dt</code> 决定了 fk 要计算的最高频率，其公式为</p>
<p><span class="math display">\[f_{max} = \frac{1}{2 dt}\]</span></p>
<p>即 fk 生成的格林函数的最高频率是由 <code>dt</code> 决定的 Nyquist 采样率。</p>
<p>因而，一般来说，要首先根据自己的实际需求，确定所需要的最高频率，进而决定 <code>dt</code> 。</p>
<h4 id="数据点数">数据点数</h4>
<p>nt 即数据点数，nt 的选择有一些需要注意的地方：</p>
<ul>
<li>nt 必须为 2 的 n 次方，即可以取 1、2、256、512、1024 等。程序中限制了 <code>nt*smth</code> 不得超过 8192。若想要突破数据点数的限制，可以增大源码 <code>model.h</code> 中 <code>nt=8192</code> 的值。
<ul>
<li>nt=1，则调用 <code>st_fk</code> 直接计算静态位移解；</li>
<li>nt=2，则调用 <code>fk</code> 计算零频位移，等效于静态位移解；</li>
<li>nt 必须为 2 的 n 次方是因为在 FFT 时数据点为 2 的 n 次方时有快速算法；</li>
</ul></li>
<li><span class="math inline">\(T=nt*dt\)</span> 确定了最终数据的总长度</li>
</ul>
<h4 id="smooth-因子">smooth 因子</h4>
<p>由于 dt 决定了 fk 计算的最高频率，所以 dt 是不能随便取的。比如需要最高频率为 2.5Hz，则 dt 应取 0.2s，但是若希望最终生成的数据的采样间隔为 0.05s，则需要 <code>smth</code> 这个参数。</p>
<p>在程序中，smth 做了两件事情：</p>
<ol style="list-style-type: decimal">
<li>将 dt 除以 smth；</li>
<li>将总数据点数乘以 smth；</li>
</ol>
<p>总的效果应该相当于对计算结果做了一个插值，这也可以通过 SAC 的插值命令来完成。在程序实现时，实际上就是在反傅里叶变换之前，给数据的高频部分补上更多的零值。</p>
<p>同样由于快速傅里叶算法的限制， <code>smth</code> 也必须取 2 的 n 次方。</p>
<h3 id="频率">频率</h3>
<h4 id="最高频率">最高频率</h4>
<p>前面已经说到，fk 所计算的最高频率由 <code>dt</code> 决定：</p>
<p><span class="math display">\[f_{max} = \frac{1}{2 dt}\]</span></p>
<h4 id="频率间隔">频率间隔</h4>
<p>频率域的采样间隔（分辨率）为 <span class="math inline">\(df=\frac{1}{T}=\frac{1}{nt*dt}\)</span></p>
<h4 id="高通滤波">高通滤波</h4>
<p>fk 会从零频开始，以 <code>df</code> 为频率间隔，一直到最高频率 <code>fmax</code>，计算每个离散频率处的值。</p>
<p>比如，给定参数 dt=0.1，npts=1024，则 fk 计算的最高频率为 5 Hz，频率间隔 df 约等于 0.01Hz。因而 fk 会计算 0 Hz、0.01 Hz、0.02 Hz 一直到 5 Hz 的值，共计循环 512 次。</p>
<p>有些情况下，比较低频的信息是没有用的，所以可以不必计算，这样循环可以进一步减小，以加速计算。</p>
<p><code>-Hf1/f2</code> 中， <code>f1</code> 限定了循环过程中频率的下限，即对频率的循环会从 <code>f1</code> 开始计算到 <code>fmax</code> 而不是从零开始，这本质上是一个高通滤波器。</p>
<p>这样一来，fk 会计算频率在 f1 和 fmax 之间的值，对于小于 f1 以及大于 fmax 的频率段，其值直接设为零。这实际上是在频率域直接截断，似乎会出现一些问题，所以一般都会对频率的两端做尖灭处理，即 f2 和 taper。程序会在 f1 和 f2 之间以及 (1-taper)*fmax 和 fmax 之间分别加上余弦窗。</p>
<p>taper 的默认值为 0.3，所以当 dt=0.1s 时，fmax=5Hz，则在 3.5Hz 到 5Hz 之间会加上余弦窗，此时数据的频段上限是 5Hz 还是 3.5Hz 呢？这是个疑问。</p>
<h3 id="k-积分">k 积分</h3>
<h4 id="k-是什么">k 是什么</h4>
<p>这里的 k 不是波数，而是水平波数：</p>
<p><span class="math display">\[k = k_x = \vec{k}\cdot \vec{x} = \frac{\omega}{v} \sin \theta = \omega p\]</span></p>
<p>其中， <span class="math inline">\(\theta\)</span> 是射线与垂直方向的夹角， <span class="math inline">\(p=\frac{\sin \theta}{v}\)</span> 是水平慢度，也就是射线参数。</p>
<h4 id="下限和上限">下限和上限</h4>
<p><code>-Ppmin/pmax[/kmax]</code> 可以限定 k 积分的上下限。其中 <code>pmin</code> 确定了 k 积分的下限：</p>
<p><span class="math display">\[k_{min} = \omega pmin\]</span></p>
<p><code>pmax</code> 和 <code>kmax</code> 决定了 k 积分的上限：</p>
<p><span class="math display">\[k_{max} = \sqrt{kmax^2+\omega pmax}\]</span></p>
<p>说明：</p>
<ol style="list-style-type: decimal">
<li>pmin 和 pmax 的取值范围是 0 到 1，代码中会将 pmin 和 pmax 都除以震源处的 S 波速度。</li>
<li>程序中 <code>kmax=kmax/hs</code>，其中 hs 是震源与台站的深度差；由于积分核在零频处以 exp(-k*hs) 的速度随着 k 衰减，因而要求 kmax&gt;10，以保证求和足够多。</li>
<li>指定了 pmin 和 pmax，就相当于指定了射线参数的范围，或射线出射角度的范围，似乎可以用于筛选中特定射线参数范围的射线；</li>
<li>为什么 pmin 和 pmax 在程序中都要除以 S 波速度呢？这样当给定 <span class="math inline">\(pmin=\sin 30=0.5\)</span> 时，以 30 度角出射的 S 波会被计算，而以 30 度角出射的 P 波则不会被计算？这样对吗？</li>
<li>pmin 和 pmax 的取值为 0 到 1，为什么不是 - 1 到 1？也许正负号是由 <code>updn</code> 决定的。</li>
</ol>
<h4 id="上行和下行">上行和下行</h4>
<p><code>-Uupdn</code> 选项可以指定是计算全波场还是只计算上行波或下行波。 <code>updn</code> 可以取值如下：</p>
<ul>
<li>0：计算全波场；也是默认值；</li>
<li>1：仅计算下传波场；</li>
<li>-1：仅计算上传波场；</li>
</ul>
<p>该参数取不同的值，会影响到程序内部的一些公式。具体的原理可能需要推公式才能理解。</p>
<h4 id="dk">dk</h4>
<p>dk 用于控制 k 积分的积分间隔。程序中 <span class="math inline">\(dk=dk*PI/max(x,hs)\)</span>，其中 hs 为震源与台站的深度差， x 为震中距，因而 k 积分间隔实际上是与要计算的最大震中距有关的。</p>
<p>由于积分核中 J(kx) 在大震中距时按 2pi/x 的周期震荡，因而要求 dk 小于 0.5，以保证每个周期内至少有四个采样点。官方建议取值为 0.1 到 0.4。dk 理论上越小越好，当然 dk 越小计算就会越慢。</p>
<h3 id="振幅压制">振幅压制</h3>
<p>这个参数在 <code>fk.pl</code> 脚本内部可以修改，但是在命令行里没法修改。</p>
<p>对于实序列 <span class="math inline">\(f(t)\)</span> ，其傅里叶变换为:</p>
<p><span class="math display">\[F(\omega) = \int f(t) e^{-i\omega t} dt\]</span></p>
<p>若将该实序列 f(t) 乘以 <span class="math inline">\(e^{-\sigma t/T}\)</span>，即 <span class="math inline">\(g(t)=f(t)e^{-\sigma t/T}\)</span> 的傅里叶变换为：</p>
<p><span class="math display">\[G(\omega) = \int g(t) e^{-i\omega t} dt = \int f(t) e^{-\sigma t/T} e^{-i\omega t} dt
          = \int f(t) e^{-i(\omega-i\sigma/T)} dt
          = F(\omega-i\sigma/T)\]</span></p>
<p>因而，在频率域将 <span class="math inline">\(\omega\)</span> 减去 <span class="math inline">\(i\sigma/T\)</span> ，相当于对实序列乘以 <span class="math inline">\(e^{-\sigma t/T}\)</span> 。</p>
<p>其中 T 为实序列的总时间长度，sigma 称为压制因子，用于降低数据尾部的振幅值，而最终反傅里叶变换得到的实序列，会再次乘以 <span class="math inline">\(e^{+\sigma t/T}\)</span>，以消除压制因子对振幅的影响。所以，理论上看，sigma 没什么实际用途，这样处理的具体目的还不清楚，似乎是出于频率域的稳定性考虑的。</p>
<h3 id="debug">DEBUG</h3>
<p>fk 提供了 <code>-X</code> 选项用于 debug，最常见的用法是 <code>-Xcat</code> ，此时 fk.pl 中 <code>cmd</code> 被替换成 <code>cat</code> 命令，即将所有的输入都传递给 <code>cat</code> 命令，这样可以很清楚地知道要传递的数据是否正确，方便 debug。</p>
<h2 id="其他说明">其他说明</h2>
<ol style="list-style-type: decimal">
<li>对于 PREM 模型，震源深度取 15km，震中距为 5 度，做不做展平变换，震相的走时差大概在 0.8s 左右</li>
<li>将 PREM 模型离散成每层 20km 或 50km，计算出的结果差异不大</li>
<li>若台站深度大于震源深度，则会对模型做翻转，程序中的部分参数乘以 - 1；</li>
<li><code>fk.f</code> 中输入的 <code>src_layer</code> 表示震源位于第 <code>src_layer</code> 层的顶部， <code>rcv_layer</code> 同理；而 <code>trav</code> 中 <code>src_layer</code> 表示震源位于第 <code>src_layer</code> 的底部；</li>
</ol>
<h2 id="格林函数">格林函数</h2>
<p>fk 将生成的格林函数以 SAC 格式写到磁盘中。</p>
<h3 id="爆炸源">爆炸源</h3>
<p>生成三个分量，命名为 <code>xxxx.grn.[a-c]</code> ，分别是 Z、R、T 向的格林函数。其单位为 <code>10^-20 cm/(dyne cm)</code> 。</p>
<h3 id="单力源">单力源</h3>
<p>生成六个分量，其中：</p>
<ul>
<li><code>xxxx.grn.[0-2]</code>：m=0 对应的 ZRT 格林函数，等效于垂直单力产生的位移三分量；</li>
<li><code>xxxx.grn.[3-6]</code>：m=1 对应的 ZRT 格林函数，等效于水平单力产生的位移三分量；</li>
</ul>
<p>格林函数的单位为 <code>10^-15 cm/dyne</code> 。</p>
<h3 id="双力偶">双力偶</h3>
<p>生成九个分量，其中</p>
<ul>
<li><code>xxx.grn.[0-2]</code>：m=0 阶源生成的 ZRT 格林函数，相当于 45-down-dip(DD) 双力偶源在 45 度方位角处产生的位移，并乘以（-2,-2,0）</li>
<li><code>xxx.grn.[3-5]</code>：m=1 阶源生成的 ZRT 格林函数，相当于 vertical dip-slip(DS) 双力偶源在 45 度方位角处产生的位移，并乘以 <span class="math inline">\(-\sqrt 2\)</span></li>
<li><code>xxx.grn.[6-8]</code>：m=2 阶源生成的 ZRT 格林函数，相当于 vertical strike-slip(SS) 双力偶源在 22.5 度方位角处产生的位移，并乘以 <span class="math inline">\(-\sqrt 2\)</span></li>
</ul>
<p>格林函数的单位为 <code>10^-20 cm/(dyne cm)</code> 。</p>
<h3 id="说明">说明</h3>
<p>在大多数教程以及文献中，任意一个双力偶源可以表示为三个基本断层的线性迭加。这三个基本断层分别为 DD、DS 和 SS。有些计算格林函数的代码会计算出三种基本断层的位移解，然后根据文献中给出的辐射花样系数进行合成。而 fk 计算出的是 m=0、1、2 时的位移解，虽然这三者分别与 DD、DS、SS 在某个特定方位角的位移解有关系。因而在对 fk 生成的格林函数进行合成时，有专门的辐射花样系数，参见 Zhu and Rivera(2002) 的附录 B10-B12。</p>
<h2 id="syn-用法说明">syn 用法说明</h2>
<p><code>fk.pl</code> 只是算出了格林函数， <code>syn</code> 的作用在于将格林函数组合起来得到RTZ三个方向的理论地震图。</p>
<p><code>syn</code> 的用法相对比较简单，此处作简单介绍：</p>
<ul>
<li><p><code>-M</code> 选项指定震源机制信息，有四种用法：</p></li>
<li>对于爆炸源：<code>-Mmag</code> 其中 mag 的单位是 dyne-cm</li>
<li>对于单力源：<code>-Mmag/strike/dip</code> 其中 mag 的单位是 dyne</li>
<li>对于双力偶源： <code>-Mmag/strike/dip/rake</code> 其中 mag 是矩震级Mw，strike/dip/rake 的定义参照 Aki&amp;Richards(1980)</li>
<li><p>对于地震矩源： <code>-Mmag/Mxx/Mxy/Mxz/Myy/Myz/Mzz</code> 其中 mag 的单位是 dyne-cm。此处有大坑，见后面的详细说明。</p></li>
<li><code>-Aazimuth</code> 选项指定台站方位角，定义为相对于北方向顺时针旋转的角度</li>
<li><code>-Ddura/rise</code> 指定一个梯形作为震源时间函数。其中 dura 是梯形震源时间函数的总持续时间，rise 代表了梯形中上升段所占据的时间比例，取值范围为0到0.5，若取值为0.5，则梯形退化为三角形</li>
<li><p><code>-SsrcFunctionName</code> 除了使用 -D 选项之外，也可以使用将一个SAC文件作为震源时间函数。<code>-S</code> 选项后直接跟SAC文件名。</p></li>
</ul>
<p>用SAC文件作为震源时间函数时需要注意两点：</p>
<ol style="list-style-type: decimal">
<li>SAC文件的采样间隔要与格林函数的采样间隔相等。如果不等也没关系，但要注意 syn 是直接把数据点卷积格林函数的，并没有考虑采样间隔的问题，因而若采样间隔不等可能会一些易忽略的错误；</li>
<li>严格的震源时间函数应该满足积分之后最大值等于1，只有这种情况下，震级或震源强度的定义才是准确的。当然，若无需考虑绝对振幅是否正确的问题，震源时间函数可以不满足这一要求。</li>
</ol>
<ul>
<li><code>-Ff1/f2/n</code> 对理论地震图进行滤波</li>
<li><code>-GFirstCompOfGreen</code> 该选项用于指定要组合的第一个格林函数的文件名</li>
<li>其他选项都很简单，就不介绍了</li>
</ul>
<p>关于地震矩源 <code>-Mmag/Mxx/Mxy/Mxz/Myy/Myz/Mzz</code>，需要注意：</p>
<ol style="list-style-type: decimal">
<li>此处x=North、y=East、z=Down，即地震矩张量使用的是NED坐标系</li>
<li>GCMT网站上给出的地震矩张量是RTP坐标系，二者之间的转换公式见 Aki&amp;Richards(1980)P117 Box4.4</li>
<li>GCMT网站中地震矩张量的6个分量的顺序是 Mrr Mtt Mpp Mrt Mrp Mtp，而本程序中的顺序是 Mxx Mxy Mxz Myy Myz Mzz，因而若使用GCMT的震源机制解，则需要对6个分量进行坐标转换并修改其先后顺序</li>
</ol>
<h2 id="输出类型">输出类型</h2>
<p><code>fk</code> 计算得到的格林函数究竟是什么物理量呢？是位移还是速度？</p>
<p>在 Zhu and Rivera(2002) 的文章中、代码中的注释以及说明文档等多个地方都提到 fk 计算出的是位移量，而实际上利用 <code>fk</code> 和 <code>syn</code> 计算出来的合成地震图是速度场。</p>
<p>Zhu and Rivera(2002) 的附录 B 中给出了不同震源类型以及不同 m 值所对应的 source term，这里的 source term 代表了震源引起的位移-应力不连续。source term 是一个与频率无关的常数，所以 fk 中所使用的 source term 在时间域上的脉冲源。（时间域上的脉冲函数，在频率域是一个常数，所以 fk 中在频率域加了一个常数的 source term，实际上相当于在时间域上加上脉冲源。）</p>
<p>因而，fk 实际上计算的是脉冲源对应的位移场，其等效于阶跃函数所产生的速度场。（阶跃函数的偏导即脉冲函数。）</p>
<p>对于一个真实的小震级的简单地震而言，其震源时间函数可以认为是一个阶跃函数，震源时间函数的偏导就是脉冲函数。因而 fk 计算出的格林函数实际上是速度场，在使用 <code>syn</code> 合成真实数据时，如果使用 <code>-D</code> 选项指定了一个三角震源函数（近似的脉冲函数），得到的合成数据都是速度场。</p>
<h2 id="疑问">疑问</h2>
<ol style="list-style-type: decimal">
<li>在考虑衰减时，Aki and Richard(1980)的公式 (5.88) 中给出的公式中虚数前为负号，而 fk 代码中为正号。Why？</li>
<li>如何从数学或物理上详细解释 <code>sigma</code> 的含义？</li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2015-02-28：初稿；</li>
<li>2017-01-09：增加了 syn 的使用说明；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论地震图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[慢度与射线参数]]></title>
      <url>http://seisman.info/slowness-and-ray-parameter.html</url>
      <content type="html"><![CDATA[<p>本文介绍几个专业名词：</p>
<ul>
<li>慢度</li>
<li>水平慢度 / 垂直慢度</li>
<li>射线参数</li>
<li>视速度 / 视慢度</li>
</ul>
<p>这些名词其实很简单，但是在大三一直到研一的几年间，这几个名词在我脑中的概念是 有些混乱的，我把混乱的原因归结于不同课本对同一个专业名词乱用了不同的词汇。 故而在这里总结一下。</p>
<a id="more"></a>
<h2 id="慢度">慢度</h2>
<p>速度 <span class="math inline">\(v\)</span> 是用于衡量波在介质中传播的快慢的物理量，单位一般是 <code>km/s</code>。</p>
<p>慢度是速度的倒数，单位为 <code>s/km</code>:</p>
<p><span class="math display">\[s = \frac{1}{v}\]</span></p>
<p>所以慢度是一个用于描述介质的物理量。</p>
<h2 id="慢度矢量">慢度矢量</h2>
<p>对于一个在介质中传播的射线来说，取射线中的任何一段，射线都有一个方向，同时 该 <strong>段</strong> 射线所在的介质都有一个慢度值。</p>
<p>介质的慢度值以及射线的方向构成了该 <strong>段</strong> 射线的一个属性，即慢度矢量。</p>
<p><span class="math display">\[\mathbf{s} = \frac{1}{v} \mathbf{e_s}\]</span></p>
<p>根据慢度矢量的定义可知，慢度矢量是与射线相关的量，且慢度矢量是一个局部量， 一条射线中的不同段，其慢度矢量是不同的。</p>
<h2 id="水平慢度和垂直慢度">水平慢度和垂直慢度</h2>
<p>既然是一个矢量，就可以将其分解到水平方向和垂直方向。</p>
<p>在 <strong>水平分层模型</strong> 下，定义射线方向与垂直方向的夹角为 <span class="math inline">\(\theta\)</span>，则水平慢度为：</p>
<p><span class="math display">\[p = s\sin \theta = \frac{\sin \theta}{v}\]</span></p>
<p>垂直慢度为：</p>
<p><span class="math display">\[\eta = s \cos \theta = \frac{\cos \theta}{v}\]</span></p>
<p>所以实际上水平慢度和垂直慢度，也是一个局部量，同一条射线，不同段的水平慢度 和垂直慢度是不同的。</p>
<h2 id="射线参数">射线参数</h2>
<p>射线在经过两种介质的分界面时，满足 Snell 定律:</p>
<p><span class="math display">\[\frac{\sin \theta_1}{v_1} = \frac{\sin \theta_2}{v_2}\]</span></p>
<p>关于 Snell 定律，有两点需要注意：</p>
<ol style="list-style-type: decimal">
<li>Snell 定律不要求介质分界面是水平的，可以是水平分层的、球状分层或任意曲率；</li>
<li>此处 <span class="math inline">\(\theta\)</span> 是射线与界面法向的夹角。</li>
</ol>
<p>因此，对于水平分层介质来说，界面法向与垂直方向是重合的。因而根据 Snell 定律，有：</p>
<p><span class="math display">\[p_1 = \frac{\sin \theta_1}{v_1} = \frac{\sin \theta_2}{v_2} = p_2\]</span></p>
<p>即在水平分层模型下，射线在不同层里的水平慢度是不变的，每条射线都有唯一的水平慢度， 因而定义水平慢度为射线参数：</p>
<p><span class="math display">\[p = \frac{\sin \theta}{v}\]</span></p>
<p>需要注意的是，“射线参数不变” 这个准则仅在水平分层等特殊的情况下成立，若存在 倾斜界面，则该准则不再成立。</p>
<h2 id="视速度-视慢度">视速度 / 视慢度</h2>
<p>在水平分层模型下，每条射线对应了唯一的射线参数，因而射线参数是很重要的一个量。</p>
<p>经过一些简单的推导，可知：</p>
<p><span class="math display">\[\frac{dT}{dX} = p\]</span></p>
<p>其中 <span class="math inline">\(X\)</span> 为射线传播的水平距离，<span class="math inline">\(T\)</span> 为射线传播的时间。</p>
<p><span class="math inline">\(\frac{dT}{dX}\)</span> 即波前在经过不同震中距的台站的到时差，即所谓的视慢度，所以 平常说的视慢度其实就是射线参数。</p>
<h2 id="球状分层介质">球状分层介质</h2>
<p>上面的一些概念大都是在水平分层模型下解释的，更常见的模型是球状分层模型。</p>
<p>在球状分层模型下，射线参数的定义变成：</p>
<p><span class="math display">\[p = \frac{r \sin \theta}{v}\]</span></p>
<p>其中 <span class="math inline">\(r\)</span> 是计算射线参数时所使用的半径，<span class="math inline">\(\theta\)</span> 为射线与径向方向的夹角。</p>
<p>球状分层模型下，p 的单位为 <code>s/radian</code> ，需要乘以 <span class="math inline">\(2\pi/360\)</span> 单位才是 <code>s/deg</code> 。</p>
<p>做了这样的定义之后，在水平分层模型下推导的公式基本都可以直接推广到球状分层模型中了。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2015-02-05：初稿；</li>
<li>2015-07-08：修正了球层介质下射线参数的一个 bug；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 名词解释 </tag>
            
            <tag> 射线 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[不同比例尺曲线的画法]]></title>
      <url>http://seisman.info/plot-multiple-lines-in-different-scales.html</url>
      <content type="html"><![CDATA[<p>本文由 Joe Wang（cjmuqiao@163.com）投稿。</p>
<h2 id="目标效果图">目标效果图</h2>
<div class="figure">
<img src="/images/2015020101.png">

</div>
<a id="more"></a>
<h2 id="问题的提出">问题的提出</h2>
<p>在地磁场中 X、Y、Z 三分量幅值两两之间通常相差一两个数量级。如果直接将其画到相同比例尺的一个 坐标系下，幅值小的通常就成了一条直线。此时需要将大幅值适当缩小，或者小幅值适当放大，即在一张图 中绘制不同比例尺的曲线。在丁鉴海、卢振业、余素荣编著的《地震地磁学概论》中经常会看到不同比例 尺的图。</p>
<p>使用 GMT 的 <code>-Jx</code> 选项，绘图时 X 坐标或Ｙ坐标就会根据数据的范围进行缩放，但这种放大或 缩小的显示方式，会带来一个刻度值显示的问题。即：</p>
<ol style="list-style-type: decimal">
<li>若将数据点用线连起来，由于数据点连线的时候不支持 <code>-N</code> 选项，则 <code>-R</code> 的范围必须包括 整个 Y 轴的取值范围，Y 轴的刻度会完全显示，这样有点啰嗦；</li>
<li>若使用 <code>-S</code> 选项，将数据点用某种符号显示，此时再加上 <code>-N</code> 选项，则可以只显示部分比例尺， 同时又可以把数据完整地表示出来，但是这样的散点图看起来断断续续的，无法连接起来；</li>
</ol>
<h2 id="解决思路">解决思路</h2>
<ol style="list-style-type: decimal">
<li>使用 <code>psxy</code> 将数据点用线连起来，此时不绘制刻度；</li>
<li>选择要绘制的刻度的范围，并使用 <code>psbasemap</code> 绘制部分数据的 Y 轴刻度，在此之前需要 仔细计算坐标原点在 Y 轴的偏移量。</li>
</ol>
<h2 id="脚本">脚本</h2>
<ul>
<li>软件环境：GMT5 windows 版，gawk</li>
<li>使用命令：<code>psxy</code>, <code>psbasemap</code>, <code>gmtmath</code>, <code>gawk</code> 等</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">set sta=CHL</div><div class="line">set day=20120101</div><div class="line">set ps=%sta%%day%.ps</div><div class="line">set Rhour=0/24/0/5</div><div class="line">set Rsec=0/86400/0/5</div><div class="line">set Jhour=x0.72/0.1</div><div class="line">set Jsec=x0.0002/0.1</div><div class="line"></div><div class="line">REM preparing the input data</div><div class="line">REM 1. calculate mean value</div><div class="line">REM 2. subtract mean value from original data</div><div class="line">REM 3. output line number and data</div><div class="line">gmt gmtmath CHL2_20120101Hx.dat CHL2_20120101Hx.dat MEAN SUB = | gawk &quot;&#123;print NR, $1&#125;&quot; &gt; x.dat</div><div class="line">gmt gmtmath CHL2_20120101Hy.dat CHL2_20120101Hy.dat MEAN SUB = | gawk &quot;&#123;print NR, $1&#125;&quot; &gt; y.dat</div><div class="line">gmt gmtmath CHL2_20120101Z.dat CHL2_20120101Z.dat MEAN SUB = | gawk &quot;&#123;print NR, $1&#125;&quot; &gt; z.dat</div><div class="line"></div><div class="line">gmt psxy -R%Rhour% -J%Jhour% -T -K -P &gt;%ps%</div><div class="line"></div><div class="line">REM plot x-axis</div><div class="line">gmt psbasemap -R%Rhour% -J%Jhour% -Bxa2f1+lTime/hour -Bya5 -BS -K -O &gt;&gt;%ps%</div><div class="line">gmt psbasemap -R%Rsec% -J%Jsec% -Bxa7200f3600+lTime/s -Bya5 -BS -Y2c -O -K &gt;&gt;%ps%</div><div class="line"></div><div class="line">REM plot Z</div><div class="line">gmt psxy z.dat -R0/86400/-20/15 -Jx0.0002/0.1 -O -K&gt;&gt;%ps%</div><div class="line">REM plot scale of z data</div><div class="line">gmt psbasemap -R0/86400/0/5 -J -Y2c -Bya5 -BW+t&quot;@%%12%%\104@%%6%%Z&quot; -K -O &gt;&gt;%ps%</div><div class="line"></div><div class="line">REM plot Hy</div><div class="line">gmt psxy y.dat -R0/86400/-400/400 -Jx0.0002/0.005 -Wblue -O -K &gt;&gt;%ps%</div><div class="line">gmt psbasemap -R0/86400/100/200 -J -Y2.5c -Bya100+l&quot;nT&quot; -BW+t&quot;@;blue;@%%12%%\104@%%6%%Y&quot; --FONT=blue --MAP_DEFAULT_PEN=+blue --MAP_TITLE_OFFSET=0p -O -K &gt;&gt;%ps%</div><div class="line"></div><div class="line">REM plot Hx</div><div class="line">gmt psxy x.dat -R0/86400/-55/30 -Jx0.0002/0.05 -Wred -O -K &gt;&gt;%ps%</div><div class="line">gmt psbasemap -R0/86400/10/20 -J -Y3.25c -Bya10 -BW+t&quot;@;red;@%%12%%\104@%%6%%X&quot; --MAP_TITLE_OFFSET=0p --FONT=red --MAP_DEFAULT_PEN=+blue -O -K &gt;&gt;%ps%</div><div class="line"></div><div class="line">gmt psxy -R%Rhour% -J%Jhour% -T -O &gt;&gt;%ps%</div><div class="line"></div><div class="line">del x.dat y.dat z.dat</div><div class="line">del gmt.history</div></pre></td></tr></table></figure>
<p>一些说明：</p>
<ul>
<li><code>gmtmath</code> 命令实现是一个逆波兰式的计算器，此处其作用在于先计算数据的均值，然后从原始数据中减去，并将计算得到的结果通过管道传送给 <code>gawk</code>；</li>
<li>绘制每个数据时，分别使用了两个命令，其中 <code>psxy</code> 用于绘制数据，而 <code>psbasemap</code> 用于绘制比例尺；</li>
<li>脚本中的参数的选择是有技巧，也是有规律的，下面会说明；</li>
<li>脚本中大部分数值都是可以从数据中自动计算得到的，因而将脚本改一改就可以实现完全的自动化；本文的脚本中没有对此进一步实现，如数据范围，移动距离等都是硬编码在脚本中；</li>
<li>命令中使用了一些额外的选项，来达到更好的绘图效果；</li>
</ul>
<p>该脚本中某些参数的选取是很有技巧的，以 Z 分量数据为例：</p>
<ul>
<li>psxy 命令中 <code>-R0/86400/-20/15</code> 是 Z 数据的范围，其值可以通过 <code>gmtinfo</code> 命令自动获得；</li>
<li>psxy 命令中 <code>-Jx0.0002/0.1</code>，即对于 Y 轴而言，数据的 1，在图上是 0.1 厘米，则 Z 数据的 35 的范围，对应于图上 3.5 厘米；</li>
<li>为了在 Y 轴的 0 到 5 处绘制一个比例尺，需要使用 psbasemap 命令，该命令有两个需要注意的地方：
<ul>
<li><code>-R0/86400/0/5</code> 设定了 Y 轴范围为 0 到 5；</li>
<li>为了在真正的 0 处绘制比例尺，需要移动坐标系原点，此处的移动距离为 <span class="math inline">\((0-(-20))*0.1=2cm\)</span>，即 <code>-Y2c</code> 选项；</li>
</ul></li>
</ul>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2015-02-01：Joe Wang 投稿；</li>
<li>2015-02-01：SeisMan 整理语句、优化脚本；</li>
<li>2015-02-02：使用 FONT 和 MAP_DEFAULT_PEN 代替其他参数；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[强大的跨平台 PDF 处理工具：cpdf]]></title>
      <url>http://seisman.info/coherent-pdf-command-line-tools.html</url>
      <content type="html"><![CDATA[<p>日常生活中对 PDF 的最基本的操作大概就是合并和切割了。之前一直在用强大的 PDFtk，但是由于一些底层依赖的问题，PDFtk 在短时间内是不可能出现在 CentOS7 下了，只能寻找新的 PDF 替代工具了。</p>
<a id="more"></a>
<h2 id="简介">简介</h2>
<p>Coherent PDF，简称 cpdf，是个用于处理 PDF 的命令行工具。该软件支持 Windows、Linux 和 Mac，且对于非商业用途是免费的。</p>
<p>主页： <a href="http://community.coherentpdf.com/" class="uri" target="_blank" rel="external">http://community.coherentpdf.com/</a></p>
<h2 id="linux-的安装">Linux 的安装</h2>
<p>下载地址： <a href="https://github.com/coherentgraphics/cpdf-binaries/archive/master.zip" target="_blank" rel="external">cpdf</a></p>
<p>cpdf 有预编译的二进制文件，直接下载解压，然后把自己的平台对应的二进制文件复制到 PATH 中即可使用。</p>
<h2 id="常见用法">常见用法</h2>
<p>PDF 合并:</p>
<pre><code>cpdf input1.pdf input2.pdf -o output.pdf</code></pre>
<p>切割 PDF 中的 1 至 3 页以及 12 页至最后页:</p>
<pre><code>cpdf input.pdf 1-3,12-end -o output.pdf</code></pre>
<p>将 PDF 分割成单页 PDF，编号为 <code>page001.pdf</code> 、 <code>page002.pdf</code> :</p>
<pre><code>cpdf -split in.pdf -o page%%%.pdf</code></pre>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PDF </tag>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用 taup_time 计算震相走时及射线信息]]></title>
      <url>http://seisman.info/calculate-travel-time-using-taup.html</url>
      <content type="html"><![CDATA[<p><code>taup_time</code> 是 TauP 提供的一个工具，其主要用于计算震相理论走时，除此之外， 还提供了一些与射线有关的信息。</p>
<a id="more"></a>
<h2 id="基本用法">基本用法</h2>
<p>计算震源深度为 300km，震中距为 60 度时，P、S、PcP 等震相的走时信息:</p>
<pre><code>taup_time -mod prem -ph P,S,PcP,ScS,PKiKP -deg 60 -h 300</code></pre>
<p>其中：</p>
<ul>
<li><code>-mod</code> 指定速度模型为 TauP 内置的 prem 模型；</li>
<li><code>-ph</code> 后跟一系列震相名；</li>
<li><code>-h</code> 震源深度；</li>
<li><code>-deg</code> 后接震中距，单位为度；</li>
</ul>
<p>在震中距比较小的情况下，用千米表示震中距更方便，可以使用 <code>-km</code> 选项。比如 计算一个浅源地震在 100 km 处常见 P 波震相的走时信息:</p>
<pre><code>taup_time -mod prem -ph ttp+ -h 2 -km 100</code></pre>
<p>当然，也可以通过给定地震位置以及台站位置:</p>
<pre><code>taup_time -mod prem -ph P,PcP -h 100 -sta 20 130 -evt 40 150</code></pre>
<h2 id="输出信息">输出信息</h2>
<p>以第一个例子的输出为例:</p>
<pre><code>$ taup  taup_time -mod prem -ph P,S,PcP,ScS,PKiKP -deg 60 -h 100

Model: prem
Distance   Depth   Phase   Travel    Ray Param  Takeoff  Incident  Purist    Purist
  (deg)     (km)   Name    Time (s)  p (s/deg)   (deg)    (deg)   Distance   Name
-----------------------------------------------------------------------------------
   60.00   100.0   P        595.39     6.819     30.16    20.83    60.00   = P
   60.00   100.0   PcP      640.10     3.999     17.14    12.04    60.00   = PcP
   60.00   100.0   PKiKP   1017.57     1.242      5.25     3.71    60.00   = PKiKP
   60.00   100.0   S       1081.25    12.786     31.42    21.59    60.00   = S
   60.00   100.0   ScS     1176.81     7.448     17.68    12.38    60.00   = ScS</code></pre>
<p>输出共 9 列，从左到右分别为：</p>
<ol style="list-style-type: decimal">
<li>震中距（度）；</li>
<li>震源深度（km）；</li>
<li>震相名；</li>
<li>震相走时（秒）；</li>
<li><p>射线参数（秒 / 度）；</p>
<p><span class="math display">\[p = r \frac{\sin \theta}{v_s} = 6371 km \frac{\sin 20.83}{5.8 km/s}
  = 390.5423 s/radian\]</span> <span class="math display">\[= 390.5423 * 2\pi/360 s/deg = 6.817 s/deg\]</span></p></li>
<li>出射角（deg）：即射线与垂直向下方向的夹角。若夹角在 0 到 90 度内，则取正值；若夹角在 90 度到 180 度内，则先减去 90，再取负值。因而，一般情况下，P 波出射者为正值，而 p 出射角为负值；</li>
<li>入射角（deg）：射线在台站（位于地表）处入射时与垂直向上方向的夹角。应该是恒正的。</li>
<li><p>Purist Distance 和 Purist Name 不知为何物；</p></li>
</ol>
<h2 id="信息提取">信息提取</h2>
<p>上面介绍的输出中包含了很多信息，想要在脚本中提取出想要的信息有些麻烦。所以 <code>taup_time</code> 提供了一些选项，使得在脚本中计算走时什么的更加方便。</p>
<h3 id="time">time</h3>
<p>该选项使得输出中只包含走时信息:</p>
<pre><code>$ taup  taup_time -mod prem -ph P,S,PcP -deg 60 -h 100 --time
595.3896 640.09875 1081.2472</code></pre>
<p>需要注意的是，输出中走时不是按照 <code>-ph</code> 选项中震相的顺序进行排序的，而是按照走时递增的顺序排序。比如这里，S 震相放在震相列表的第二位，而走时 1081.2472 却放在第三位。</p>
<h3 id="rayp">rayp</h3>
<p>该选项使得输出中只包含射线参数信息:</p>
<pre><code>$ taup  taup_time -mod prem -ph P,S,PcP -deg 60 -h 100 --rayp
6.8185554 3.9990747 12.785722</code></pre>
<p>这里，射线参数的输出是按照震相进行排序的。</p>
<h3 id="time-和-rayp">time 和 rayp</h3>
<p>这两个选项是不能一起用的，也就是说不能同时输出震相走时和射线参数信息。当两个选项同时使用时，会以后出现的选项为准。</p>
<p>当同时需要走时和射线参数时，只能多次执行命令了。</p>
<h3 id="rel">rel</h3>
<p>该选项用于计算震相的相对走时，似乎有 bug，无法正常工作。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TauP </tag>
            
            <tag> 射线 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 中添加注释和标注]]></title>
      <url>http://seisman.info/add-annotations-in-gmt.html</url>
      <content type="html"><![CDATA[<p>在日常绘图时经常会需要在已经画好的图上添加一些注释或标注，比如在某个位置加文字、箭头或者连线。一般情况下，若注释或标注出现在单个底图的内部，则可以很容易通过 <code>pstext</code> 和 <code>psxy</code> 来实现；若需要在底图外添加注释或标注，则会复杂一些。本文试图解决这个问题。</p>
<a id="more"></a>
<p>下图展示了绘图时一个常见的需求：</p>
<div class="figure">
<img src="/images/2014122801.png">

</div>
<p>这里出于演示的目的，用尽可能简单的命令绘制尽可能简单的图形。图中两个底图由 <code>psbasemap</code> 绘制得到，红色矩形由 <code>psxy</code> 绘制得到。其命令如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">PS=test.ps</div><div class="line"></div><div class="line">R=0/10/0/10</div><div class="line">J=X10c</div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制左边的底图</span></div><div class="line">gmt psbasemap -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B2 -BWSen -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 绘制红色矩形</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -W1.5p,red -K -O -L &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">6 8</div><div class="line">8 8</div><div class="line">8 6</div><div class="line">6 6</div><div class="line">EOF</div><div class="line"></div><div class="line">R=6/8/6/8</div><div class="line">J=X8c</div><div class="line"><span class="comment"># 绘制右边的底图</span></div><div class="line">gmt psbasemap -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B0.5 -BwSEn -K -O -X12c -Y1c &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">rm <span class="_">-f</span> gmt.conf gmt.history</div></pre></td></tr></table></figure>
<p>至此，整张图的主体已经绘制完成，下面需要向图中添加蓝色的两条连线。</p>
<p>这两条连线加起来并不那么容易，因为其游离在两个底图之间，而 GMT 是无法在底图之外添加注释和标注的，所以两条连线无法通过简单的方式实现。这里有几个反驳点：</p>
<ol style="list-style-type: decimal">
<li><p>pstext 的 - N 选项是允许在底图之外写文本的。</p>
<p>这一点我无力反驳，但是要注意文本和注释之间的一点点区别。比如，在左底图中（5,5）处画一个五角星表示地震事件，然后在附近写上 “20141228” 表示事件的 ID，这称之为文本；若想在两个底图的中间添加 “middle” 这样的文本，姑且称为注释，可以使用 <code>pstext</code> 在左底图的（11,5）或右底图的（5.8,5）位置添加文本；</p></li>
<li><p>psxy 的 <code>-N</code> 选项允许在底图之外画符号。</p>
<p>用 <code>psxy</code> 的 <code>-N</code> 选项可以将圆、三角之类的符号画在底图之外，但直线无法出现在底图之外。</p></li>
<li><p>为嘛不直接使用其他工具，比如 Photoshop、Illustrator、GIMP 甚至画图工具来添加？</p>
<p>的确，用这些工具可以更简单的实现。但若经常需要微调图片，则需要重复使用这些工具，反而失去了用脚本画图的优势。另外，其他软件并不总能很好地兼容 GMT 做的图，所以有时候无法使用其他软件添加注释和标注。</p></li>
</ol>
<p>这里的解决办法是，新增一个覆盖整张纸的辅助底图，在辅助底图中添加注释和标注，如下。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">PS=test.ps</div><div class="line">R=0/10/0/10</div><div class="line">J=X10c</div><div class="line"></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制左底图</span></div><div class="line">gmt psbasemap -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B2 -BWSen -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 绘制红色矩形</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -W1.5p,red -K -O -L &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">6 8</div><div class="line">8 8</div><div class="line">8 6</div><div class="line">6 6</div><div class="line">EOF</div><div class="line"></div><div class="line">R=6/8/6/8</div><div class="line">J=X8c</div><div class="line"><span class="comment"># 绘制右底图</span></div><div class="line">gmt psbasemap -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B0.5 -BwSEn -K -O -X12c -Y1c &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制辅助底图</span></div><div class="line">R=0/29.7/0/21</div><div class="line">J=x1/1</div><div class="line">B=a1g1</div><div class="line">gmt <span class="built_in">set</span> MAP_FRAME_TYPE=inside MAP_GRID_PEN_PRIMARY=0p,red,.</div><div class="line">gmt psbasemap -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -BWSEN -K -O -Xf0c -Yf0c &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">rm <span class="_">-f</span> gmt.conf gmt.history</div></pre></td></tr></table></figure>
<p>关于辅助底图的几个说明：</p>
<ol style="list-style-type: decimal">
<li>默认纸张为 A4，纸张大小为 <code>210x297mm</code> ，则对于 Landscape 模式：<code>-R0/29.7/0/21</code> ；对于 Portrait 模式， <code>-R0/21/0/29.7</code> 。</li>
<li>投影方式为 <code>-Jx1/1</code> ，即线性投影，且纸张中的 1 厘米表示数据中的 1；则 <code>-R0/29.7/0/21</code> 与 <code>-Jx1/1</code> 一起使用的结果是：辅助底图恰好占据整个纸张。</li>
<li><code>-Ba1g1</code> 、 <code>MAP_FRAME_TYPE</code> 以及 <code>MAP_GRID_PEN_PRIMARY</code> 的设置，都是为了增强辅助底图的实用性；</li>
<li><code>psbasemap</code> 将辅助底图绘制出来，由于需要注意这里 <code>-X</code> 和 <code>-Y</code> 的使用；</li>
</ol>
<p>最终得到的效果如下图（辅助底图的（0,0）点与纸张左下角重合，（29.7,21）点与纸张右上角重合）：</p>
<div class="figure">
<img src="/images/2014122802.png">

</div>
<p>辅助底图的出现，给整个纸张加上了网格，因而我们可以很容易的大概确定出纸张上任意一点的坐标。比如这里需要的四个点的坐标分别为（10.5，10.5）、（14.5,11.5）、（10.5,8.5）和（14.5,3.5）。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">PS=test.ps</div><div class="line">R=0/10/0/10</div><div class="line">J=X10c</div><div class="line"></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制左底图</span></div><div class="line">gmt psbasemap -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B2 -BWSen -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 绘制红色矩形</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -W1.5p,red -K -O -L &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">6 8</div><div class="line">8 8</div><div class="line">8 6</div><div class="line">6 6</div><div class="line">EOF</div><div class="line"></div><div class="line">R=6/8/6/8</div><div class="line">J=X8c</div><div class="line"><span class="comment"># 绘制右底图</span></div><div class="line">gmt psbasemap -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B0.5 -BwSEn -K -O -X12c -Y1c &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制辅助底图</span></div><div class="line">R=0/29.7/0/21</div><div class="line">J=x1/1</div><div class="line">B=a1g1</div><div class="line">gmt <span class="built_in">set</span> MAP_FRAME_TYPE=inside MAP_GRID_PEN_PRIMARY=0p,red,.</div><div class="line">gmt psbasemap -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -BWSEN -K -O -Xf0c -Yf0c &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 在辅助底图坐标系中绘制两条连线，注意 -Xf0c 和 -Yf0c</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -W2p,blue -K -O -Xf0c -Yf0c &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">&gt;</div><div class="line">10.5 10.5</div><div class="line">14.5 11.5</div><div class="line">&gt;</div><div class="line">10.5 8.5</div><div class="line">14.5 3.5</div><div class="line">EOF</div><div class="line"></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">rm <span class="_">-f</span> gmt.conf gmt.history</div></pre></td></tr></table></figure>
<p>效果图如下：</p>
<div class="figure">
<img src="/images/2014122803.png">

</div>
<p>实际的图件中，肯定是不能有辅助底图以及相关的网格线的，所以在添加注释和标注之后，还需要将辅助底图删除，只需要将上面的脚本中注释或删除掉如下两行即可。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gmt <span class="built_in">set</span> MAP_FRAME_TYPE=inside MAP_GRID_PEN_PRIMARY=0p,red,.</div><div class="line">gmt psbasemap -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -BWSEN -K -O -Xf0c -Yf0c &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>需要强调两点：</p>
<ol style="list-style-type: decimal">
<li>绘制连线的时候是使用了辅助底图的，注释掉上面两个命令只是使得辅助底图不显示而已；</li>
<li>使用辅助底图会修改 <code>gmt.conf</code> 和 <code>gmt.history</code> 文件，因而辅助底图的相关命令应放在所有命令的最后，且在脚本结束时要记得删除 <code>gmt.conf</code> 和 <code>gmt.history</code> 以保证不会干扰到其他绘图命令的效果。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Windows 下使用 GMT 的正确姿势]]></title>
      <url>http://seisman.info/how-to-use-gmt-under-windows.html</url>
      <content type="html"><![CDATA[<p><strong>警告：由于某些未知的更新，本文所推荐的notepad++终端插件无法在终端中显示GMT输出的各种信息，因而请勿完全按照本文所说的进行操作！！！</strong></p>
<p>我几乎是完全在 Linux 下工作的。有过几次在 Windows 下使用 GMT 的经历，个人觉得用户体验是非常糟糕的，Windows 自带的工具太简陋，用来画 GMT 图太繁琐，浪费好多时间。虽然未来我也几乎不会在 Windows 下写 bat 脚本，但还是想将自己的一些经验写下来，希望能够提高 Windows 下 GMT 的用户体验。</p>
<p>在正式开始本文之前，首先要认清几个基本的事实。如果你无法认同这几个事实，那么就没有再读下去的必要了：</p>
<ol style="list-style-type: decimal">
<li>GMT 最初是在 Linux 下开发的 ** 纯命令行 ** 工具。在 Linux 下使用 GMT 要比在 Windows 下方便很多。所以，如果能在 Linux 下使用，就不要在 Windows 下使用；</li>
<li>大多数图都不可能用一个 GMT 命令就完成，因而需要将一系列 GMT 命令写到 bat 脚本中；</li>
<li>将 GMT 命令写入 bat 脚本的目的有两个：首先是记录 GMT 绘图的过程，其次才是批量绘图；</li>
<li>写 bat 脚本的过程，大部分时间和精力都是花在命令的调试和图形的微调上；</li>
<li>花半个小时时间折腾一下工具，就可以换取更好的用户体验以及更高的调试效率，这是一笔很划算的交易；</li>
</ol>
<a id="more"></a>
<h2 id="不用-cmd">不用 cmd</h2>
<p>点击 “开始”-&gt;“附件”-&gt;“命令提示符”（或者点击 “开始”，然后搜索 “cmd”），会出来一个如下图所示的命令提示符窗口，简称为 cmd。</p>
<div class="figure">
<img src="/images/2014121001.png">

</div>
<p>Windows 下的 GMT 用户，尤其是 GMT 初学者，都会在 cmd 中敲一系列的 GMT 命令来画图。我想，用了几次就会体会到 cmd 的这些让人无法忍受的缺点：</p>
<ol style="list-style-type: decimal">
<li>默认的界面又黑又丑，几乎无法自定义；</li>
<li>默认字体完全不适合写脚本，难以区分 1 和 l 等，写脚本的时候容易被坑；</li>
<li>复制粘贴比较麻烦，似乎没有简单的办法完成复制操作，这使得将命令复制到脚本中变得很麻烦；</li>
<li>关闭 cmd 并重启后，前一次的命令历史都没了；</li>
</ol>
<p>有一些与 cmd 类似的工具，比如 console、console 2、ColorConsole、ConEmu 等，可以完全替代 cmd，同时又有更好看的图形界面以及更丰富的自定义功能。</p>
<p>但是，不建议使用 cmd 以及这些类似的工具。</p>
<p>用 GMT 画图时，通常需要用多个命令绘制一张图，用 cmd 之类的工具写这些命令将会非常痛苦。因为一旦其中任意一个命令出现问题，或者想要微调其中某个命令的某个参数，则必须通过各种方式（一般是通过多次按上下方向键）将命令历史一一调出来并一一重新执行。这个过程非常繁琐、非常浪费时间，出错的概率也很高。</p>
<p><strong>不要使用 cmd！！！</strong></p>
<p><strong>不要使用 cmd！！！</strong></p>
<p><strong>不要使用 cmd！！！</strong></p>
<p>（因为 cmd 太坑，所以重复三遍。）</p>
<p>用 GMT 画图的正确姿势是将绘图所需的 GMT 命令都写到 bat 脚本中，即便某个命令出错或者某个命令需要微调也不用怕了，只是重新执行一下 bat 脚本即可。</p>
<h2 id="不要用-notepad">不要用 notepad</h2>
<p>既然是写脚本，就一定要使用文本编辑器。Windows 自带的文本编辑器是 notepad，也就是常说的记事本，也就是下面这货：</p>
<div class="figure">
<img src="/images/2014121002.png">

</div>
<p>因为实在无法忍受 notepad 那丑陋的默认字体，我把 notepad 的字体改成了等宽的 “Courier New”。</p>
<p>notepad 的缺点实在太多：</p>
<ol style="list-style-type: decimal">
<li>没有语法高亮</li>
<li>没有行号</li>
<li>没有智能补全</li>
<li>用 Ctrl+Z 只能撤销最近的一个操作历史</li>
</ol>
<p>基本上你需要的功能它都没有。当然优点也是有的，比如 “它是系统自带编辑器” 以及“它是一款很简约（简陋？）的编辑器”。</p>
<p><strong>不要用 notepad 写 bat 脚本。</strong> 它本来就不是一款用于写脚本或代码的编辑器。有很多功能强大的编辑器值得你去用。</p>
<h2 id="使用-notepad">使用 notepad++</h2>
<ul>
<li><p>不用 notepad，还可以用什么？</p>
<p>优秀的文本编辑器实在太多。比如 notepad++、sublime text、EditPlus、vim、emacs 等等。除了 vim 和 emacs 学习曲线比较陡峭之外，其余的大多数文本编辑器都是很容易直接上手使用的。</p></li>
<li><p>为什么要使用 notepad++？</p>
<p>这里并不是要推荐 notepad++，其他的文本编辑器也可以实现类似的功能，或许可以实现的更好更方便，但我没有时间也没有心思去寻找最好的那一款（其实没有最好只有最适合）。</p>
<p>我只是想借着 notepad++ 来展示下一个合适的文本编辑器是如何提高写脚本 / 代码的效率的。针对本文的主题，也就是要解释一下，为什么一个好用的文本编辑器可以提高 GMT 绘图时的效率。</p></li>
<li><p>notepad++ 和 notepad 是什么关系？</p>
<p>这两个编辑器没有关系，只是恰好名字类似而已。</p></li>
</ul>
<h3 id="下载与安装">下载与安装</h3>
<p>到官方网站下载： <a href="http://notepad-plus-plus.org/" class="uri" target="_blank" rel="external">http://notepad-plus-plus.org/</a></p>
<p>安装过程没什么可说的。启动之后的界面如下图，代码高亮、行号显示、自动补全默认都实现了：</p>
<div class="figure">
<img src="/images/2014121003.png">

</div>
<p>对于 bat 脚本，右键，然后 “Edit with notepad++” 即可用 notepad++ 打开脚本。</p>
<h3 id="基本的配置">基本的配置</h3>
<p>“设置”-&gt;“首选项” 中提供了一些基本的配置，可以简单配置一下以符合自己的习惯。</p>
<p>“设置”-&gt;“语言格式设置” 中可以设置字体和字号，以及对各种不同语言做各种自定义。</p>
<h3 id="安装插件-nppexec">安装插件 NppExec</h3>
<p>“插件”-&gt;“Plugin Manager”-&gt;“Show Plugin Manager”会打开插件管理器，在 “Available” 标签页中可以找到 notepad++ 的各种插件。</p>
<p>用 notepad++ 写完 bat 脚本之后，就需要执行 bat 脚本以检查命令的正确性以及绘图效果。</p>
<p>最原始也是最常用的做法是鼠标双击 bat 脚本，然后一个黑框一闪而过。。。此时即便命令执行时有输出错误信息，用户也看不到，所以就开始抱怨自己的脚本画不出来图，但是又不懂得提供出错信息。当然这个问题可以解决，在 bat 脚本的最后加上一句 <code>pause</code>，则黑框在脚本执行完毕时不会自动关闭，就可以看到输出信息了，只是又要面对那又黑又丑的 cmd，又要面对无法把报错信息复制到 google 里搜索的尴尬。</p>
<p>NppExec 插件可以解决这个问题。安装该插件后（安装过程中需要从 sourceforge 下载数据，有时候该网站会被墙，自己想办法解决），并重启，notepad++ 的界面如下：</p>
<div class="figure">
<img src="/images/2014121004.png">

</div>
<p>直观地可以看到两个变化：</p>
<ol style="list-style-type: decimal">
<li>整个界面被分为上下两个区：文本编辑区和 console 区</li>
<li>工具栏上，在倒数第二的位置出现了一个终端的小图标</li>
</ol>
<p>写完 GMT 脚本后，Ctrl+S 保存，然后键入 F6，就会出现 “Execute” 对话框如下图：</p>
<div class="figure">
<img src="/images/2014121005.png">

</div>
<p>在其中输入 <code>$(FULL_CURRENT_PATH)</code> ，然后点击 OK，即可执行该 bat 脚本。</p>
<p><strong>注意</strong>：</p>
<p>在执行 bat 脚本的过程中，可能会出现生成的 PS 文件被放到 notepad++ 的安装文件夹下，或者因为权限问题 “拒绝访问” 的错误，解决办法是在 “插件”-&gt;“NppExec” 中勾选“Follow $(CURRENT_DIRECTORY)” 选项，并重启 notepad++ 使其生效。该选项的作用是使得在执行 bat 之前，先 cd 到 bat 所在的路径，再执行 bat 脚本中的命令。</p>
<p>执行后的效果如下：</p>
<div class="figure">
<img src="/images/2014121006.png">

</div>
<p>在 console 中可以看到 bat 脚本中的每个命令的执行，当然，如果命令有错误，也会显示报错信息。这样，在编辑器里就既可以编辑 bat 脚本，也可以执行 bat 脚本，并可以根据终端的输出来判断命令是否有错误以及警告。</p>
<p>如果脚本有问题就需要修改，修改完成后保存，再次键入 F6，又会出现 “Execute” 对话框，<code>$(FULL_CURRENT_PATH)</code> 已经输入好了，再点击一次 “OK” 即可再次运行修改后的脚本。不过，按 F6 再点击 OK 还是有些麻烦：当脚本执行过一次之后，可以用快捷键 Ctrl+F6 重新运行脚本。</p>
<p>每次修改代码之后都要先保存再执行也挺麻烦的，最好能够在运行之前自动保存。在 “插件”-&gt;“NppExec” 中选中 “Save all files on execute” 即可实现每次运行之前自动保存代码。</p>
<p>对于终端，还可以做一些额外的设置，可以在 “插件”-&gt;“NppExec” 中进一步调整：</p>
<ol style="list-style-type: decimal">
<li>“Change Console font” 来挑选一个合适的等宽字体和字号；</li>
<li>一些系统级别的信息对于我来说没有用，所以勾选 “No internal messages”</li>
<li>Ctrl 键和 F6 键离得有些远，按起来还是不太方便：在 “Advanced options” 中，把 “ToolbarBtn” 改成“ExecPre”，则点击工具栏里倒数第二个终端小图标，就相对于执行了 Ctrl+F6，好方便；</li>
<li>“Advanced options” 中还可以改 console 中文本的颜色，这个用默认值就好啦。</li>
</ol>
<p>console 的输出信息，对于我们测试 bat 脚本是非常重要的，所以会要求输出信息尽量完整且精简。默认的输出不太满意，在 “Console Output Filters” 中做一些修改：</p>
<ol style="list-style-type: decimal">
<li><p>终端的输出信息中有太多空白行，浪费了宝贵的空间，想要把这些空白行都 ** 过滤 ** 掉，在 Filter 标签中修改如下图：</p>
<div class="figure">
<img src="/images/2014121007.png">

</div></li>
<li><p>输出信息中每行都有很长的当前路径信息，影响了输出的阅读，而且该路径信息与具体的命令之间没有空格，就更容易混淆了。在 Replace 标签页中，将当前路径都 ** 替换 ** 成 <code>GMT5&gt;</code> ，具体如下图：</p>
<div class="figure">
<img src="/images/2014121008.png">

</div>
<p>需要注意一下， <code>GMT5&gt;</code> 的大于号后面有个空格，使得提示符与命令之间更容易区分。</p></li>
<li><p>输出信息中包含了命令、错误信息、警告信息以及输出，通常希望将错误、警告以及输出跟命令区分一下。这里的处理方式是，先在 “Advanced Options” 中将设置 console 的输出文本颜色为蓝色：</p>
<div class="figure">
<img src="/images/2014121009.png">

</div>
<p>然后在 “Highlight” 选项卡中，将以 GMT5 开头的行设置为黑色：</p>
<div class="figure">
<img src="/images/2014121010.png">

</div>
<p>这样设置之后，所有的命令都是黑色显示，所有的输出、错误、警告都用蓝色显示，当然也可以将错误、警告、输出定义不同的颜色，稍稍麻烦一些，这里就不做了。</p></li>
</ol>
<p>经过这么一番配置之后，再次 Ctrl+F6 执行，效果如下：</p>
<div class="figure">
<img src="/images/2014121011.png">

</div>
<p>这里在命令里加了个输出，并且故意把命令写错了，所以出现了蓝色的输出和报错信息，一眼就可以看到错误信息，看上去更直观。</p>
<p><strong>注意</strong>: 似乎该插件不会输出 GMT 命令中 <code>-V</code> 显示的信息，原因未知。</p>
<h2 id="ps-查看器">PS 查看器</h2>
<p>上面已经把编辑器配置得可以方便地编辑、执行脚本，并可以根据输出信息来判断脚本的正误。有些时候脚本是对的，只是绘图的效果不够理想，此时需要不断微调脚本并实时预览 PS 文件。</p>
<p>gsview 是 GMT 官方推荐的 PS 查看器，它可以基本实现 PS 文件的实时预览。这里说 “基本实现”，因为在每次生成 PS 文件后，总是需要将焦点切换到 gsview 软件上，gsview 才会重新载入 PS 文件。不喜欢 gsview 的另一个原因是，gsview 是商业软件，需要注册才可以使用，未注册的软件在每次打开 PS 文件时都会弹出要求注册的对话框，很是烦人。</p>
<p>推荐使用 <a href="http://www.sumatrapdfreader.org/free-pdf-reader.html" target="_blank" rel="external">SumatraPDF</a>，一个非常精致小巧的阅读器，支持 PDF、PS、epub 等多种格式。</p>
<p>在我眼中，SumatraPDF 相对于 gsview 的优势在于：</p>
<ol style="list-style-type: decimal">
<li>免费软件，不会弹出讨厌的注册对话框</li>
<li>完全自动重载 PS 文件，实时预览 PS 文件，而不是像 gsview 一样需要将焦点切换到软件上才可重载</li>
</ol>
<p>如果觉得 SumatraPDF 不错，可以将 PS 文件的默认打开方式设置为 SumatraPDF。</p>
<p>默认情况下，SumatraPDF 是不能打开含中文的 PS 文件的，这就需要设置环境变量 <code>GS_FONTPATH</code> 为 gs 指定字体的搜索路径。具体步骤是：“我的电脑”上右键点击 “属性”-&gt;“高级系统设置”-&gt; 在“高级”选项卡中点击 “环境变量(N)…”-&gt;“新建” 系统变量 -&gt;变量名为 <code>GS_FONTPATH</code> ，变量值为 <code>C:\Windows\Fonts</code>。如果设置后依然无法打开含中文的 PS 文件，可以考虑升级 gs 的版本，gs9.05 和 9.18 经测试都是可以的。</p>
<h2 id="效果图">效果图</h2>
<p>基于以上的一些配置，定制出来一套 Windows 下我觉得很友好也很高效的 GMT 绘图系统（右键查看大图）：</p>
<div class="figure">
<img src="/images/2014121012.png">

</div>
<p>屏幕左边是编辑器，右边是 PS 阅读器（预览区）。编辑器上边为编辑区，下边为终端区。</p>
<p>试想一下，在编辑区写脚本，写完了 Ctrl+S 保存，然后 Ctrl+F6 执行，眼睛移到终端区看看有没有错误和警告，有的话就修改脚本，重复以上动作，没有的话眼睛瞟一眼预览区，看看最终的绘图效果。整个过程都不需要动一下鼠标，比 cmd、notepad、gsview 之类可高效多了。</p>
<h2 id="tips-or-bugs">Tips Or Bugs</h2>
<ol style="list-style-type: decimal">
<li>要使用 SumatraPDF 查看 PS 文件，必须先安装较新版本的 ghostscript；</li>
<li>Notepad++ 默认将文件以 UTF-8 编码保存，因而若需要在 PS 文件中添加中文，则可能会导致乱码；</li>
<li>编辑 bat 文件时应注意 dos 里是没有续行符的，一条命令必须在一行写完。不像 Linux 下的 <code>\</code> 、Fortran90 下的 <code>&amp;</code> 和 matlab 下的 <code>...</code> 续行；</li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-12-10：初稿；</li>
<li>2015-01-13：加入了与 GMT 中文相关的几个注意事项；</li>
<li>2015-01-17：NppExec 插件应勾选 “Follow $(CURRENT_DIRECTORY)” 选项；Thanks to Joe Wang；</li>
<li>2015-01-21：SumatraPDF 查看 PS 文件时依赖于 ghostscript；Thanks to Michael Song；</li>
<li>2015-10-13：SumatraPDF 可以查看含中文的 PS 文件；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> Windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 边框发虚的原因及解决办法]]></title>
      <url>http://seisman.info/blurry-frame-in-gmt.html</url>
      <content type="html"><![CDATA[<p>GMT 绘制的 PS 格式的图片一向以高精度著称。在画图的时候偶尔会遇到，PS 图片中其他地方精度都很高，唯独边框看上去有些发虚，精度比较低。</p>
<p>上次遇到这个问题的时候，因为着急画图，所以也没细想，直接把边框发虚的图用上了。今天再次遇到这个问题，认真的想了想，找到了原因所在，也找到了解决办法。</p>
<a id="more"></a>
<p>下面的脚本生成的 PS 文件，边框会存在发虚的现象：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">PS=test.ps</div><div class="line">J=X14c</div><div class="line">R=0/6/0/6</div><div class="line">B=0.5/0.5</div><div class="line"></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -Sa1c -K -O &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">1 1</div><div class="line">EOF</div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -Sb1c -K -O &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">2 2</div><div class="line">EOF</div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -Sc1c -K -O &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">3 3</div><div class="line">EOF</div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -Sd1c -K -O &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">4 4</div><div class="line">EOF</div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -Ss1c -K -O &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">5 5</div><div class="line">EOF</div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -Sh1c -K -O &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">2 3</div><div class="line">EOF</div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>代码很简单，无非就是多次调用 psxy 在不同的位置绘制不同的符号。</p>
<p>由于多次调用了 <code>psxy</code>，且每次都使用 <code>-B</code> 选项，所以在 PS 代码中实际上会多次重复绘制边框。 理论上这些边框以及刻度应该是完全重合的，但实际上却存在或多或少的偏差，进而导致最终画出的图 出现边框发虚的现象。</p>
<p>解决办法也很简单，保留第一个绘图命令中的 <code>-B</code> 选项，并删除其余命令中的 <code>-B</code> 选项。 这样画出来的图，文件大小要小一些，也不会再出现边框发虚的现象。</p>
<p>但，有时候会需要在 for 循环中重复调用类似的绘图命令，例如:</p>
<pre><code>gmt psxy -R$R -J$J -T -K &gt; $PS

for xxx
do
    gmt psxy filen -R$R -J$J -B$B -Sxxx -K -O &gt;&gt; $PS
done

gmt psxy -R$R -J$J -T -O &gt;&gt; $PS</code></pre>
<p>此时循环中的 <code>psxy</code> 命令，每次执行时都有 <code>-B</code> 选项，这也是最容易导致边框发虚的情况。如果 把循环里的 <code>-B</code> 选项去掉，又会导致没有边框。唯一的办法是把循环中的 <code>-B</code> 去掉，然后在循环 之前或之后的某个命令中加上 <code>-B</code> 选项绘制边框，实在没有绘图命令的话就使用 <code>psbasemap</code> 专门绘制边框。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7 下的软件安装方法及策略]]></title>
      <url>http://seisman.info/how-to-install-softwares-under-centos-7.html</url>
      <content type="html"><![CDATA[<p>2010 年开始正式接触 Linux，入门发行版是 Ubuntu 10.10，后来过渡到 Ubunu 11.04， 这其中也尝试了很多其他主流的发行版。进入实验室之后，开始用 CentOS 5，然后是 CentOS 6，现在进化到 CentOS 7。</p>
<p>使用了四年的 Linux，前三年都是在瞎折腾，浪费了不少时间，也得到了不少经验与教训。 现在可能是真的老了，已经不愿意折腾了，只希望配置好一个系统之后，就一直使用下去。</p>
<a id="more"></a>
<h2 id="为什么要写读这一篇">为什么要写/读这一篇</h2>
<p>使用 Linux 尤其是 CentOS 会遇到一些坑，或是一些有洁癖的人不能忍的事情：</p>
<ol style="list-style-type: decimal">
<li>官方源中的软件包版本太老，在功能上无法满足需求；</li>
<li>多个源的软件包存在版本冲突；</li>
<li>手动编译软件，默认会将不同文件放置在 <code>/usr/local</code> 下不同的子目录下，使得软件的更新和删除变得麻烦。</li>
<li>等等…</li>
</ol>
<p>在经历了几次重装 CentOS 之后，特总结出如下几条软件安装的方法与原则，以尽可能保证当前系统的稳定、整洁，尽可能降低系统洁癖引起的重装冲动。</p>
<p>以下所说，仅限于 CentOS7，对其他发行版，或许有借鉴意义。</p>
<h2 id="官方源">官方源</h2>
<p>CentOS 自带的四个官方源中，默认打开的有 base、updates、extras，这三个源中包含了约 9000 个软件包，是最稳定、也是最值得信赖的源。</p>
<p>因而若一个软件包在官方源内，则应通过官方源安装:</p>
<pre><code>sudo yum install PackageName</code></pre>
<h2 id="第三方源">第三方源</h2>
<p>官方源虽然包含了很多软件包，但无法满足日常需求。幸好有第三方源，可以作为官方源的补充。</p>
<p>在使用第三方源的过程中，最怕遇到这两个问题：</p>
<ol style="list-style-type: decimal">
<li>第三方源和官方源中有相同的包，导致官方源的包被第三方源替代；</li>
<li>多个第三方源中存在同一个软件包，且版本不一致，存在冲突；</li>
</ol>
<p>这两个问题经常是致命的，出现各种预料不到的后果，因而选择第三方源要遵循如下原则：</p>
<ol style="list-style-type: decimal">
<li>只选择可靠的第三方源，要确保第三方源不会替换官方源中的包；</li>
<li>使用尽量少的第三方源，以保证第三方源之间不会冲突；</li>
</ol>
<p>就 CentOS 而言，根据以上的原则，使用如下第三方源：</p>
<ol style="list-style-type: decimal">
<li>大型第三方源，已确认不会替换官方源的包，且相互之间无冲突
<ol style="list-style-type: decimal">
<li>EPEL：包含 6500 多个软件，科研必备</li>
<li>ELRepo：包含几十个各种硬件的驱动程序</li>
<li>Nux Dextop：多媒体相关的软件包（与 EPEL 的个别软件相冲突，可忽略）</li>
</ol></li>
<li>有些小型第三方源，仅包含了几个软件，确认与官方源和 EPEL 源不会冲突，也可以添加
<ol style="list-style-type: decimal">
<li>Google Chrome：包含了 Google Chrome，不会与官方源和 EPEL 源冲突；</li>
<li>Adobe：仅包含 flash 插件，已确认不会冲突；</li>
<li>dropbox：仅包含 dropbox 一个软件，已确认不会冲突；</li>
</ol></li>
</ol>
<p>因而，若一个软件包位于 EPEL、ELRepo 中，或一些小型的第三方源中，则添加该第三方源，并用 <code>yum</code> 命令安装:</p>
<pre><code>sudo yum install PackageName</code></pre>
<h2 id="官方-rpm-包">官方 rpm 包</h2>
<p>大部分非开源的软件，在 CentOS 官方源或 EPEL 中是没有的。有些软件的官方网站会提供官方 rpm 包。此时可以从官方网站下载与当前系统对应的 rpm 包，直接用如下命令安装:</p>
<pre><code>sudo rpm -i PackageName.rpm</code></pre>
<p>比如，WPS for Linux 就是其中一个。在安装的过程中 rpm 命令会自动检查依赖关系，若该软件所依赖的包在官方源和 EPEL 源中可以找到，则自动安装。</p>
<p>直接安装 rpm 包的做法相当省事，但该软件不能由 yum 更新，稍稍麻烦一点。有些软件，比如前面提到的 Google、Dropbox 和 Adobe 其实也可以通过这种方法安装，在安装的同时会给系统添加源，对于这类软件依然可以很方便的更新与删除。</p>
<h2 id="解压即用">解压即用</h2>
<p>有些软件，官方提供了压缩包，解压之后即可直接运行其中的二进制文件，比如很多 Java 写的软件。这类软件没有给源代码，而是给了可以在当前平台下直接执行的二进制文件。大多数非开源的商业软件都采取这种办法。</p>
<ol style="list-style-type: decimal">
<li>比如 sublime_text、pycharm、mendeley、TauP、sac 等，直接解压，然后将解压后的文件夹复制到 <code>/opt</code> 目录下，然后将该软件的 bin 目录加入到 PATH 中即可。</li>
<li>比如 Mathematics、Matlab、intel studio，软件包中提供安装脚本，执行该脚本即可安装；</li>
</ol>
<p>Linux 下的习惯是，商业软件或第三方软件都安装到 <code>/opt</code> 目录下，这也是大多数商业软件包的默认安装路径，尽量遵循该习惯。</p>
<h2 id="第三方-rpm-包">第三方 rpm 包</h2>
<p>有些软件，CentOS 源和 EPEL 源中找不到，官方又没有提供 rpm 包，但是其他第三方源提供了 rpm 包。分情况讨论：</p>
<ul>
<li>若该第三方源只包含了很少量的包，且确定这些包与官方源以及其他已使用的第三方源不冲突，则可以添加该第三方源。</li>
<li>若该第三方源包含了很多软件，很可能与官方源或 EPEL 源有冲突，则不添加该源
<ul>
<li>若该软件包没有复杂的依赖关系，则直接安装该源中的 rpm 包；</li>
<li>若该软件包依赖于该第三方源中的其他包，则放弃，寻找其他方法；</li>
</ul></li>
</ul>
<h2 id="第三方包管理器">第三方包管理器</h2>
<p>不同的发行版使用不同的软件包管理器，CentOS 使用 yum，Ubuntu 使用 apt-get。近些年又出现了一些与发行版无关的第三方包管理器，比如 Linuxbrew、Gentoo Prefix、pkgsrc。</p>
<h3 id="linuxbrew">Linuxbrew</h3>
<p>Linuxbrew 是由 OS X 平台下非常流行的 Homebrew 移植到 Linux 下的。Linuxbrew 可以作为系统自带的包管理器的一个补充。其特色在于：</p>
<ul>
<li>所有软件都安装在 <code>${HOME}/.linuxbrew</code> 目录下；</li>
<li>软件的版本相对很新；</li>
<li>install、uninstall、info、list、update、upgrade 等功能</li>
<li>若库中没有需要的软件包，可以很简单地自己创建 formulae</li>
</ul>
<p>试用了一下，一个比较坑的地方是，linuxbrew 会自己内部解决依赖问题。比如，我试着通过 linuxbrew 安装 terminator，然后发现 terminator 依赖于 python，尽管系统已经安装了 python，linuxbrew 还是会安装一份 python，又由于 python 依赖于更多的东西，导致又安装了更多软件包在 home 下。而且，linuxbrew 是从源码编译软件的，所以相对来说速度较慢。</p>
<h2 id="编译源码">编译源码</h2>
<p>大部分软件用前面的几种方法应该都能安装上了。如果没安装上，那就得问问自己，真的需要安装这个软件么。如果不是非常必要的话就不要安装啦。如果是必须的软件，那就必须要手动编译了。</p>
<p>常见的源码编译，一般也就是如下几步。当然，具体情况具体对待:</p>
<pre><code>tar -xvf xxxx.tgz
./configure --prefix=/opt/xxxx
make
sudo make install</code></pre>
<p>一般来说，这类软件的默认安装目录都是 <code>/usr/local</code> ，最终文件会被分别放在 <code>/usr/local</code> 的 bin、lib、share、man 目录下。</p>
<p>我个人非常不喜欢这种方式，因为作为一个通过源码编译的软件来说，意味着编译者 要完全负起管理该软件的义务，这样的放置方式会来更新或卸载软件带来很多麻烦。 所以我总是会在 configure 的时候加上 prefix 手动指定安装路径。要卸载该软件就直接删除 /opt 下对应的目录，要更新的话，也可以先删除，再重新编译一遍。这样做稍微麻烦的一点是， 需要手动将该软件的 bin 目录加入到 PATH 中，还有可能需要修改 <code>LD_LIBRARY_PATH</code>。 但是一般来说，需要编译源码的软件很少，所以不会造成太大的麻烦。</p>
<h2 id="编译代码">编译代码</h2>
<p>好吧，其实我不知道该怎么起标题了。。</p>
<p>前一节 “编译源码” 主要针对的是一些大型软件包，这一节 “编译代码” 指的是对一些 专业性很强的小代码包的处理方式。比如有些软件包编译之后实际需要的只是一个 二进制文件，这个时候就没有必要安装到 <code>/opt</code> 了，合适的方式是在自己的 HOME 下 建立 bin 目录，并将其路径加入到 <code>.bashrc</code> 中，然后将编译生成的二进制文件复制 到该目录下即可:</p>
<pre><code>mkdir ${HOME}/bin
echo &#39;export PATH=${HOME}/bin:$PATH&#39;&gt;&gt; ~/.bashrc</code></pre>
<p>比如我的 <code>${HOME}/bin</code> 目录下有如下文件：</p>
<ul>
<li><code>distaz</code> ：给出地球上两点经纬度，计算震中距和方位角</li>
<li><code>pssac</code> ：在 GMT 中绘制 SAC 文件</li>
<li><code>rdseed</code> ：SEED 格式转 SAC 格式</li>
<li><code>win2sac_32</code> 、 <code>catwin32</code> ：Hi-net 网站提供的用于处理 Hi-net 数据的程序</li>
<li><code>st</code> ：sublime_text 被安装到 <code>/opt</code> 目录下，在此建立一个软链接，方便在命令行调用 sublime text</li>
<li><code>wlt.pl</code> ：校内用于登陆网络通的脚本，在命令行修改网络端口，好 happy</li>
<li><code>fk</code> 、 <code>fk.pl</code> 、 <code>syn</code> 、 <code>trav</code> ：Prof. Lupei Zhu 的用于计算合成地震图的程序，源代码有不少，实际需要用的也就这三个可执行文件和一个 perl 脚本。</li>
<li><code>matlab</code> ：指向 matlab 的一个软连接；</li>
</ul>
<p>不要随便什么二进制文件都往 bin 里放，这里只应放一些常用的命令或很通用的工具。</p>
<h2 id="自成系统的软件">自成系统的软件</h2>
<p>有一类软件，其拥有众多模块或包，为了管理这众多的模块，就需要拥有一个自己的模块 / 包管理器。这其中以 TeX、Perl 和 Python 为代表。对于这一类软件，其众多的模块是最大的优势，也是最值得利用的资源，因而我通常会选择手动安装它们，原因如下：</p>
<ul>
<li>系统的源中不可能包含该软件的所有模块；</li>
<li>系统的源中该软件的模块的更新要远远滞后于最新版本；</li>
</ul>
<p>当然，即便是使用系统自带的版本，也依然可以用该软件自带的包管理器来安装模块。但将导致：</p>
<ul>
<li>部分模块用系统的 yum 管理，部分模块用软件自带的包管理器管理；</li>
<li>yum 安装的模块一般版本较老，软件的包管理器要安装的大多是最新版本；</li>
</ul>
<p>这一方面会导致模块管理的混乱，另一方面用软件自带的包管理其安装模块时，可能会依赖于其他模块的最新版本，若该模块是通过系统 yum 安装的较旧的版本，则可能导致模块的安装失败。</p>
<p>因而，对于这类软件，一般单独安装，并用各自的包管理器管理模块：</p>
<ul>
<li>TeXLive：通过 TeXLive iso 镜像文件安装，使用其自带的 tlmgr 管理包</li>
<li>Perl：通过 plenv 安装最新版本的 Perl，使用 plenv 自带的 cpanm 安装模块</li>
<li>Python：通过 pyenv 安装最新版本的 Python，使用 Python 自带的 pip 安装模块</li>
</ul>
<h2 id="例外">例外</h2>
<p>有规则总有例外。</p>
<h3 id="第三方源-1">第三方源</h3>
<p>mosquito-myrepo 是一个私人维护的源，其中包含了中文输入法、QQ、飞信、为知笔记、有道词典、百度云以及若干音频、视频播放器。我对这个源的态度是又爱又恨，其提供了很多中国人需要的软件，但因为其依赖于除 EPEL 外的其他第三方软件源，进而可能导致包冲突。所以对该源的使用，要保持谨慎。</p>
<h2 id="总结">总结</h2>
<p>简单总结一下:</p>
<ol style="list-style-type: decimal">
<li>为系统添加 EPEL 源、Nux Dextop、ELRepo 源和个别其他小型第三方源</li>
<li>能够从源中安装的就从源中安装</li>
<li>不能从源中安装的尽量找 rpm 包安装</li>
<li>找不到 rpm 包的就试试 linuxbrew</li>
<li>能不手动编译的就不要手动编译</li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ol style="list-style-type: decimal">
<li>2014-11-23：初稿；</li>
<li>2014-12-01：第三方源中加入 ELRepo 源；</li>
<li>2015-07-14：第三方源中加入 Nux Dextop；</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[利用 TauP 为 SAC 文件标记理论到时]]></title>
      <url>http://seisman.info/mark-travel-time-using-taup.html</url>
      <content type="html"><![CDATA[<p>TauP 的 <code>taup_time</code> 命令可以计算各震相的理论走时，但是不能帮我们把到时信息 标记到 SAC 文件中，因而就需要写脚本处理 <code>taup_time</code> 的输出，并修改 SAC 头段。</p>
<p><code>taup_setsac</code> 帮我们完成了这一点，可以直接计算理论到时并将到时信息写入到 SAC 文件中。</p>
<a id="more"></a>
<p>其用法很简单，示例如下:</p>
<pre><code>taup_setsac -mod prem -ph P-0,S-1,PcP-8,ScS-9 -evdpkm *.U</code></pre>
<p>其中：</p>
<ul>
<li><code>-mod prem</code> ：指定地球模型为 PREM 模型；</li>
<li><code>-ph P-0,S-1,PcP-8,ScS-9</code>：将 P 波到时标记到 T0 中，S 到时标记到 T1 中，PcP 标记到 T8，ScS 标记到 T9。</li>
<li><code>-evdpkm</code>：由于历史的原因，该命令默认 SAC 文件中的震源深度单位为米，而现在的 SAC 文件中的震源深度单位为千米。该选项设置深度的单位为 <code>km</code></li>
<li><code>*.U</code> : 需要标记理论到时的 SAC 文件</li>
</ul>
<p>该命令在将震相走时标记到 Tn 的同时，还会修改对应的 KTn 和 USERn，其中 KTn 中保存震相名，USERn 中保存震相的射线参数（单位为秒每弧度）。</p>
<p>需要注意的是，执行命令时经常会忘记 <code>-evdpkm</code> 选项，此时该命令会给出警告。 需要注意，一定不要按 <code>Ctrl+C</code> 终止此次命令。因为 <code>taup_setsac</code> 需要读入 并修改 SAC 文件，然后将 SAC 文件写回磁盘覆盖原文件，用 <code>Ctrl+C</code> 终止命令， 会导致文件写回磁盘失败，进而导致部分 SAC 文件损坏。正确的做法是不要理会这些警告， 待程序执行完毕之后再加上 <code>-evdpkm</code> 选项重新执行。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 走时 </tag>
            
            <tag> TauP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[利用 TauP 计算射线穿透点]]></title>
      <url>http://seisman.info/calculate-pierce-points-using-taup.html</url>
      <content type="html"><![CDATA[<p><code>taup_pierce</code> 是 TauP 提供的一个命令行工具，用于计算各种震相在不同深度的穿透点信息。 本文通过几个例子介绍一个 <code>taup_pierce</code> 的使用方法。</p>
<a id="more"></a>
<p>下面的所有例子使用如下参数：</p>
<ul>
<li>地球模型：PREM 模型</li>
<li>震源深度：200 km</li>
<li>地震位置为（0,0）</li>
<li>台站位置为（15,15）</li>
<li>震中距为 21.025 度</li>
<li>方位角为 44.199；</li>
<li>反方位角为 226.172</li>
</ul>
<p>在已知如上参数的前提下，计算内核边界的反射波 PKiKP 震相在不同深度的穿透点信息；</p>
<h2 id="震相在不同深度穿透对应的震中距">震相在不同深度穿透对应的震中距</h2>
<p>本例中使用了地震深度和震中距信息，其输出有三列，分别为不同深度处的 <code>震中距</code> 、 <code>深度</code> 和 <code>震相走时</code>， 这里的深度是地球模型的主要间断面，比如常见到的 410 间断、660 间断、CMB（2891）和 ICB（5150）。</p>
<pre><code>$ taup_pierce -ph PKiKP -mod prem -h 200 -deg 21.024
&gt; PKiKP at 971.23 seconds at 21.02 degrees for a 200.0 km deep source in the prem model with rayParam 0.469 s/deg.
    0.00   200.0     0.0
    0.01   220.0     2.5
    0.07   400.0    23.1
    0.19   670.0    50.8
    2.39  2891.0   230.0
   10.48  5149.5   472.7
   18.57  2891.0   715.5
   20.77   670.0   894.7
   20.89   400.0   922.3
   20.96   220.0   942.9
   20.96   200.0   945.4
   21.02    24.4   967.3
   21.02    15.0   968.6
   21.02     0.0   971.2</code></pre>
<p>从输出中可以看到，PKiKP 震相在 2.39 度处穿过核幔边界进入外核，在 10.48 度处于内核边界处反射，并于 18.57 度时再次穿过核幔边界回到地幔。</p>
<h2 id="震相在不同深度处的穿透点位置">震相在不同深度处的穿透点位置</h2>
<p>有时候不仅仅想要知道震相在某个深度穿透所走过的距离，还想精确的知道是在哪个位置穿透点的。</p>
<p>本例使用事件和台站的经纬度信息，输出为 <code>震中距</code> 、 <code>深度</code> 、 <code>走时</code> 以及 穿透点的 <code>纬度</code> 和 <code>经度</code> 。</p>
<pre><code>$ taup_pierce -ph PKiKP -mod prem -h 200 -evt 0 0 -sta 15 15
&gt; PKiKP at 971.26 seconds at 21.09 degrees for a 200.0 km deep source in the prem model with rayParam 0.470 s/deg.
    0.00   200.0     0.0      0.00      0.00
    0.01   220.0     2.5      0.00      0.00
    0.07   400.0    23.1      0.05      0.05
    0.19   670.0    50.8      0.14      0.13
    2.40  2891.0   230.0      1.72      1.67
   10.51  5149.5   472.7      7.54      7.35
   18.63  2891.0   715.5     13.29     13.18
   20.84   670.0   894.7     14.82     14.81
   20.96   400.0   922.3     14.91     14.90
   21.02   220.0   943.0     14.95     14.95
   21.03   200.0   945.5     14.96     14.95
   21.08    24.4   967.3     15.00     15.00
   21.09    15.0   968.7     15.00     15.00
   21.09     0.0   971.3     15.00     15.00</code></pre>
<p>从输出可以看到，PKiKP 震相在 CMB 的入射点位于 (1.67,1.72) 处，出射点位于 (13.18, 13.29)处，在 ICB 的反射点位于 (7.35, 7.54) 处。</p>
<p>还可以用事件位置、震中距和方位角得到同样的结果:</p>
<pre><code>taup_pierce -ph PKiKP -mod prem -h 200 -evt 0 0 -deg 21.025 -az 44.199</code></pre>
<p>或者用台站位置、震中距、反方位角得到同样的结果:</p>
<pre><code>taup_pierce -ph PKiKP -mod prem -h 200 -sta 15 15 -deg 21.025 -baz 226.172</code></pre>
<h2 id="获取反射点">获取反射点</h2>
<p>穿透点分为两种，一种是反射点，另一种是真正意义上的穿透点。比如 PKiKP 震相在 ICB 上是反射点，在 CMB 上只能称为穿透点。</p>
<p>反射点又分为两种，bottom turning points 和 underside reflection points，可以形象的表示为 <code>v</code> 和 <code>^</code> 。</p>
<p>获取 bottom turing points:</p>
<pre><code>$ taup_pierce -ph PKiKP -mod prem -h 200 -evt 0 0 -sta 15 15 -turn
&gt; PKiKP at 971.26 seconds at 21.09 degrees for a 200.0 km deep source in the prem model with rayParam 0.470 s/deg.
   10.51  5149.5   472.7      7.54      7.35</code></pre>
<p>获取 underside reflection points（这里以 sScS 为例）:</p>
<pre><code>$ taup_pierce -ph sScS -mod prem -h 200 -evt 0 0 -sta 15 15 -under
&gt; sScS at  1020.00 seconds at    21.09 degrees for a    200.0 km deep source in the prem model with rayParam    3.495 s/deg.
    0.26     0.0    46.9      0.18      0.18
   21.09     0.0  1020.0     15.00     15.00</code></pre>
<p>当然也可以用 <code>-rev</code> 选项获取所有反射点。</p>
<h2 id="获取特定深度的穿透点位置">获取特定深度的穿透点位置</h2>
<p>默认只输出地球模型主要间断面处的穿透点信息，有些时候会需要震相在特定深度处的穿透点信息，比如深度为 5000km 处:</p>
<pre><code>$ taup_pierce -ph PKiKP -mod prem -h 200 -evt 0 0 -sta 15 15 -pierce 5000
&gt; PKiKP at   971.26 seconds at    21.09 degrees for a    200.0 km deep source in the prem model with rayParam    0.470 s/deg.
    0.00   200.0     0.0      0.00      0.00
    0.01   220.0     2.5      0.00      0.00
    0.07   400.0    23.1      0.05      0.05
    0.19   670.0    50.8      0.14      0.13
    2.40  2891.0   230.0      1.72      1.67
    9.06  5000.0   457.9      6.50      6.32
   10.51  5149.5   472.7      7.54      7.35
   11.97  5000.0   487.6      8.58      8.38
   18.63  2891.0   715.5     13.29     13.18
   20.84   670.0   894.7     14.82     14.81
   20.96   400.0   922.3     14.91     14.90
   21.02   220.0   943.0     14.95     14.95
   21.03   200.0   945.5     14.96     14.95
   21.08    24.4   967.3     15.00     15.00
   21.09    15.0   968.7     15.00     15.00
   21.09     0.0   971.3     15.00     15.00</code></pre>
<p>在输出中多了两个 5000km 处的穿透点信息，有时候只想要这个深度的信息，而不需要其他深度的穿透点信息，此时可以使用 <code>-nodiscon</code> 选项:</p>
<pre><code>$ taup_pierce -ph PKiKP -mod prem -h 200 -evt 0 0 -sta 15 15 -pierce 5000 -nodiscon
&gt; PKiKP at   971.26 seconds at    21.09 degrees for a    200.0 km deep source in the prem model with rayParam    0.470 s/deg.
    9.06  5000.0   457.9      6.50      6.32
   11.97  5000.0   487.6      8.58      8.38</code></pre>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TauP </tag>
            
            <tag> 射线 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TauP 的安装]]></title>
      <url>http://seisman.info/install-taup.html</url>
      <content type="html"><![CDATA[<p>TauP 是用 Java 写的一个用来计算震相走时的软件。</p>
<p>官方主页: <a href="http://www.seis.sc.edu/taup/index.html" class="uri" target="_blank" rel="external">http://www.seis.sc.edu/taup/index.html</a></p>
<a id="more"></a>
<ol style="list-style-type: decimal">
<li><p>确认 Java 运行环境已安装</p>
<p>在终端中键入 <code>java -version</code>，若显示版本信息，则表示 Java 运行环境已安装:</p>
<pre><code>$ java -version
java version &quot;1.7.0_65&quot;
OpenJDK Runtime Environment (rhel-2.5.1.2.el7_0-x86_64 u65-b17)
OpenJDK 64-Bit Server VM (build 24.65-b04, mixed mode)</code></pre>
<p>否则则需要先安装 Java 运行环境，在 CentOS 7 下用如下命令:</p>
<pre><code>$ sudo yum install java</code></pre></li>
<li><p>下载 TauP:</p>
<pre><code>wget http://www.seis.sc.edu/downloads/TauP/TauP-2.4.1.tgz</code></pre></li>
<li><p>解压:</p>
<pre><code>tar -xvf TauP-2.4.1.tgz</code></pre></li>
<li><p>安装:</p>
<pre><code>sudo mv TauP-2.4.1 /opt</code></pre></li>
<li><p>修改环境变量:</p>
<pre><code>echo &#39;export TAUPHOME=/opt/TauP-2.4.1&#39; &gt;&gt; ~/.bashrc
echo &#39;export PATH=${TAUPHOME}/bin:${PATH}&#39; &gt;&gt; ~/.bashrc
source ~/.bashrc</code></pre></li>
<li><p>执行测试</p>
<p>终端键入 <code>taup</code> 若出现 TauP 图形界面则表示安装成功。</p></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> 走时 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[rdseed 的安装]]></title>
      <url>http://seisman.info/install-rdseed.html</url>
      <content type="html"><![CDATA[<p>rdseed 用于将 SEED 格式的数据转换为 SAC 格式。</p>
<a id="more"></a>
<h2 id="软件申请与下载">软件申请与下载</h2>
<p>申请地址： <a href="http://www.iris.edu/forms/rdseed_request.htm" class="uri" target="_blank" rel="external">http://www.iris.edu/forms/rdseed_request.htm</a></p>
<p>简单填写申请信息后，无需等待即可直接下载，目前的最新版本为 <code>rdseedv5.3.1.tar.gz</code> 。</p>
<h2 id="解压">解压</h2>
<pre><code>$ tar -zxvf rdseedv5.3.1.tar.gz
$ cd rdseedv5.3.1</code></pre>
<h2 id="安装">安装</h2>
<p>rdseed 提供了源代码，也提供了在不同平台下编译好的二进制文件。</p>
<ul>
<li>如果是 Linux 64 位系统，则使用 <code>rdseed.rh6.linux_64</code> ；</li>
<li>如果是 Mac 64 位系统，则使用 <code>rdseed.mac.x86_64</code> ；</li>
<li>如果是运行在 Sun/Sparc 平台上的 Solaris，则使用 <code>rdseed.solaris.sparc_64</code> ；</li>
<li>如果是运行在 Sun/Intel 平台上的 Solaris，则使用 <code>rdseed.solaris.x86_64</code>；</li>
<li>如果是在 32 位 Windows 7 下运行 Cygwin，则使用 <code>rdseed.windows.cygwin_32.exe</code> ；</li>
</ul>
<p>以 64 位 Linux 为例，应选择二进制文件 <code>rdseed.rh6.linux_64</code>，直接执行:</p>
<pre><code>$ ./rdseed.rh6.linux_64</code></pre>
<p>若输出如下:</p>
<pre><code>&lt;&lt;IRIS SEED Reader, Release 5.3.1&gt;&gt;
Input  File (/dev/nrst0) or &#39;Quit&#39; to Exit:</code></pre>
<p>则表示该二进制在当前系统可以直接使用，将其重命名，并放置到 PATH 中即可:</p>
<pre><code>mv rdseed.rh6.linux_64 ~/bin/rdseed</code></pre>
<p>若你的 Linux 系统为 32 位，或者其他一些特殊的原因，该二进制可能无法执行，则需要自己手动编译。</p>
<h2 id="编译">编译</h2>
<p>若二进制文件可以直接使用，则可以忽略这一步。</p>
<ol style="list-style-type: decimal">
<li><code>make clean</code></li>
<li><p>修改 Makefile</p>
<p>Makefile 中默认的 CFLAGS 为 <code>-O -m64 -g</code>，若为 32 位系统，则应设置 CFLAGS 的值 <code>-O -m32 -g</code> 。</p></li>
<li><code>make</code></li>
<li><p>此时生成了可执行文件 <code>rdseed</code> ，将其复制到 PATH 中即可:</p>
<pre><code>mv rdseed ~/bin/</code></pre></li>
</ol>
<p>注意：5.3.1 版本目前存在 bug，使用较新的 gcc 编译器虽然可以编译通过，但无法 正确解压 SEED 数据，因而不建议自己手动编译。</p>
<p>CentOS7 下，gcc 编译器的版本为 4.8.3，编译通过，但无法解压数据。</p>
<p>如果一定需要手动编译的话，可以将 Makefile 以及各子目录下的 makefile 中的 CC 设置成 icc， 即使用 Intel C 编译器。</p>
<h2 id="jrdseed">Jrdseed</h2>
<p>rdseed 还有一个 Java 版本，即 <a href="http://www.iris.edu/forms/jrdseed_request.htm" target="_blank" rel="external">Jrdseed</a>。</p>
<p>由于是 Java 写的，所以具有很好的跨平台特性，直接下载解压即可使用。</p>
<p>执行方法为:</p>
<pre><code>java -jar JrdseedVer0.10.1.jar</code></pre>
<p>用法与 rdseed 类似。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 格式转换 </tag>
            
            <tag> SAC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7 下安装 WPS Office]]></title>
      <url>http://seisman.info/wps-office-for-centos7.html</url>
      <content type="html"><![CDATA[<p>在 Microsoft Office 盛行的今日，Linux 下一直没有一个能与之完美兼容的 Office 套件。 大多数发行版默认安装的 OpenOffice 或 LibreOffice，也只是刚刚达到能用的地步， 界面以及功能的差异还是很明显的。</p>
<p>或许 WPS Office for Linux 是个不错的选择。</p>
<ul>
<li>中文官网： <a href="http://linux.wps.cn/" class="uri" target="_blank" rel="external">http://linux.wps.cn/</a></li>
<li>英文官网： <a href="http://www.wps.com/linux/" class="uri" target="_blank" rel="external">http://www.wps.com/linux/</a></li>
</ul>
<a id="more"></a>
<p>目前 WPS Office for Linux 尚处在测试阶段。根据惯例，alpha 版为内测版本，beta 版为公测版本。这里选择 Alpha 16。</p>
<ul>
<li>安装包：<a href="http://kdl.cc.ksosoft.com/wps-community/download/a16/wps-office-9.1.0.4909-1.a16p1.i686.rpm" target="_blank" rel="external">wps-office-9.1.0.4909-1.a16p1.i686.rpm</a></li>
<li>字体包：<a href="http://kdl.cc.ksosoft.com/wps-community/download/a15/wps-office-fonts-1.0-1.noarch.rpm" target="_blank" rel="external">wps-office-fonts-1.0-1.noarch.rpm</a></li>
</ul>
<p>WPS Office 提供的 rpm 包为 32 位版本，对于 64 位系统需要安装相应的 32 位依赖包方可使用，幸好 <code>yum</code> 可以自动判断并解决包的依赖关系，所以安装很简单。</p>
<p>首先 <code>cd</code> 到下载的 RPM 包所在的文件夹下，然后执行如下 <code>yum</code> 命令。注意，这里用的 是 <code>yum</code> 而不是 <code>rpm -i</code> ，因为 <code>rpm</code> 似乎无法自动解决 32 位库的依赖问题。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo yum install wps-office-9.1.0.4909-1.a16p1.i686.rpm</div><div class="line">$ sudo yum install wps-office-fonts-1.0-1.noarch.rpm</div></pre></td></tr></table></figure>
<p>安装完成后，即可在 “Application” 中找到相关项。</p>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="http://community.wps.cn/download/" target="_blank" rel="external">WPS 下载地址</a></li>
<li><a href="http://community.wps.cn/wiki/%E9%A6%96%E9%A1%B5" target="_blank" rel="external">WPS 社区 Wiki</a></li>
<li><a href="http://bbs.wps.cn/thread-22371203-1-1.html" target="_blank" rel="external">原生对话框问题</a></li>
<li><a href="http://community.wps.cn/wiki/%E9%83%A8%E5%88%86%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%98%BE%E7%A4%BA%E6%94%AF%E6%8C%81" target="_blank" rel="external">部分数学公式显示支持</a></li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-10-01：初稿；</li>
<li>2014-10-23：更新至 Alpha16；此版本中不再有 <code>mui</code> 语言包；</li>
<li>2014-11-03：更新至 Alpha16 Patch1；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7 安装 fcitx 中文输入法]]></title>
      <url>http://seisman.info/fcitx-for-centos-7.html</url>
      <content type="html"><![CDATA[<p><strong>本文不再更新</strong></p>
<p>目前不确定是否可行，具体参考： <a href="https://github.com/1dot75cm/myrepo" class="uri" target="_blank" rel="external">https://github.com/1dot75cm/myrepo</a></p>
<p>前面 <a href="/install-yong-chinese-input-method-under-centos-7.html">CentOS7.0 下安装小小输入法</a> 一文中已经介绍了如何在 CentOS7 下安装小小输入法来输入中文，实际用起来还是有不少不如意的地方。</p>
<p>今天恰好发现了 CentOS 7 下安装 fcitx 输入法的简单方法，如下。</p>
<a id="more"></a>
<h2 id="加入-epel-源">加入 EPEL 源</h2>
<p>EPEL7 几乎是 CentOS 必备的源:</p>
<pre><code>$ sudo yum install epel-release</code></pre>
<h2 id="添加-mosquito-myrepo-源">添加 mosquito-myrepo 源</h2>
<p>mosquito-myrepo 是一个私人制作的第三方源，其中包含了 fcitx 输入法。</p>
<ul>
<li>项目地址： <a href="https://github.com/1dot75cm/myrepo" class="uri" target="_blank" rel="external">https://github.com/1dot75cm/myrepo</a></li>
<li><p>支持的发行版： Fedora 19/20/21/rawhide 以及 RHEL/CentOS 7</p>
<pre><code>$ sudo yum-config-manager --add-repo=https://copr.fedoraproject.org/coprs/mosquito/myrepo/repo/epel-7/mosquito-myrepo-epel-7.repo</code></pre></li>
</ul>
<h2 id="安装输入法">安装输入法</h2>
<p>可以选择下面的各种输入法中的某一个或多个:</p>
<pre><code>$ yum install fcitx-googlepinyin fcitx-cloudpinyin # 谷歌拼音输入法
$ yum install fcitx-rime fcitx-cloudpinyin # 中州韵输入法
$ yum install fcitx-libpinyin fcitx-cloudpinyin # libpinyin 输入法
$ yum install fcitx-sunpinyin sunpinyin-data fcitx-cloudpinyin # sunpinyin 输入法</code></pre>
<h2 id="清理工作">清理工作</h2>
<p>mosquito-myrepo 在不断地支持更多的软件，这也进一步造成该 repo 中的软件与 base、EPEL 中的软件存在版本冲突，在该 repo 的项目主页中建议安装 yum 的优先级插件 <code>yum-plugin-priorities</code>，这在一定程度上会缓解版本冲突问题，但无法从根本上避免。</p>
<p>鉴于多个 repo 的版本冲突会造成一些麻烦，最好的办法还是在安装完需要的软件之后就禁用该 repo，需要的时候再启用。</p>
<p>编辑 <code>/etc/yum.repos.d/mosquito-myrepo-epel-7.repo</code> ，将其中的 <code>enable=1</code> 改成 <code>enable=0</code> 即可。</p>
<h2 id="参考">参考</h2>
<ul>
<li><a href="https://copr.fedoraproject.org/coprs/mosquito/myrepo/" class="uri" target="_blank" rel="external">https://copr.fedoraproject.org/coprs/mosquito/myrepo/</a></li>
</ul>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-09-20：初稿；</li>
<li>2014-09-29：安装完成之后建议禁用该 repo 以避免任何可能的版本冲突；</li>
<li>2014-12-27：更新 sogou 的配置；</li>
<li>2015-03-09：由于搜狗输入法是私有软件，违反了 copr 的相关规定，因而目前该源中已不再包含搜狗输入法。故删除本文中搜狗输入法相关部分；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 中文 </tag>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux 下合并 PDF]]></title>
      <url>http://seisman.info/merge-multiple-pdfs.html</url>
      <content type="html"><![CDATA[<p>经常需要将多个 PDF 合并为一个文件，这里收集了网上给出的一些方案，并总结一下。</p>
<p><strong>推荐使用cpdf</strong></p>
<a id="more"></a>
<h2 id="cpdf">cpdf</h2>
<p><a href="http://community.coherentpdf.com/" target="_blank" rel="external">cpdf</a> 全称是 Coherent PDF Command Line Tools，是一个强大的 PDF 处理工具。PDF 合并只是它的一个功能之一。</p>
<pre><code>cpdf input1.pdf input2.pdf -o output.pdf</code></pre>
<h2 id="pdfunite">pdfunite</h2>
<p><code>pdfunite</code> 是 <a href="http://poppler.freedesktop.org" target="_blank" rel="external">Poppler</a> 提供的一个工具，一般系统都已经安装了 Poppler，所以这个工具在 Linux 下是很常见的。</p>
<pre><code>pdfunite input1.pdf input2.pdf input3.pdf output.pdf</code></pre>
<p>该命令用法简单，没有多余的选项，需要注意的是该命令的最后一个 PDF 文件为输出文件名。</p>
<h2 id="pdfjam">pdfjam</h2>
<p>如果你安装了 TeXLive，并且安装了 <a href="http://www.ctan.org/tex-archive/macros/latex/contrib/pdfpages/" target="_blank" rel="external">pdfpage</a> 包，则其中包含了 <code>pdfjam</code> 工具。</p>
<pre><code>pdfjam input1.pdf input2.pdf input3.pdf -o output.pdf</code></pre>
<p>该命令的选项很多，可以通过 <code>pdfjam --help</code> 查看。</p>
<p><code>pdfjoin</code> 是 <code>pdfjam</code> 的一个封装，也可以直接使用:</p>
<pre><code>pdfjoin a.pdf b.pdf</code></pre>
<h2 id="pdftk">pdftk</h2>
<p><a href="https://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/" target="_blank" rel="external">pdftk</a> 是专门用于处理 PDF 文档的一套工具。在大多数发行版中都可以直接安装使用。</p>
<pre><code>pdftk input1.pdf input2.pdf input3.pdf cat output output.pdf</code></pre>
<p>pdftk 的选项很多，用法复杂，可以参考 <a href="/introduction-to-pdftk.html">PDF 合并和分割工具—PDFtk</a> 。</p>
<h2 id="gs">gs</h2>
<p><a href="http://www.ghostscript.com" target="_blank" rel="external">GhostScript</a> 不仅可以用于处理 PS，也可以用于处理 PDF 文档。</p>
<pre><code>gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=out.pdf in1.pdf in2.pdf

gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress -sOutputFile=out.pdf in1.pdf in2.pdf</code></pre>
<h2 id="参考">参考</h2>
<ul>
<li><a href="https://blog.dbrgn.ch/2013/8/14/merge-multiple-pdfs/" class="uri" target="_blank" rel="external">https://blog.dbrgn.ch/2013/8/14/merge-multiple-pdfs/</a></li>
<li><a href="http://stackoverflow.com/questions/2507766/" class="uri" target="_blank" rel="external">http://stackoverflow.com/questions/2507766/</a></li>
</ul>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-09-18：初稿；</li>
<li>2015-01-27：新增 cpdf；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PDF </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[将博文以 PDF 格式导出]]></title>
      <url>http://seisman.info/export-posts-as-pdf.html</url>
      <content type="html"><![CDATA[<p>在每篇博文的标题下方最右侧，有一个 PDF 的图标，点击即可下载当前博文的 PDF 版本。</p>
<p>对于每篇博文，利用 <a href="http://johnmacfarlane.net/pandoc/" target="_blank" rel="external">pandoc</a> 将 markdown 格式的 源码转换为 PDF 格式，并将其上传到七牛云中，供读者下载。</p>
<a id="more"></a>
<p>转换过程中的一些细节如下：</p>
<ul>
<li>利用 Pandoc 实现从 markdown 源码到 PDF 的转换</li>
<li>转换脚本为 <a href="https://github.com/seisman/seisman.info.posts/blob/master/makepdf.py" target="_blank" rel="external">makepdf.py</a></li>
<li>转换为 PDF 时使用了 xelatex，其中 LaTeX 模板为 <a href="https://github.com/seisman/seisman.info.posts/blob/master/seisman.latex" target="_blank" rel="external">seisman.latex</a></li>
<li>由于 markdown 文件中的图片和链接都是相对链接，因而利用 pandoc 的 filter 功能对 markdown 文件做进一步处理，filter 脚本位于 <a href="https://github.com/seisman/seisman.info.posts/blob/master/markdown-filter.py" target="_blank" rel="external">markdown-filter.py</a></li>
</ul>
<p>注意事项：</p>
<ul>
<li>生成的 PDF 仅供读者离线阅读使用，请勿用作其他用途；</li>
<li>PDF 版直接由网页版转换得到，我没有人工检查 PDF 版的效果，若有影响阅读效果的地方， 可以告诉我，我尽量保证网页版和 PDF 版同时有比较好的效果；</li>
<li>请勿批量下载本博客的 PDF，流量也是要花钱的。如果需要本博客的全部 PDF，我可以打包发给你；</li>
<li>目前设置了只能通过点击本博客的链接来下载 PDF，直接把 PDF 的链接粘贴到浏览器中下载 会被拒绝，这样做的主要原因是为了防盗链；</li>
</ul>
<p>总的来说，生成的 PDF 效果还是不错的。其中还有一些不够理想的细节，会在将来不断改进。</p>
<p>待解决的问题：</p>
<ul>
<li>目录与正文之间的分界不够明显</li>
<li>若单行代码过长，网页显示时可以使用水平滚动条，PDF 显示时则会将一行代码分两行或多行显示， 稍稍影响阅读效果；个别过长的行在显示时会超过纸张边界；</li>
<li>部分公式太麻烦，直接使用的截图，在 PDF 中效果较差</li>
<li>部分 URL 没有以链接的形式显示</li>
<li>图片不能为 GIF 格式，否则无法生成 PDF</li>
<li>无法指定 PDF 中的图片尺寸</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> PDF </tag>
            
            <tag> Pandoc </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hi-net win32tools]]></title>
      <url>http://seisman.info/hinet-win32tools.html</url>
      <content type="html"><![CDATA[<p>从 Hi-net 获取的波形数据为不常见/用的WIN32 格式，Hi-net 提供了 win32tools 来实现波形数据的基本处理和转换。</p>
<a id="more"></a>
<h2 id="下载">下载</h2>
<p>下载地址： <a href="http://www.hinet.bosai.go.jp/REGS/manual/dlDialogue.php?r=win32tools" target="_blank" rel="external">win32tools</a></p>
<p>直接解压编译即可。</p>
<h2 id="tools">Tools</h2>
<p>win32tools 中包含了一系列用于数据处理的命令。</p>
<h3 id="catwin32">catwin32</h3>
<p><code>catwin32</code> 可以合并两个或多个 WIN32 文件，一般用于将 <strong>多个一分钟</strong> 的文件合并 <strong>一个多分钟</strong> 的文件。</p>
<p>用法:</p>
<pre><code>catwin32 File_1 File_2 ... File_n [-oOutFile | -o OutFile] [-s] [-h]
      File_n        : Input WIN32 file name
                    : You may use a wild word character.
      OutFile       : Output WIN32 file name
      -s            : Sort by date
      -h            : This usage print</code></pre>
<p>示例:</p>
<pre><code>catwin32 20140830000*.cnt -o 2014083001.cnt</code></pre>
<p>上面的示例中，会将 <code>201408300000*.cnt</code> 文件合并成 <code>2014083001.cnt</code> 文件。若数据 存在缺失，比如，缺少某些分钟的数据，或者某分钟内缺失若干秒的数据，则在使用 <code>win2sac_32</code> 将 WIN32 数据转换为 SAC 格式时，会自动对缺失的数据进行补零，因而不必担心数据缺失的问题。</p>
<p>关于 <code>-s</code> 选项，需要注意一下的用法：</p>
<ul>
<li>无 <code>-s</code> 的情况下， <code>catwin32</code> 会将所有的 WIN32 文件，按照 <strong>文件在参数列表中的顺序</strong> 合并在一起。</li>
<li>有 <code>-s</code> 的情况下， <code>catwin32</code> 会检查所有 WIN32 文件的起始时间，按照 <strong>文件的起始时间的顺序</strong> 合并在一起。</li>
</ul>
<p>比如:</p>
<pre><code>catwin32 201408300001.cnt 201408300002.cnt -o 2014083001_2.cnt
catwin32 201408300002.cnt 201408300001.cnt -o 2014083001_2.cnt
catwin32 201408300002.cnt 201408300001.cnt -o 2014083001_2.cnt -s</code></pre>
<p>该例中，第一种方法是对的；第二种方法是错误的；第三种方法加上了 “-s” 选项是对的；</p>
<p>在 bash 下，形如 <code>20140830000*.cnt</code> 这样的通配符，会将当前目录下符合的所有文件按照文件名的顺序排序，并作为 catwin32 的参数，在默认的情况下，按文件名排序与按文件起始时间排序是等效的，但存在一些特殊的情况：</p>
<ol style="list-style-type: decimal">
<li>自定义了 cnt 文件的文件名，此时在 bash 下用通配符得到的文件顺序不一定是按照时间排序的；</li>
<li>python 中的 <code>glob.glob()</code> 函数，默认返回的文件顺序是乱序的，需要使用 <code>sorted()</code> 函数；</li>
</ol>
<p>因而，在确保参数列表中文件顺序正确的前提下，不需要使用 “-s” 选项；反之，则必须使用 “-s” 选项， 否则在执行 <code>win2sac_32</code> 命令时会出现 “The time is not sort.” 的错误。但，加入了 “-s” 选项后， 由于需要检查每个 cnt 文件的起始时间，并按起始时间对数据进行排序，因而会影响到数据合并的 速度，尤其是在需要合并大量 cnt 文件的时候。</p>
<h3 id="win2sac_32">win2sac_32</h3>
<p><code>win2sac_32</code>：主要用于将 WIN32 格式转换为 SAC 格式。除此之外，还可以对数据进行重采样，以二进制或 ASCII 形式输出</p>
<h4 id="用法">用法</h4>
<pre><code>win2sac_32 winfile ch_no sacfile [outdir] [-p(prmfile)]
    [-e] [-b[BIN]] [-a[ASC]] [-r(RATIO)] [-m(PMAX)]</code></pre>
<h4 id="对选项的说明">对选项的说明</h4>
<ul>
<li><code>winfile</code>：WIN32 格式的数据文件</li>
<li><code>ch_no</code>：通道号列表，多个通道号之间以逗号分隔，也可以使一个包含一系列通道号的文件名；比如 <code>4CC4</code> 或 <code>4CC4,4F73</code> 或 <code>chno.file</code> 。</li>
<li><code>sacfile</code>：SAC 输出文件的扩展名</li>
<li><code>outdir</code>：SAC 文件的输出目录。若未指定或指定为 “-”，则输出到当前目录</li>
<li><code>p</code> 选项：指定参数文件名 prmfile；若未使用该选项，则参数文件名默认为 “win.prm”。关于参数文件的格式，在下面会介绍。</li>
<li><code>e</code> 选项：设定输出 SAC 二进制文件的字节序，若不指定该选项，则输出的 SAC 二进制文件总是 big endian；若指定该选项，则输出 SAC 二进制文件的字节序由当前机器的字节序决定；</li>
<li><code>b</code> 选项：将数据以二进制形式输出，BIN 为文件扩展名，在不指定的情况下，默认为 “bin”</li>
<li><code>a</code> 选项：将数据以 ASCII 形式输出（即单列数据），ASC 为文件扩展名，在不指定的情况下，默认为 “asc”</li>
<li><code>r</code> 选项：对输出文件的数值乘以某常数 RATIO，在不指定的情况下，默认值为 1.0（？）</li>
<li><code>m</code> 选项：指定最大数据点数，默认值为 200 万；若 win32 文件中包含的数据点数超过该值，则报错。比如，一个 win32 数据中包含了所有台站一天的数据，即每个通道分别有 24*60*60*100=8640000 个点，超过默认最大点数 2000000，则此时需要使用 <code>-m</code> 选项增大最大数据点数。</li>
</ul>
<h4 id="输出文件名格式">输出文件名格式</h4>
<p>输出文件名格式为 <code>XXXX.Y.ZZZ</code> ，其中 <code>XXXX</code> 为台站代码， <code>Y</code> 为分量代码， <code>ZZZ</code> 为 BIN 或 ASC 或 sacfile 所指定的值。</p>
<h4 id="输出文件的-sac-的头段信息">输出文件的 SAC 的头段信息</h4>
<p>该命令在生成 SAC 文件的同时会将相关信息写入 SAC 头段中，具体如下：</p>
<ul>
<li>npts, b</li>
<li>leven</li>
<li>ievtyp, idep</li>
<li>nzyear, nzjday, nzhour, nzmin, nzsec, nzmsec</li>
<li>kstnm, kcmpnm, knetwk, cmpaz, cmpinc, stla, stlo, stel</li>
<li>kevnm</li>
</ul>
<p>PS：生成的 SAC 文件中头段 e 为未定义值。</p>
<h4 id="参数文件-prmfile-格式">参数文件 prmfile 格式</h4>
<p>在标准的 prmfile 中，有 16 个记录行。但 win2sac_32 程序仅使用第二行和（至？）第四行；</p>
<ol style="list-style-type: decimal">
<li>行 1：数据文件 winfile 所在目录</li>
<li>行 2：channel table 文件</li>
<li>行 3：台站组文件名</li>
<li>行 4：pick 文件所在目录</li>
<li>行 5：hypomh 程序</li>
<li>行 6：hypomh 所使用的速度结构</li>
<li>行 7：map data file</li>
<li>行 8：cut-out wave data 输出目录</li>
<li>行 9：数据格式（B4/B2/L4/L2）</li>
<li>行 10：滤波设置文件</li>
<li>行 11：打印机…</li>
<li>行 12：upper/lower 半球投影</li>
<li>行 13：NOISE, FAR…</li>
<li>行 14：hypocenter 数据所在目录</li>
<li>行 15：打印机 DPI</li>
<li>行 16：临时工作目录</li>
</ol>
<p>因而一般来说，在使用 <code>win2sac_32</code> 时需要创建文件 <code>win.prm</code>，其内容为:</p>
<pre><code>.
./01_01_20140830.euc.ch
.
.</code></pre>
<p>其中第二列为数据对应的 channel table 文件。</p>
<h4 id="示例">示例</h4>
<pre><code>win2sac_32 2000082404000101VM.cnt 4c55,4c65 sac ./sacdir -pwin.aaa.prm 1&gt;ww.tmp</code></pre>
<h3 id="dewin_32">dewin_32</h3>
<p><code>dewin_32</code> 从 WIN32 格式文件中取出指定通道的数据。</p>
<p>用法:</p>
<pre><code>usage: dewin_32 [-m] [-s samp] [-c] [-a] [-n] [-e extend] [-f filter_file] ch_no [input_file]
        -m  Win file is minutes file.
        -s  [samp] sampling number.
        -c  character output
        -a  audio format (u-law) output
        -n  not fill absent part
        -e  [extend] file extend name
        -f  [filter_file] filter paramter file
     ch_no  channel no.(in hex.) or channel no. file name
     input_file  input win file(default=stdin)</code></pre>
<p>下面解释一下几个比较重要的选项：</p>
<ul>
<li><code>input_file</code>：输入文件，为 WIN32 格式；</li>
<li><code>ch_no</code>：要提取的通道号列表，多个通道号之间以逗号分隔，也可以是一个包含一系列通道号的文件名；比如 <code>4CC4</code> 或 <code>4cc4,4f73</code> 或 <code>chno.file</code> 。</li>
<li><code>c</code> 选项：表示将数据以字符形式输出，即单列数据；</li>
<li><code>e</code> 选项：默认情况下，输出到标准输出；当指定多个通道时，标准输出会比较混乱，因而需要输出到文件中，该选项指定输出文件的扩展名；</li>
</ul>
<p>几个不重要的选项：</p>
<ul>
<li><code>a</code> 选项：表示将数据以音频格式输入（参见 <a href="http://www.wikiwand.com/en/%CE%9C-law_algorithm" target="_blank" rel="external">u-law</a>）</li>
<li><code>n</code> 选项：若数据存在缺失，默认情况下补零输出，该选项不对缺失部分补零。</li>
<li><code>m</code>、<code>s</code> 选项：不是太理解，似乎都是用于数据缺失时，应该不重要；</li>
<li><code>f</code> 选项：后接滤波参数文件，以对输出的数据进行滤波，一般用不到；</li>
</ul>
<p>示例:</p>
<pre><code>dewin_32 -e dwn -c 4CC4,5B35 -m 2003070507400101VM.cnt
dewin_32 -e dwn -c -n ch.lst &lt; 2003070507400101VMs.cnt
dewin_32 -c -n 5b35 &lt;2003070507400101VMs.cnt&gt; ww5b35.dat</code></pre>
<h3 id="其他">其他</h3>
<p>下面的一些工具应该是很少用到的：</p>
<ul>
<li><code>wadd_32</code>：合并两个 WIN32 数据，与 catwin32 有些类似，但在细节上有区别。具体不知。一般用不到。</li>
<li><code>wch_32</code> ：从 WIN32 文件中提取指定通道号的数据并写入到新的 WIN32 文件中</li>
<li><code>wck_32</code> ：似乎是用于检查 WIN32 文件的。</li>
<li><code>w32tow1</code>：WIN32 格式转换为 WIN 格式（WIN32 格式是根据 WIN 格式修改得到的）</li>
<li><code>wed_32</code> ：用于编辑 WIN32 文件</li>
<li><code>wchch_32</code> ：修改通道号</li>
</ul>
<h2 id="小结">小结</h2>
<p>在 win32tools 提供的 9 个工具中，最常用的有两个： <code>catwin32</code> 和 <code>win2sac_32</code> ，其中前者用于合并数据，后者用于格式转换。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-09-07：初稿；</li>
<li>2014-11-03：<code>catwin32</code> 命令要使用 <code>-s</code> 选项；</li>
<li>2014-11-14：加入了 “生成的 SAC 文件的头段信息” 一节；</li>
<li>2014-12-01：对 <code>-s</code> 选项的理解错误，该选项只会对文件按照起始时间排序，不会影响到数据的补零；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 格式转换 </tag>
            
            <tag> Hinet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hi-net 的仪器响应]]></title>
      <url>http://seisman.info/hinet-instrumental-response.html</url>
      <content type="html"><![CDATA[<p>前文介绍了 channel table 文件的格式以及每一列的含义，其中 7-13 列记录了 channel 的 仪器信息。由于 Hi-net 并没有像 IRIS 那样提供 RESP 或 SAC_PZ 文件，因而需要用户根据 7-13 列的信息手动推导仪器响应。</p>
<a id="more"></a>
<h2 id="警告">警告</h2>
<p>本文是在 Hi-net 官方网站内容、Hi-net 官方回复邮件内容以及个人对于仪器响应的理解的基础上完成的。</p>
<p>本人无法保证本文的内容是完全正确的，望读者带着批判的眼光阅读本文！</p>
<p>若因阅读本文内容而造成数据处理的任何偏差以及由此带来的任何后果，由用户自己承担。</p>
<h2 id="回顾">回顾</h2>
<p>先回顾一下 7-13 列的含义：</p>
<ul>
<li>[7]：Quantization bit rate of A/D conversion</li>
<li>[8]：Sensor sensitivity (in V/unit_of_input)</li>
<li>[9]：Unit of input</li>
<li>[10]：Nature period of the sensor</li>
<li>[11]：Damping constant of the sensor</li>
<li>[12]：Amplification factor applied to sensor output prior to A/D conversion (in dB)</li>
<li>[13]：LSB value of A/D conversion</li>
</ul>
<h2 id="流程">流程</h2>
<p>根据 <a href="/physical-details-of-instrumental-response.html">《仪器响应的物理细节》</a> 一文的分析，将 7-13 列按照仪器响应的过程再细分一下：</p>
<ul>
<li>输入：波场振幅（[9]）</li>
<li>输入增强：对输入波场进行放大（[12]）</li>
<li>Analog Stage：将连续的波场振幅转换为连续电压信号（[10]、[11]、[8]）</li>
<li>Analog-Digital Conversion：将连续电压信号转换为离散电压信号（[7]、[13]）</li>
<li>Digital Stage：对离散数据进行处理</li>
</ul>
<h3 id="输入">输入</h3>
<p>[9] 给出了输入波场振幅 <span class="math inline">\(A_0\)</span> 的单位，一般来说，其值为 <code>m/s</code>，即 Hi-net 是速度地震仪。</p>
<h3 id="输入增强">输入增强</h3>
<p>这一步对输入的波场振幅进行放大，[12] 给出了放大系数 <span class="math inline">\(L_{dB}\)</span>，单位为 dB。</p>
<p>根据维基百科中对 <a href="http://en.wikipedia.org/wiki/Decibel#Field_quantities" target="_blank" rel="external">场量分贝</a> 的定义可知：</p>
<p><span class="math display">\[L_{dB} = 20 \log_{10}\left(\frac{A_1}{A_0}\right)\]</span></p>
<p>因而，本步骤的输出波场振幅 <span class="math inline">\(A_1\)</span> 为</p>
<p><span class="math display">\[A_1 = A_0 10^{\frac{L_{dB}}{20}}\]</span></p>
<h3 id="analog-stage">Analog Stage</h3>
<p>在 Hi-net 的官方回复邮件中提到，Hi-net 统一使用的是 “moving coil velocity type seismometer”，此种地震仪的 transfer 函数在 Laplace 域表示为：</p>
<p><span class="math display">\[G \frac{s^2}{s^2+2 h \omega s + \omega^2}\]</span></p>
<p>其中</p>
<ul>
<li><span class="math inline">\(G\)</span>：Sensor sensitivity，即 <span class="math inline">\(G\)</span>= [8]</li>
<li><span class="math inline">\(h\)</span>：damping constant， 即 <span class="math inline">\(h\)</span>= [11]</li>
<li><span class="math inline">\(\omega\)</span>： natural angular frequency，即 <span class="math inline">\(\omega=\frac{2\pi}{[10]}\)</span></li>
</ul>
<p>从 channel table 即可计算出这三个量，代入 transfer 函数，根据 <a href="/deep-analysis-of-response.html">仪器响应实例分析</a> 中的类似步骤，即可计算出零点和极点，以及归一化因子 <span class="math inline">\(A_0\)</span>。</p>
<p>PS：对于速度场而言，可以推导得到 <span class="math inline">\(A_0 = 2*[11]\)</span></p>
<h3 id="analog-digital-conversion">Analog-Digital Conversion</h3>
<p>首先需要理解两个概念，bit rate 和 LSB value。</p>
<p>模数转换器（ADC）的作用是将连续的模拟信号（电压，单位 V）转换为离散的数字信号（单位为 counts）。如果一个 ADC 的 bit rate 为 8，则该 ADC 可以将模拟信号编码为 <span class="math inline">\(2^8=256\)</span> 个不同的离散值，从 0 至 255 或从 - 128 到 127。</p>
<p>若该 ADC 的电压测量范围为 <span class="math inline">\(\pm 20 V\)</span>，则该 ADC 可以将 40V 的电压测量范围转换为 256 种离散值，因而该 ADC 的电压分辨率为 40/256 V/counts。这一电压分辨率也称为最低有效位（LSB）电压，即 “使得输出离散信号产生一个变化所需的最小输入电压的差值”。</p>
<p>bit rate 与 LSB value 之间的关系如下：</p>
<p><span class="math display">\[\frac{V_{high}-V_{low}}{2^{bitrate}}\]</span></p>
<p>其中 <span class="math inline">\(V_{high}\)</span> 和 <span class="math inline">\(V_{low}\)</span> 分别为 ADC 的测量电压上下限。</p>
<p>LSB value 的倒数 <span class="math inline">\(\frac{1}{[13]}\)</span>，其单位为 <span class="math inline">\(counts/V\)</span>，即单位电压所对应的离散值得变化量，也就是这一阶段的增益 <span class="math inline">\(S_d=\frac{1}{[13]}\)</span>。</p>
<h3 id="digital-stage">Digital Stage</h3>
<p>这一阶段，对离散信号进行处理，需要考虑这个过程中的增益。</p>
<p>在 Hi-net 官方的 <a href="http://www.hinet.bosai.go.jp/REGS/seed/?LANG=en" target="_blank" rel="external">Response of Observation Equipment</a> 说明中，给出了三种仪器响应 RESP 文件，并指出</p>
<blockquote>
<p>In all response files for Hi-net data, sensor sensitivity is set to the case of 200 V/(cm/s). Actual sensitivity of each channel is shown at the 8th column of the channel table file. This means that the values at 37th line from the top and 4th line from the bottom should be modified from the response file in this web page, considering this point.</p>
</blockquote>
<p>即 <a href="http://www.hinet.bosai.go.jp/REGS/seed/?LANG=en" target="_blank" rel="external">Response of Observation Equipment</a> 中给出的三种仪器响应 RESP 文件，仅仅只是示例，每个 RESP 文件的前 37 行和后 4 行（PS：此处行号并不包括注释行）必须根据 channel table 中的值进行修改，而其余行则不需要修改。看看 RESP 文件的内容可知，不需要修改的行恰好对应 Digital Stage（stage number 为 3 或 4），这暗示着 <strong>Hi-net 的所有 channel 的 Digital Stage 部分是完全相同的 </strong>。</p>
<p>从 RESP 文件中可以看出，stage 3 和 stage 4 虽然看上去很复杂，但实际上其振幅增益 <span class="math inline">\(S_d=1.0\)</span>。换句话说，也就是不必过多考虑这一阶段。</p>
<h2 id="总结">总结</h2>
<ul>
<li>检查 [9] 确认输入波场为速度场</li>
<li>由 [12] 计算波场放大系数</li>
<li>由 [10]、[11] 构造增益为 1 的 transfer 函数，计算其零点和极点，并计算 transfer 函数在自然频率处的振幅，以得到归一化因子 <span class="math inline">\(A_0\)</span></li>
<li>[8] 为增益，可直接使用</li>
<li>对 [13] 列取倒数得到增益（[7]没有用）</li>
</ul>
<p>由此，可根据 channel table 完整构建每个 channel 的仪器响应文件，RESP 格式或 SAC_PZ 格式均可，一般用 SAC_PZ 格式即可。</p>
<h2 id="附录">附录</h2>
<h3 id="官方回复邮件">官方回复邮件</h3>
<p>Question1: Apr 24, 2014 09:32 (UT) +0900(JST)  </p>
<pre><code>Hi,

I am using Hi-net data and am confused with the instrumental response
even after I have looked through all pages of Hi-net website.

In the page of &#39;For Registered Users&#39; -&gt; &#39;Response of Observation Equipment&#39;,
only three RESP files are given. It seems that I have to rewrite a new RESP
or SAC_PZ file for each channel.

So I have to confirm that I understand details of response, which are very
important for correct data processing.

1. Do all channels have the same zeroes and poles?
2. At line 19, do all channels have the same A0 Normalization factor (0.999953)?
3. In the FAQ Q08, one equation is given to convert the A/D value from an WIN32
   file to the corresponding physical quantity. It is

        v = I * [13] / ([8] * 10 ^ ([12] / 20 ) )

   If I want to generate a SAC PZ file, the CONSTANT will be

    CONSTANT = [8]*10^([12]/20) / [13] * A0 ?

I am looking forward to your reply.

Best Regards.</code></pre>
<p>Answer1: May 07, 2014 08:30 (UT) +0900(JST)  </p>
<pre><code>Thank you for accessing our website.
This is the NIED Hi-net/F-net/V-net administrator.

In the &quot;Response of Observation Equipment&quot; page, sample RESP files are
provided and you need to modify them according to your purposes, as you
wrote. The explanation in this page assumes that the parameters of the
seismometer other than the gain factor do not change. Strictly speaking,
the zeros, the poles, and the A0 normalization factor can change
depending on the parameters of the seismometer. The moving coil velocity
type seismometer is used in Hi-net and its transfer function in the
Laplace domain is given as:

    Gs^2/(s^2 + 2hws + w^2)

where G, h and w are the gain factor, the damping constant, and the
natural angular frequency, respectively. Roots of the numerator and the
denominator correspond to the zeros and the poles, respectively, and the
A0 normalization factor is the inverse of the absolute value of the
above equation except G at the normalization frequency. Detailed
explanation about this type of seismometer is available in many
literature, such as,

Scherbaum, F., Of Poles and Zeros: Fundamentals of Digital Seismology,
Kluwer Academic Publishers, 1996.
#see chapter 4

The gain factor, the damping constant, and the natural period are
provided in the channels table file as explained in the Q&amp;A08.
Note that the gain factor is measured at its natural frequency.
http://www.hinet.bosai.go.jp/faq/?LANG=en#Q08

Please read the SEED manual about further details and SAC manual about
SAC PZ file.

- SEED: http://www.fdsn.org/publications.htm
- SAC: http://www.iris.edu/files/sac-manual/

Sincerely,</code></pre>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 仪器响应 </tag>
            
            <tag> Hinet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hi-net Channel Table 文件]]></title>
      <url>http://seisman.info/hinet-channel-table.html</url>
      <content type="html"><![CDATA[<p>从 Hi-net 下载连续波形数据会得到 ZIP 压缩文件，其中包含了两个后缀为 <code>ch</code> 的文件， 即 Channel Table 文件。两个文件内容是相同的，区别在于一个是 <code>euc</code> 编码， 一个是 <code>sjis</code> 编码。只需要用其中一个即可，这里选择 <code>euc</code> 编码的文件。</p>
<p>Channel Table 文件描述了每个 channel 的仪器信息，某种程度上等效于常见的 RESP 或 SAC PZ 仪器响应文件。但是实际上 Channel Table 有一定的局限性，无法理解 Hi-net 为什么会用这种格式来指定仪器响应信息。</p>
<p>由于需要注意的是，对于 Hinet 而言，channel table 可以完整的描述仪器响应，而对于 Fnet 而言，channel table 给出的信息不足。因而关于 channel table 的内容，仅适用于 Hinet，不适用于 Fnet，不确定是否适用于其他台网。</p>
<a id="more"></a>
<h2 id="规律分析">规律分析</h2>
<p>看一看 Channel Table 文件的内容，很容易总结出如下规律：</p>
<ul>
<li>每个台站的信息需要四行；</li>
<li>第一行以 <code>#</code> 开头，描述了台站名称及其他信息，可以认为是注释行；</li>
<li>第二至四行，分别为 U、N、E 三个分量的仪器信息；</li>
</ul>
<p>但细细看看文件内容会发现，存在很多不符合上述规律的特例，比如：</p>
<ul>
<li>有些台站只有一个或两个分量，而不是三个；</li>
<li>有些台站不包含 N、E 分量，而包含 X、Y 分量；</li>
</ul>
<p>因而，若按照上面总结出的规律去做文本处理，会出现很多问题。更严谨的处理方式应该是：将所有以 <code>#</code> 开头的行当作注释行，其余行平等对待，即最小单位是 channel 或分量，而不是台站。</p>
<h2 id="格式">格式</h2>
<p>一个 channel 包含了如下以 ** 空格 ** 分隔的 19 列信息:</p>
<pre><code>2903 1 0 N.AGWH U 6 27 154.30 m/s 0.96 0.70 0 1.023e-07 43.0842 140.8199 -77 0 0 Akaigawa</code></pre>
<p>每列的具体含义如下（后加问号则表示不那么确定）：</p>
<ol style="list-style-type: decimal">
<li>Channle ID：16-bit，用四位的 16 进制数表示，用于唯一标识一个 channel；</li>
<li>Recording flag：若为 1 则表示该 channel 正常记录数据，值一般为 1（？）</li>
<li>Delay time on a circuit：电路中的时间延迟，值一般为 0</li>
<li>Station code：台站代码，Hi-net 的台站代码格式为 <code>N.xxxH</code> ；</li>
<li>Motion component code：分量名，可以取值包括 U、N、E、X、Y，除此之外，还有 wU、wE、wN 等奇怪的分量；</li>
<li>Reduction ratio of monitor waveform amplitude：显示器上的显示振幅与实际振幅之间的比例，其值为 2 的指数（？）</li>
<li>Quantization bit rate in A/D conversion：模数转换器的量化分辨率，一般值为 27，个别值为 20 或 24；</li>
<li>Sensor sensitivity：每单位输入所产生的输出为多少 V；</li>
<li>Unit of input：输入的单位，一般为 <code>m/s</code> ，即输入为速度；</li>
<li>Natural period of the seismometer：传感器的自然周期；</li>
<li>Damping constant of the seismometer：传感器的衰减常数；</li>
<li>Amplification factor applied to sensor output prior to A/D conversion：在对连续波形使用 ADC 之前，传感器的放大因子；单位 dB</li>
<li>LSB value：模数转换器的 LSB 值；</li>
<li>Latitude：台站纬度</li>
<li>Longitude：台站经度</li>
<li>Altitude：台站高程（单位为 m）</li>
<li>P 波台站校正：一般为 0</li>
<li>S 波台站校正：一般为 0</li>
<li>台站名称</li>
</ol>
<h2 id="补充说明">补充说明</h2>
<h3 id="channel-id">Channel ID</h3>
<p>常见的 Channel ID 为四位 16 进制数，实际上有另一类 ID 称为宽 Channel ID，其用八位 16 进制表示。一般用不到，所以在本文以及后面都不会再提到。</p>
<h3 id="motion-component-code">Motion component code</h3>
<p>Channel Table 中仅给出了分量代码，可以取值为 U、N、E、X、Y 以及其他。其中 U 表示分量为垂直方向。N、E 表示分量指向北向和东向。X、Y 以及其他分量代码的含义未知。</p>
<p>由于传感器安装在 borehole 的底部，所以很难精确知道传感器的真实方位。以分量代码为 N 的传感器为例，该传感器并不一定严格指向正北方向。一般而言，其与正北方向的夹角在 5 度以内，个别传感器的方向甚至与北向相差几十度。每个传感器的方位信息位于该 <a href="http://www.hinet.bosai.go.jp/REGS/direc/?subject=kekka" target="_blank" rel="external">页面</a>。</p>
<p>关于每个分量的实际方位信息，在另一篇博文中会专门讨论。</p>
<h3 id="units-of-input">Units of input</h3>
<p>Hi-net 使用的是短周期速度地震仪，输入为速度场，单位为 <code>m/s</code>，而部分 channel 的输入单位为 <code>m/s/s</code> ，即输入为加速度场。</p>
<p>输入单位为 <code>m/s/s</code> 的 channel，与输入单位为 <code>m/s</code> 的 channel 相比，在后期的数据处理上差别很多，因而不建议提取输入单位为 <code>m/s/s</code> 的通道数据。</p>
<h3 id="natural-period-of-the-seismometer">Natural period of the seismometer</h3>
<p>截至 2014 年 09 月 08 日，对于这一列的含义有两种互相矛盾的说法：</p>
<ul>
<li><code>readme.txt</code> 中对该列解释为 <strong>Eigen frequency of the sensor</strong></li>
<li><a href="http://www.hinet.bosai.go.jp/faq/?LANG=en#Q08" target="_blank" rel="external">Hi-net FAQ 08</a> 中该列解释为 <strong>Natural period of the seismometer</strong></li>
</ul>
<p>Hi-net 官方回复指出，FAQ08 中的解释是正确的，即第 10 列为 “Natural period of the seismometer”。</p>
<h2 id="总结">总结</h2>
<p>19 列信息：</p>
<ul>
<li>Channel 标识为：1</li>
<li>含义很明显，可以直接使用的有：4、5、14、15、16、19；</li>
<li>基本没用途，可以不必关心的有一：2、3、6、17、18；</li>
<li>与仪器有关的为 7、8、9、10、11、12、13；</li>
</ul>
<p>接下来会有专门的博文介绍如何根据 7-13 列确定该 channel 的仪器响应。</p>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li>从 Hi-net 下载连续波形数据得到的 ZIP 文件中的 <code>readme.txt</code> ；</li>
<li><a href="http://www.hinet.bosai.go.jp/faq/?LANG=en#Q08" target="_blank" rel="external">Hi-net FAQ 08</a></li>
<li><a href="http://www.hinet.bosai.go.jp/REGS/direc/?LANG=en" target="_blank" rel="external">Azimuth information of the Hi-net borehole sensors</a></li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-09-05：初稿；</li>
<li>2014-09-09：Hi-net 官方确定了第 10 列的含义；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 仪器响应 </tag>
            
            <tag> Hinet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hi-net WIN32 格式]]></title>
      <url>http://seisman.info/hinet-win32-format.html</url>
      <content type="html"><![CDATA[<p>对于连续波形数据而言，从 Hi-net 下载的文件为 zip 压缩文件，其中包含了多个后缀为 <code>cnt</code> 的文件。每个 cnt 文件中包含了多台站多分量的一分钟的波形数据。</p>
<p>这些 cnt 文件即为 WIN32 格式。WIN32 格式是在 WIN 格式上修改得到的，而 WIN 格式是日本 某机构自行设计的一种数据格式，主要用于一套称为 “WIN System” 的软件中。</p>
<p><a href="http://www.hinet.bosai.go.jp/REGS/manual/dlDialogue.php?r=win32format&amp;LANG=en" target="_blank" rel="external">WIN32 格式官方文档</a></p>
<p>WIN32 是个相当变态的格式，为了对数据大小进行压缩，win32在存储的过程中使用了差异压缩算法，以0.5、1、2、3、4个字节来保存数据，自己写程序去读数据时需要非常小心。</p>
<p>幸好，Hi-net 提供了 win32tools，可以实现一些基本的功能。</p>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据 </tag>
            
            <tag> 格式 </tag>
            
            <tag> Hinet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hi-net 连续数据申请的源码分析]]></title>
      <url>http://seisman.info/hinet-continuous-waveform-data-source-code.html</url>
      <content type="html"><![CDATA[<p>上一篇博文介绍了 Hi-net 数据申请的流程以及其中的一些限制。从表面上看，数据申请的过程其实就是鼠标点点点。</p>
<a id="more"></a>
<h2 id="为什么要分析网页源码">为什么要分析网页源码</h2>
<p>简单的算一笔账，假设有 25 个地震事件，每个地震事件需要 30 分钟的连续波形。根据前一篇博文中介绍的第二种方法，需要将 30 分钟的时间段分为 5 分钟的 6 小段，因而总共需要 30/5*25=150 次申请。</p>
<p>估算一下每次申请所需要的时间：</p>
<ul>
<li>选择机构和台网：对于 Hi-net 而言，不需要修改，点击=0，耗时=0；</li>
<li>选择开始时间：“年月日时分” 共 5 个选项，每次申请需要修改 1~5 个选项，平均一下，姑且认为每次申请需要修改 2.5 个选项。修改每个选项时需要点击下拉选项，再点击相应的值，因而需要平均点击 = 5 次，耗时约 5s 以上；若 5 分钟数据恰好跨越一个小时或一天，则需要更长的时间来思考，以保证申请的正确；</li>
<li>数据长度：设定为 5 分钟，点击=0，耗时=0；</li>
<li>Search：点击=1，至显示结果耗时=1s；</li>
<li>Package Download：点击一次，耗时为 0；</li>
<li>数据准备：由于数据准备期间无法再次申请，因而用户必须等待，时间约 30-60s，假设为 30s。</li>
</ul>
<p>30s 的等待时间很尴尬，这个时间除了背单词外几乎无法有效利用。因而 25 个地震事件需要不间断地花费两个多小时的时间才能申请完，效率极其低下。</p>
<p>再说说下载，由于某个未知的原因，似乎同时最多只能下载 5 个文件。假设以正常网速下载一个文件需要 5 分钟，则同时下载 5 个文件，不间断地下载完全部文件需要 2 个小时以上，而且这个过程中人必须要监视文件是否下载完成，以决定是否下载新文件。</p>
<p>总之，Hi-net 的数据申请和下载流程是非常反人类的。因而希望可以通过分析网页源代码以了解申请流程的细节，以实现用脚本来申请和下载数据。</p>
<h2 id="源码分析">源码分析</h2>
<p>接下来，会按照数据申请的步骤尽量细致地分析每一步所涉及到的网页源码。到最后会发现，前面的很多分析是没有用的，但因为其也是分析的一部分，这里也保留了下来。</p>
<h3 id="select">Select</h3>
<p>机构、台网、开始时间以及数据长度，本质上都是下拉列表，也就是 <code>select</code> 标签。脚本语言中可以很容易选取下拉列表中的某一项。</p>
<p>开始时间与数据长度这两个下拉列表很简单，不多说。机构和台网下拉列表中涉及到一些额外的细节，如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&amp;#9608; Organization<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"org"</span><span class="attr">onChange</span>=<span class="string">"netInit('');volcInit('');changeVolc()"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"NIED"</span><span class="attr">selected</span>&gt;</span>NIED<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"JMA"</span>&gt;</span>JMA<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"UNIV"</span>&gt;</span>Universities<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"LOCAL"</span>&gt;</span>Local governments<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"JAMSTEC"</span>&gt;</span>JAMSTEC<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"OTHER"</span>&gt;</span>Other Organizations<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&amp;#9608; Network<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"net"</span><span class="attr">onChange</span>=<span class="string">"volcInit(''); changeVolc()"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">id</span>=<span class="string">"volc_hide"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&amp;#9608; Volcano<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"volc"</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div></pre></td></tr></table></figure>
<p>在 Organization 的 select 标签的 onChange 属性中调用了 <code>netInit()</code> 和 <code>volcInit</code> 函数。 这两个函数的定义位于 <a href="https://hinetwww11.bosai.go.jp/auth/download/cont/js/cont.js" target="_blank" rel="external">cont.js</a> 中，当选定 org 之后，该函数会根据 org 的值对 net 和 volc 进行初始化，具体代码不再列出。</p>
<p>其中两个词典（也称为 hash）：networks 和 volcanos。每一个台网都对应一个唯一的 key，这一点很重要：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">networks[<span class="string">'0101'</span>] = <span class="string">'NIED:NIED Hi-net'</span>;</div><div class="line">networks[<span class="string">'0103'</span>] = <span class="string">'NIED:NIED F-net (broadband)'</span>;</div><div class="line">networks[<span class="string">'0103A'</span>] = <span class="string">'NIED:NIED F-net (strong motion)'</span>;</div><div class="line">...</div><div class="line">volcanos[<span class="string">'010503'</span>] = <span class="string">'0105:Usuzan'</span>;</div><div class="line">volcanos[<span class="string">'010505'</span>] = <span class="string">'0105:Iwatesan'</span>;</div><div class="line">volcanos[<span class="string">'010507'</span>] = <span class="string">'0105:Asamayama'</span>;</div><div class="line">volcanos[<span class="string">'010509'</span>] = <span class="string">'0105:Fujisan'</span>;</div><div class="line">...</div></pre></td></tr></table></figure>
<p>比如 <code>0101</code> 对应 Hi-net， <code>010503</code> 对应 Usuzan 火山台网。</p>
<h3 id="submit">Submit</h3>
<p>在各个下拉列表都选好之后，需要点击 “Search” 按钮，其源码如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span><span class="attr">name</span>=<span class="string">"LANG"</span><span class="attr">id</span>=<span class="string">"LANG"</span><span class="attr">value</span>=<span class="string">"en"</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span><span class="attr">value</span>=<span class="string">"Search"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div></pre></td></tr></table></figure>
<p>可以看到 “Search” 按钮，本质上是一个 submit 的 input 标签，其将 org、net、year、month、day、hour、min、span 提交给服务器，服务器在处理后再返回给用户。</p>
<h3 id="openrequest">openRequest</h3>
<p>点击 “Search” 之后，页面中会出现一分钟文件的下载链接以及打包下载的链接。一分钟文件的链接代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:openRequest('01','01','2014','08','30','00','00','1','18736','en');"</span>&gt;</span>Download<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p>文件打包下载的链接代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span><span class="attr">onClick</span>=<span class="string">"javascript:openRequest('01','01','2014','08','30','00','00','5','93680','en');return false;"</span><span class="attr">onmouseover</span>=<span class="string">"changeImg('1')"</span> <span class="attr">onmouseout</span>=<span class="string">"changeImg('0')"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./image/fulldl1_e.png"</span><span class="attr">name</span>=<span class="string">"fulldl"</span><span class="attr">class</span>=<span class="string">"img_border0"</span><span class="attr">alt</span>=<span class="string">""</span> <span class="attr">title</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p>可以看到，两种下载方式本质上没有区别，都是调用了 <code>openRequest</code> 函数。该函数的定义位于 <a href="https://hinetwww11.bosai.go.jp/auth/download/cont/js/cont.js" target="_blank" rel="external">cont.js</a> 中，如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">openRequest</span>(<span class="params">org1,org2,year,month,day,hour,min,span,size,lang,volc</span>) </span>&#123;</div><div class="line">   <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="built_in">document</span>.cont.arc.length;i++) &#123;</div><div class="line">      <span class="keyword">if</span> (<span class="built_in">document</span>.cont.arc[i].checked == <span class="literal">true</span>) &#123;</div><div class="line">         <span class="keyword">var</span> arc = <span class="built_in">document</span>.cont.arc[i].value;</div><div class="line">         <span class="keyword">break</span>;</div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="keyword">var</span> rand = <span class="built_in">Math</span>.round((<span class="keyword">new</span> <span class="built_in">Date</span>()) .getTime());</div><div class="line">   <span class="keyword">var</span> url = <span class="string">'./cont_request.php?org1='</span> + org1 + <span class="string">'&amp;org2='</span> + org2</div><div class="line">           + <span class="string">'&amp;year='</span> + year + <span class="string">'&amp;month='</span> + month + <span class="string">'&amp;day='</span> + day</div><div class="line">           + <span class="string">'&amp;hour='</span> + hour + <span class="string">'&amp;min='</span> + min + <span class="string">'&amp;span='</span> + span</div><div class="line">           + <span class="string">'&amp;arc='</span> + arc + <span class="string">'&amp;size='</span> + size+ <span class="string">'&amp;LANG='</span> + lang</div><div class="line">           + <span class="string">'&amp;volc='</span> + volc + <span class="string">'&amp;rn='</span> + rand;</div><div class="line"></div><div class="line">   contDLWin = <span class="built_in">window</span>.open(url,<span class="string">"contStatus"</span>);</div><div class="line">   contDLWin.window.focus();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>该函数需要 10 个参数（某些参数的含义是通过分析与猜测得到的）：</p>
<ul>
<li><code>org1</code> 为机构代码（NIED 取值为 01）</li>
<li><code>org2</code> 为台网代码（Hi-net 取值为 01）</li>
<li><code>year</code> 、 <code>month</code> 、 <code>day</code> 、 <code>hour</code> 、 <code>min</code> 为数据开始时间</li>
<li><code>span</code> 为数据长度（取值为 5）</li>
<li><code>size</code> 为文件大小，单位为 KB（Hi-net 所有台站 5 分钟数据的 size 大概为 93680，该值为估计值不那么重要）</li>
<li><code>lang</code> 为语言（默认取为 en）</li>
<li><code>volc</code> 为火山代码，比如 Usuzan 火山台网的代码为 <code>010503</code></li>
</ul>
<p>除此之外，函数中还遍历了 <code>arc[]</code> 数组，找到了数据文件的压缩格式 arc；根据当前时间生成 “随机数” <code>rand</code>。最后将这些 key/value 对构成了 <code>cont_request.php</code> 的 query string，然后打开了该 url。</p>
<h2 id="结论">结论</h2>
<p>源码看到这里，结果就已经很显然了，数据申请的关键是调用 <code>openRequest</code> 函数，而调用 <code>openRequest</code> 函数的本质是向 <code>cont_request.php</code> 添加一系列请求字串（query string）。</p>
<p>比如，在已登录 Hi-net 网站的前提下，将如下 url 直接复制粘贴到浏览器中，即可完成数据的申请:</p>
<pre><code>https://hinetwww11.bosai.go.jp/auth/download/cont/cont_request.php?org1=01&amp;org2=01&amp;year=2014&amp;month=06&amp;day=14&amp;hour=00&amp;min=00&amp;span=5&amp;arc=ZIP&amp;size=93680&amp;LANG=en&amp;rn=1402728298194</code></pre>
<p>其中 rn 以及 size 的取值没有太多实际意义。</p>
<p>因而数据的申请，就变成了简单的几步：</p>
<ol style="list-style-type: decimal">
<li>构建如上所示 url</li>
<li>向 Hi-net 服务器发送请求</li>
<li>等待数据准备</li>
<li>进行下一次申请或下载已准备好的数据</li>
</ol>
<p>这几步都可以很容易的通过脚本实现，因而用户可以在不点击鼠标、不等待的情况下完成数据的自动申请，大大提高了生产力。</p>
<h2 id="后记">后记</h2>
<p>最初接触 Hi-net 数据的时候，需要下几百个地震事件，每个地震事件数据长度大概在 30 分钟左右，花了一周的时间，下了不到 100 个事件，每天重复的点点点以及等等等。</p>
<p>后来，终于受不了了，单单下数据就得 1 个月，这得无聊死啊。于是就想着先停下来，好好分析一下整个网页的结构，希望可以通过脚本来实现数据申请。</p>
<p>那个时候，对 web 还没有太多的了解，只知道简单的 HTML，从图书馆借了 HTML、CSS、JavaScript 方面的书，一边看书一边折腾。尝试了写 JS 脚本、写 Chrome/Firefox 扩展，以及直接在浏览器的控制台中操作。当时，只知道 <code>openRequest</code> 函数，没有进一步去研究函数的具体定义。最后还是实现了在控制台中申请数据以及通过 JS 脚本申请数据，当然这两者都需要一些人工操作，不够自动化。</p>
<p>当时只会 Perl 脚本，因而通过 Perl 以及 Mechanize 模块实现了 “打开浏览器”、“选择下拉列表”、“点击 search”、“点击 Package Download” 的功能。这个脚本算是相当成功且自动化的，因而剩下的 400 个地震事件在几天内就申请并下载完毕了。这个 Perl 脚本完全模拟了人工鼠标点击的操作，在速度上和人工点击差不多，不过明显解放了一个劳动力。脚本的一个缺点在于，Mecahnize 模块的依赖太多，且要求 Perl 版本尽可能新，稍显繁琐。</p>
<p>在写完 Perl 脚本的一年间，因为写博客的缘故，对于网页以及脚本都有了更多的了解。一次偶然的机会，再次看了 Hi-net 源代码，找到了 <code>openRequest</code> 的定义，了解了数据申请的本质，也就是这篇博文的全部。</p>
<p>根据本文的分析结果，用 Python 重新实现了新的数据申请方法，更加简单、聪明、快速。Python 脚本留在下文再说。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-08-29：初稿；</li>
<li>2014-11-03：更新了火山台网；</li>
<li>2014-12-03：更新了连续数据申请链接；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据 </tag>
            
            <tag> Hinet </tag>
            
            <tag> 申请 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hi-net 连续波形数据]]></title>
      <url>http://seisman.info/hinet-continuous-waveform-data.html</url>
      <content type="html"><![CDATA[<p>本文将介绍如何从 Hi-net 申请并下载连续波形数据，并介绍 Hi-net 数据的一些细节。</p>
<p>连续波形数据申请地址： <a href="https://hinetwww11.bosai.go.jp/auth/download/cont/?LANG=en" class="uri" target="_blank" rel="external">https://hinetwww11.bosai.go.jp/auth/download/cont/?LANG=en</a></p>
<a id="more"></a>
<h2 id="第一印象">第一印象</h2>
<p>下图是数据申请页面的具体样子，看上去还是相当直观的。</p>
<div class="figure">
<img src="/images/2014082701.jpg">

</div>
<h2 id="申请流程">申请流程</h2>
<ol style="list-style-type: decimal">
<li><p>选择机构和台网</p>
<p>Hi-net 网站提供了多个机构和台网的波形数据的下载，可选的机构名和台网名可以在相应的下拉列表中看到。对于 Hi-net 数据而言，Organization 处选择 NIED，Network 处选择 NIED Hi-net。</p></li>
<li><p>台站选择</p>
<p>目前仅支持对 Hi-net 和 F-net 这两个台网进行台站筛选。其他台网，必须下载全部台站的数据才能筛选。</p>
<p>点击 “Hi-net/F-net Station selection is here” 会打开台站选择页面，可以通过 “点击” 或“拖曳”的方式选取台站。该页面的台站选择功能使用起来不太方便，一般情况下，选择全部台站，将所有数据下载下来再写脚本对台站进行筛选。</p>
<p>点击 “Check the current configure for user” 可以看到用户的台站选择情况，默认情况下选择的台站数为 0，即下载全部台站的波形数据。</p></li>
<li><p>连续波形数据的时间范围</p>
<p>确定要申请的波形数据的起始时刻（精确到分）以及数据长度（1-60 分钟），然后点击 “Search”。比如选择开始时间为 “Year:2014”、“Month:08”、“Day:29”、“00:”、“00”，数据长度为 “5min”。</p></li>
</ol>
<h2 id="一大堆说明">一大堆说明</h2>
<p>点击 “Search” 之后显示如下，可以看到，连续波形数据被分割成一分钟的小段，每段数据都有一个 “Download” 链接，所有数据还有一个 “Package Download” 链接：</p>
<div class="figure">
<img src="/images/2014082702.png">

</div>
<p>之所以要介绍 Hi-net 数据申请流程，就是因为这其中涉及到太多规则和例外，下面一一说明：</p>
<ul>
<li><p>连续波形数据范围：</p>
<p>不同台网提供的波形数据的起始日期不同，具体如下：</p>
<ul>
<li>NIED Hi-net : 2004/04/01 00:00</li>
<li>NIED F-net : 2004/04/01 00:00</li>
<li>NIED V-net : 2010/04/01 00:00</li>
<li>JMA Seismometer Network : 2004/04/01 00:00</li>
<li>JMA Volcanic Seismometer Network : 2010/12/01 00:00</li>
<li>Universities : 2004/04/01 00:00</li>
<li>Tokyo Metropolitan Government : 2004/04/01 00:00</li>
<li>Hot Spring Research Institute of Kanagawa Prefecture : 2004/04/01 00:00</li>
<li>Aomori Prefectural Government : 2004/04/01 00:00</li>
<li>Shizuoka Prefectural Government : 2004/06/15 00:00</li>
<li>JAMSTEC Realtime Data from the Deep Sea Floor Observatory: 2004/04/01 00:00</li>
<li>JAMSTEC DONET1 : 2014/10/01 00:00</li>
<li>AIST : 2004/04/01 00:00</li>
<li>GSI : 2004/04/01 00:00</li>
<li>ADEP : 2015/01/01</li>
</ul>
<p>所有台网的波形数据的结束时间均相同，即 <strong>比当前时刻早两小时</strong>。</p></li>
<li>该网站中的所有时间均为 <strong>JST 时间</strong>，即东九区时间。比如，假设中国现在是 22 点，则 GMT 时间为 22-8=14 点，而日本时间为 14+9=23 点。在数据申请以及数据处理时都必须将这点考虑进去。</li>
<li><p>Hi-net 将连续波形数据切割成一分钟长度的数据段，即 <strong>每个文件仅包含一分钟的波形数据</strong></p></li>
</ul>
<p>由于 Hi-net 将连续波形数据切割成一分钟长度的数据段，因而：</p>
<ul>
<li>若申请时数据长度为 30 分钟，则会生成 30 段数据，每段数据提供一个 “Download” 链接，30 段数据意味着需要点击 30 次链接，需要下载 30 个文件；</li>
<li>Hi-net 提供了打包下载的功能，但对数据量有所限制。若 Number of Channels * Record Length (min) &lt;= 12000 min，且 Record Length &lt; 60 min，则可以将多段数据打包下载，即 “Package Download”</li>
</ul>
<p>以 Hi-net 为例，Hi-net 共计约 800 个台站（经统计为 785 个），每个台站三个 channel（个别台站有两个或四个），即约 800*3=2400 个 channel。因而在选择全部 Hi-net 台站的前提下，若想要使用打包下载功能，则数据的 Record Length 不得超过 12000/2400=5 min。若只选择了其中 50 个台站，则 12000/150=80 min&gt;60 min，则 Record length 最大可以取为 60 min。</p>
<p>下面简单算个账，对于一个地震事件，假设需要申请 Hi-net 所有台站 30 分钟的连续波形数据，有两种做法：</p>
<ol style="list-style-type: decimal">
<li>数据长度设置为 30min，会生成 30 段数据，然后点击 30 次 “Download” 链接，并下载 30 个文件；</li>
<li>数据长度设置成 5min，将 30 分钟连续波形分为 6 次申请，每次均可使用打包下载 “Package Download”，点击 6 次链接，并下载 6 个文件；</li>
</ol>
<p>无论是点击 “Download” 还是“Package Download”，每次点击均称为一次“申请”。每次申请过程的耗时大概如下：</p>
<ol style="list-style-type: decimal">
<li>发送申请：主要由当前网络状况以及 Hi-net 服务器繁忙程度决定，根据经验需要 3-5s；</li>
<li>数据准备：由 Hi-net 服务器的繁忙程度、处理速度以及该次申请的数据大小决定。若申请所有台站一分钟的连续波形，约需要 10s；若申请所有台站 5 分钟的连续波形，约需要 20-40s；</li>
<li>获取数据状态：在 Hi-net 服务器准备数据时，是不能再次申请新数据的，否则会出现错误。因而必须等待 Hi-net 网站更新数据申请的状态，待确认无误之后方可再次申请。因而获取数据状态大概需要 3-10s。</li>
</ol>
<p>在确认单次申请的数据准备完成后，即可下载此次申请的数据或继续下一次申请。需要注意，<strong>Hi-net 只保留最近 150 次申请的数据</strong>，并且会在数据申请之后一段时间（可能是几天）<strong>删除数据</strong>，因而应及时下载。</p>
<p>了解了 Hi-net 的游戏规则之后，可知，第二种申请方法要更实用一些，申请的次数更少，耗时更短，下载的文件也更少。唯一的不方便是需要将数据手动分成几次申请，但很容易用脚本实现。后面将只使用第二种方法申请数据。</p>
<h2 id="数据下载">数据下载</h2>
<p>在申请数据之后，会自动打开 “Status/Download” 页面。如下图所示：</p>
<div class="figure">
<img src="/images/2014082703.png">

</div>
<p>图中的每行代表一次申请，具有唯一的 ID。黄色背景的行表示该数据尚未被下载过，白色背景的行表示该数据已经下载过，还可以再次下载（数据超过一定天数后会无法下载），申请时若出现错误会显示为灰色行。</p>
<p>PS：下载数据时似乎同时只能下载 5 个数据，再点击其他数据的下载链接没有反应。目前不确定是浏览器的限制、带宽的限制还是 Hi-net 服务器的限制。</p>
<h2 id="对数据的说明">对数据的说明</h2>
<ul>
<li>下载得到的为压缩文件，默认压缩格式为 ZIP 格式（推荐使用 ZIP 格式）。文件名格式为：
<ul>
<li>一般台网：<code>[OrgID]_[NetID]_[Start time yyyymmddHHMM (in JST)]_[Record length (min)].zip</code></li>
<li>火山台网：<code>[OrgID]_[NetID]_[VolcID]_[Start time yyyymmddHHMM (in JST)]_[Record length (min)].zip</code></li>
</ul></li>
<li>每个 ZIP 文件中包含了若干个 cnt 文件、两个 ch 文件以及一个 readme 文件；</li>
<li>cnt 文件中包含了一分钟的地震波形数据，为 win32 格式。win32 格式是日本某机构自定义的一种地震数据格式，可以通过 Hi-net 提供的 win32tools 转换成 SAC 格式；</li>
<li>cnt 文件的文件名中包含了波形的时间信息以及台网信息，但对于一般台网和火山台网，文件名的长度是不同的；</li>
<li>ch 文件即 channels table，其包含了每个台站的经纬度以及每个 channel 的仪器响应信息，两个 channel table 文件内容相同，只是一个使用 euc 编码，一个使用 sjis 编码；</li>
</ul>
<p>关于数据格式、数据转换以及 channel table 文件的具体使用，放在后面的篇章再细说。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-08-27：初稿；</li>
<li>2014-11-02：修订了部分内容，并加入了对火山台网的说明；</li>
<li>2014-12-03：连续波形的申请网址发生变化；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据 </tag>
            
            <tag> Hinet </tag>
            
            <tag> 申请 </tag>
            
            <tag> 下载 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hi-net 简介]]></title>
      <url>http://seisman.info/intorduction-to-hinet.html</url>
      <content type="html"><![CDATA[<p>Hi-net，全称为 High Sensitivity Seismograph Network，是 NIED 下的一个覆盖日本全境的高密度地震台网。</p>
<a id="more"></a>
<h2 id="网址">网址</h2>
<p>以前的网站只有日文版，从 2012 年左右建立了英文版网站，目前英文版网站尚为 beta 版。</p>
<ul>
<li>官网网址： <a href="http://www.hinet.bosai.go.jp/" class="uri" target="_blank" rel="external">http://www.hinet.bosai.go.jp/</a></li>
<li>台站分布图下载：<a href="http://www.hinet.bosai.go.jp/st_info/detail/dataset.php?LANG=en" class="uri" target="_blank" rel="external">http://www.hinet.bosai.go.jp/st_info/detail/dataset.php?LANG=en</a></li>
<li>用户注册： <a href="https://hinetwww11.bosai.go.jp/nied/registration/?LANG=en" class="uri" target="_blank" rel="external">https://hinetwww11.bosai.go.jp/nied/registration/?LANG=en</a></li>
</ul>
<h2 id="基本情况">基本情况</h2>
<ul>
<li>2000 年 10 月开始部署 Hi-net 台网；</li>
<li>Hi-net 台站均匀分布于整个日本境内，台站间距约为 20km，预计约 1000 个台站（目前共计近 800 个台站）；</li>
<li>每个 Hi-net 台站都包含了一个用于安装地震仪的钻孔（borehole）以及一个用于放置数据记录器和其他数据传输设备的观测小屋；</li>
<li>在每个钻孔的底部（深度大于 100m），安装了短周期三分量速度地震仪、三分量强震加速度仪。同时在每个台站的地表也安装了三分量强震加速度仪；其中 Hi-net 只收集短周期三分量速度地震仪的数据，两对强震加速度仪的数据则由 KiK-net 收集；</li>
<li>位于钻孔底部的传感器没有用水泥覆盖，因而当传感器出现问题时很容易将传感器取出，进行维修或更换；</li>
<li>钻孔的深度不一，最浅的位于地表，最深的深度超过 3.5km，大多数钻孔的深度在 100-300m 之间；</li>
<li>地震仪的运动首先被转化成弱电信号，经过模数转换器转换成每秒 1000 个采样点的数字信号，经过减采样后，得到采样率为 100Hz、27 位精度的数字信号，再将数据以一秒为最小单位打包传送给数据中心；</li>
</ul>
<h2 id="数据">数据</h2>
<p>数据使用的注意事项：</p>
<ul>
<li>在文章、会议摘要中使用了 NIED 的数据，应将数据使用情况报告给 NIED；</li>
<li>NIED 拥有数据的版权，严禁用户自行分发数据；</li>
<li>发表文章时要致谢数据来源；</li>
</ul>
<p>数据种类：</p>
<ul>
<li>JMA Unified earthquake catalog（日本境内及附近区域的地震目录）</li>
<li>Arrival-time data（基于 JMA unified catalog）</li>
<li>Focal mechanism catalog（基于 JMA unified catalog）</li>
<li>Event waveform data（仅 JMA unified catalog 中的事件）</li>
<li>Continuous waveform data（2004 年 4 月 1 日至今的连续波形数据）</li>
<li>Old waveform data（2004 年 4 月之前的数据）</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据 </tag>
            
            <tag> Hinet </tag>
            
            <tag> 台网 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hi-net 系列博文合集]]></title>
      <url>http://seisman.info/hinet-things.html</url>
      <content type="html"><![CDATA[<p>Hi-net 是日本境内的一个高质量、高密度的短周期地震台网，接下来的几篇博文将介绍 Hi-net 相关的一些点。</p>
<p>本文是系列博文的目录页。</p>
<a id="more"></a>
<ol style="list-style-type: decimal">
<li><a href="/intorduction-to-hinet.html">Hi-net 简介</a></li>
<li><a href="/hinet-continuous-waveform-data.html">Hi-net 连续波形数据</a></li>
<li><a href="/hinet-continuous-waveform-data-source-code.html">Hi-net 连续波形数据申请的源码分析</a></li>
<li><a href="/hinet-win32-format.html">win32 格式</a></li>
<li><a href="/hinet-channel-table.html">Hi-net 的 channel table 文件</a></li>
<li><a href="/hinet-instrumental-response.html">Hi-net 的仪器响应</a></li>
<li><a href="/hinet-win32tools.html">Hi-net win32tools</a></li>
<li><a href="/hinetpy.html">HinetPy: Hinet数据申请与处理模块</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hinet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python 发送邮件到 BREQ_FAST]]></title>
      <url>http://seisman.info/send-mail-in-python.html</url>
      <content type="html"><![CDATA[<p>利用 Python 的标准库 <a href="https://docs.python.org/3/library/smtplib.html" target="_blank" rel="external">smtplib</a> 实现了通过脚本发送邮件的功能。</p>
<p>源码地址：<a href="https://github.com/seisman/python-notes/blob/master/send-mail-to-iris.py" target="_blank" rel="external">send-mail-to-iris.py</a></p>
<a id="more"></a>
<p>说明：</p>
<ol style="list-style-type: decimal">
<li>仅支持 Python 3.x</li>
<li>需要修改的变量包括：
<ul>
<li><code>sender</code> ：用户邮箱</li>
<li><code>passwd</code> ：明文密码</li>
<li><code>host</code> ：邮件服务器的 IP 或域名</li>
<li><code>port</code> ：邮件服务器的端口号</li>
</ul></li>
<li><p>目前仅测试了网易的 163、USTC 邮件系统和微软的 outlook：</p>
<table>
<thead>
<tr class="header">
<th align="left">服务商 服务器</th>
<th align="left">端口</th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">163</td>
<td align="left">smtp.163.com</td>
<td>25</td>
</tr>
<tr class="even">
<td align="left">USTC mail</td>
<td align="left">mail.ustc.edu.cn</td>
<td>25</td>
</tr>
<tr class="odd">
<td align="left">Outlook</td>
<td align="left">smtp-mail.outlook.com</td>
<td>587</td>
</tr>
</tbody>
</table></li>
<li>支持一次性发送多封邮件
<ul>
<li>一次登录可发送的邮件数是有限制的，因而采取多次登录的方式</li>
<li>频繁发送邮件可能会导致 IP 被封等问题，目前的策略是随机等待 3 到 10 秒，但在发送上百封邮件时依然可能会被封，此时只能用两个邮箱轮番发送</li>
</ul></li>
<li>仅为 BREQ_FAST 设计，因而假定邮件内存为纯 ASCII 字符</li>
<li><p>密码明文存储，不太安全</p></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> breq_fast </tag>
            
            <tag> 邮件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我所使用的软件/服务列表]]></title>
      <url>http://seisman.info/personal-preferences.html</url>
      <content type="html"><![CDATA[<p>本文罗列我个人正在使用或曾经使用过的一些软件或服务。</p>
<a id="more"></a>
<h2 id="计算机语言">计算机语言</h2>
<p>C、Fortran、 Perl、Python3、Bash、LaTeX、reStructureText、Markdown</p>
<h2 id="文本编辑器">文本编辑器</h2>
<table>
<colgroup>
<col width="5%">
<col width="25%">
<col width="68%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th align="left">Name</th>
<th align="left">Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td align="left"><a href="http://www.vim.org/" target="_blank" rel="external">Vim</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td>2</td>
<td align="left"><a href="https://atom.io/" target="_blank" rel="external">atom</a></td>
<td align="left">GitHub出品。速度有点慢，但是功能很强大</td>
</tr>
<tr class="odd">
<td>3</td>
<td align="left"><a href="https://code.visualstudio.com" target="_blank" rel="external">VSCode</a></td>
<td align="left">微软出品的跨平台编辑器</td>
</tr>
<tr class="even">
<td>4</td>
<td align="left"><a href="https://www.sublimetext.com/" target="_blank" rel="external">Sublime Text 3</a></td>
<td align="left">不再使用</td>
</tr>
<tr class="odd">
<td>5</td>
<td align="left"><a href="https://notepad-plus-plus.org/" target="_blank" rel="external">Notepad++</a></td>
<td align="left">不再使用</td>
</tr>
</tbody>
</table>
<h2 id="同步与备份网盘">同步与备份网盘</h2>
<table>
<colgroup>
<col width="5%">
<col width="25%">
<col width="68%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th align="left">Name</th>
<th align="left">Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td align="left"><a href="https://jianguoyun.com" target="_blank" rel="external">坚果云</a></td>
<td align="left">主力同步盘</td>
</tr>
<tr class="even">
<td>2</td>
<td align="left"><a href="https://www.dropbox.com" target="_blank" rel="external">Dropbox</a></td>
<td align="left">需翻墙方能正常使用</td>
</tr>
<tr class="odd">
<td>3</td>
<td align="left"><a href="https://photos.google.com" target="_blank" rel="external">Google Photos</a></td>
<td align="left">备份手机上的照片</td>
</tr>
<tr class="even">
<td>4</td>
<td align="left"><a href="https://onedrive.live.com/" target="_blank" rel="external">OneDrive</a></td>
<td align="left">用于备份OneNote笔记</td>
</tr>
</tbody>
</table>
<h2 id="编程开发">编程开发</h2>
<table>
<colgroup>
<col width="5%">
<col width="25%">
<col width="68%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th align="left">Name</th>
<th align="left">Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td align="left"><a href="https://git-scm.com/" target="_blank" rel="external">Git</a></td>
<td align="left">源代码版本控制</td>
</tr>
<tr class="even">
<td>2</td>
<td align="left"><a href="https://github.com/" target="_blank" rel="external">GitHub</a></td>
<td align="left">托管开源项目</td>
</tr>
<tr class="odd">
<td>3</td>
<td align="left"><a href="https://coding.net" target="_blank" rel="external">Coding</a></td>
<td align="left">托管私有项目</td>
</tr>
<tr class="even">
<td>4</td>
<td align="left"><a href="http://www.zsh.org/" target="_blank" rel="external">zsh</a></td>
<td align="left">比bash好用的多的shell</td>
</tr>
<tr class="odd">
<td>5</td>
<td align="left"><a href="http://ohmyz.sh/" target="_blank" rel="external">oh-my-zsh</a></td>
<td align="left">开箱即用的zsh终极配置文件</td>
</tr>
<tr class="even">
<td>6</td>
<td align="left"><a href="http://www.jetbrains.com/pycharm/" target="_blank" rel="external">PyCharm</a></td>
<td align="left">Python IDE，写大项目时才用</td>
</tr>
<tr class="odd">
<td>7</td>
<td align="left"><a href="https://github.com/adobe-fonts/source-code-pro" target="_blank" rel="external">Source Code Pro</a></td>
<td align="left">编程专用等宽字体</td>
</tr>
<tr class="even">
<td>8</td>
<td align="left"><a href="http://ethanschoonover.com/solarized" target="_blank" rel="external">Solarized</a></td>
<td align="left">终端配色方案（vim，terminal）</td>
</tr>
<tr class="odd">
<td>9</td>
<td align="left"><a href="http://pwmt.org/projects/zathura" target="_blank" rel="external">zathura</a></td>
<td align="left">PS文件阅读器</td>
</tr>
</tbody>
</table>
<h2 id="linux命令行工具">Linux命令行工具</h2>
<table>
<colgroup>
<col width="5%">
<col width="25%">
<col width="68%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th align="left">Name</th>
<th align="left">Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td align="left"><a href="https://github.com/nvbn/thefuck" target="_blank" rel="external">thefuck</a></td>
<td align="left">自动纠正敲错的命令行</td>
</tr>
</tbody>
</table>
<h2 id="文档查看与处理">文档查看与处理</h2>
<table>
<colgroup>
<col width="5%">
<col width="25%">
<col width="68%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th align="left">Name</th>
<th align="left">Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td align="left"><a href="http://www.vieas.com/en/software/vieas.html" target="_blank" rel="external">Vieas</a></td>
<td align="left">Windows下的图片预览工具，大小只有1.1 MB，功能却很强大</td>
</tr>
<tr class="even">
<td>2</td>
<td align="left"><a href="http://pandoc.org/" target="_blank" rel="external">pandoc</a></td>
<td align="left">多种格式的文档之间的互相转换</td>
</tr>
<tr class="odd">
<td>3</td>
<td align="left"><a href="http://community.coherentpdf.com/" target="_blank" rel="external">cpdf</a></td>
<td align="left">PDF 合并、裁剪等，只有一个二进制文件，安装及其简单</td>
</tr>
</tbody>
</table>
<h2 id="网络应用">网络应用</h2>
<table>
<colgroup>
<col width="5%">
<col width="25%">
<col width="68%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th align="left">Name</th>
<th align="left">Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td align="left"><a href="https://www.google.com/chrome/" target="_blank" rel="external">Google Chrome</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td>2</td>
<td align="left"><a href="https://www.inoreader.com" target="_blank" rel="external">Inoreader</a></td>
<td align="left">RSS 阅读器</td>
</tr>
<tr class="odd">
<td>3</td>
<td align="left"><a href="http://getpocket.com/" target="_blank" rel="external">Pocket</a></td>
<td align="left">稍后阅读工具，Chrome下有原生App</td>
</tr>
<tr class="even">
<td>4</td>
<td align="left"><a href="https://www.onenote.com" target="_blank" rel="external">OneNote</a></td>
<td align="left">个人笔记管理</td>
</tr>
<tr class="odd">
<td>5</td>
<td align="left"><a href="https://www.wunderlist.com/zh/" target="_blank" rel="external">Wunderlist</a></td>
<td align="left">管理每天要做的任务</td>
</tr>
<tr class="even">
<td>6</td>
<td align="left"><a href="https://lastpass.com/" target="_blank" rel="external">LastPass</a></td>
<td align="left">密码管理工具</td>
</tr>
<tr class="odd">
<td>7</td>
<td align="left"><a href="http://music.163.com/" target="_blank" rel="external">网易云音乐</a></td>
<td align="left">手机听歌</td>
</tr>
<tr class="even">
<td>8</td>
<td align="left"><a href="http://feedly.com/" target="_blank" rel="external">feedly</a></td>
<td align="left">RSS阅读器（不再使用）</td>
</tr>
</tbody>
</table>
<h2 id="科研相关">科研相关</h2>
<table>
<colgroup>
<col width="5%">
<col width="25%">
<col width="68%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th align="left">Name</th>
<th align="left">Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td align="left"><a href="http://papersapp.com/" target="_blank" rel="external">Papers</a></td>
<td align="left">文献管理软件</td>
</tr>
<tr class="even">
<td>2</td>
<td align="left"><a href="http://endnote.com/" target="_blank" rel="external">EndNote</a></td>
<td align="left">文献管理软件，只在写文章时使用</td>
</tr>
</tbody>
</table>
<h2 id="影音应用">影音应用</h2>
<table>
<colgroup>
<col width="5%">
<col width="25%">
<col width="68%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th align="left">Name</th>
<th align="left">Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td align="left"><a href="https://handbrake.fr/" target="_blank" rel="external">HandBrake</a></td>
<td align="left">跨平台的免费视频转换工具</td>
</tr>
</tbody>
</table>
<h2 id="其他应用">其他应用</h2>
<table>
<colgroup>
<col width="5%">
<col width="25%">
<col width="68%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th align="left">Name</th>
<th align="left">Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td align="left"><a href="http://www.netsarang.com/products/xsh_overview.html" target="_blank" rel="external">Xshell</a></td>
<td align="left">Windows下登陆服务器</td>
</tr>
<tr class="even">
<td>2</td>
<td align="left"><a href="https://winscp.net/eng/docs/lang:chs" target="_blank" rel="external">WinSCP</a></td>
<td align="left">Windows与Linux之间数据互相拷贝</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[博客托管的一些调整]]></title>
      <url>http://seisman.info/blog-hosts.html</url>
      <content type="html"><![CDATA[<p>博客托管一直是一个比较头疼的问题。作为一个中文博客，访问者必然主要来自于国内，也有少量访问者来自于美国、加拿大等国家的中国人。如果将博客托管在国内主机，可以保证国内大部分人的访问速度，但是托管在国内服务器上的网站必须进行备案，想想就觉得很麻烦；如果将博客托管在国外主机，则大部分国内读者访问网站的速度会很慢，甚至可能由于墙的问题而完全无法访问。</p>
<a id="more"></a>
<p>刚使用静态博客的时候，一直将博客托管在国外的 GitHub 上，我自己测试的 ping 值大概是 300ms 左右，相对来说还是有些慢的。后来发现了 GitCafe，其可以用于免费托管博客，且主机位于国内所以国内读者访问速度很快，最重要的一点是虽然其主机在国内但却不要求进行备案。（一直无法理解这一点，但是现在的情况的确是这样，不知道能用多久。）将博客托管在 GitCafe 后，我测试的 ping 值大概是 20ms，速度的增长还是很明显的。也遇到个别国内的读者说不能正常访问，这个我就没办法了。</p>
<p>今天，对博客的托管进行了一些改进，同时将博客的静态 HTML 文件托管在 GitHub 和 GitCafe 上，国内读者访问时使用 GitCafe，国外读者访问时使用 GitHub，这样一来国内和国外的大部分读者都可以有比较好的访问速度了。</p>
<p>目前博客的一些细节记录如下：</p>
<ol style="list-style-type: decimal">
<li>博客源码（Pelican 配置以及 rst 源文件）托管在 <a href="https://github.com/seisman/seisman.info" target="_blank" rel="external">GitHub</a> 上；</li>
<li>生成的 HTML 文件 push 到 GitHub 上项目 <code>seisman.github.io</code> 的 <code>master</code> 分支，并使用 CNAME 设置别名；</li>
<li>生成的 HTML 文件 push 到 GitCafe 上项目 seisman 的 <code>gitcafe-pages</code> 分支，并设置别名。</li>
</ol>
<p>因而，实际上本博客有多个访问地址：</p>
<ul>
<li><a href="http://seisman.info" class="uri">http://seisman.info</a></li>
<li><a href="http://seisman.github.io" class="uri" target="_blank" rel="external">http://seisman.github.io</a></li>
<li><a href="http://seisman.gitcafe.io" class="uri" target="_blank" rel="external">http://seisman.gitcafe.io</a></li>
</ul>
<p>DNSPod 的具体设置如下图，这样的设置使得联通、电信、移动线路的用户（即大部分国内用户）走 GitCafe，其他用户走 GitHub。</p>
<div class="figure">
<img src="/images/2014071701.png">

</div>
<p>用 <a href="http://tool.17mon.cn/" target="_blank" rel="external">17MON</a> 测试了修改前后全球各地的 ping 值。</p>
<p>修改前 ping 值汇总如下图。国内最快的仅需要 1.4ms，国内平均需要 50ms。国外的话亚洲其他地区 ping 值在 150ms 左右，其他洲基本都在 300ms 以上。</p>
<div class="figure">
<img src="/images/2014071702.png">

</div>
<p>修改后 ping 值汇总如下图。国内访问的是 GitCafe 所以依然保持着 50ms 左右的 ping 值，北美洲访问的是 GitHub，均值也大概在 60ms 上下。港澳台以及亚洲其他国家现在走 GitHub 所以速度稍慢，其他洲的速度变化不明显。</p>
<div class="figure">
<img src="/images/2014071703.png">

</div>
<p>就目前的测试结果来看，国内大部分地区以及美国地区的访问者应该都可以有理想的访问速度了。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-07-17：初稿；</li>
<li>2014-12-26：GitCafe 的博客托管服务有所调整， <code>gitcafe.com</code> 改成 <code>gitcafe.io</code> ，需要在 DNS 中设置 CNAME；</li>
<li>2016-03-04：GitCafe 与 Coding 合并，博客托管到 Coding；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[彻底卸载 Intel Parallel Studio]]></title>
      <url>http://seisman.info/uninstall-intel-parallel-studio-completely.html</url>
      <content type="html"><![CDATA[<p>Intel 的开发工具默认安装在 <code>/opt/intel</code> 目录下，由于一时手贱，用 <code>sudo rm -rf /opt/intel</code> 把整个 intel 文件夹给删除了。</p>
<p>在重新安装 Intel Parallel Studio 的时候一直提示 “已安装该产品”，进而导致无法再次安装。实际上 是因为在上一次安装的时候，安装了一大堆 rpm 文件，并将文件的信息写入了 rpm 数据库中，而在删除的 时候数据库没有被更新。再次安装的时候，会在数据库中检测到，继而出现 “已安装该产品” 的提示。</p>
<p>解决办法很简单，找到所有已安装的 intel 相关的包，然后删除。</p>
<pre><code>rpm -qa | grep intel | awk &#39;{print&quot;yum remove -y&quot;,$1}&#39; &gt; uninstall.sh</code></pre>
<p>查看 <code>uninstall.sh</code> 文件，删除其中不以 intel 开头的包。然后用 root 权限执行该脚本即可。</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Intel </tag>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用 CentOS 7 打造合适的科研环境]]></title>
      <url>http://seisman.info/linux-environment-for-seismology-research.html</url>
      <content type="html"><![CDATA[<p>这篇博文记录了我用 CentOS 7 搭建 <strong>地震学科研环境</strong> 的过程，供我个人在未来重装系统时参考。对于其他地震学科研人员，也许有借鉴意义。</p>
<p>阅读须知：</p>
<ol style="list-style-type: decimal">
<li>本文适用于个人电脑，不适用于服务器；</li>
<li><strong>不推荐刚接触 Linux 的人使用 CentOS 发行版</strong>；</li>
<li>本文尽量写的浅显易懂，但要求读者掌握 Linux 基础知识；</li>
<li>本文所有操作均在 CentOS 7 下完成，其他发行版或多或少与 CentOS 7 不同，因而仅供参考；</li>
<li>本文所安装的软件纯粹出于个人习惯及喜好，读者应自己判断，按需安装；</li>
</ol>
<a id="more"></a>
<h2 id="安装-centos">安装 CentOS</h2>
<p>CentOS 7 的安装与其他 Linux 发行版的安装差不多，个别地方稍有不同。</p>
<h3 id="准备工作">准备工作</h3>
<ol style="list-style-type: decimal">
<li>准备材料
<ul>
<li>U 盘：容量 2GB 以上，用于制作 U 盘启动盘，因为在制作启动盘时会格式化 U 盘，所以 U 盘内不要包含重要资料</li>
<li><a href="http://mirrors.ustc.edu.cn/centos/7/isos/x86_64/CentOS-7-x86_64-LiveGNOME-1511.iso" target="_blank" rel="external">CentOS 7.2 LiveCD ISO 镜像文件</a></li>
<li><a href="http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/" target="_blank" rel="external">Universal USB installer</a>：Windows 下的 U 盘启动盘制作工具</li>
<li>一个已安装 Windows 的电脑：用于制作 U 盘启动盘</li>
</ul></li>
<li>运行 Universal USB installer 并制作 U 盘启动盘</li>
<li>将 U 盘插入计算机，重启，进入 BIOS 选择从 U 盘启动，即可进入 CentOS 的 LiveCD</li>
<li>进入 LiveCD 后，点击桌面的 “Install to Hard Drive” 即可安装</li>
</ol>
<p>注：Linux 下可以通过 <code>dd</code> 命令制作启动盘，但由于对原理不够了解，偶尔会导致制作失败， 或制作成功后 U 盘容量有问题，还是用 Windows 下的 Universal USB installer 比较靠谱。</p>
<h3 id="安装过程">安装过程</h3>
<ol style="list-style-type: decimal">
<li>选择安装过程中使用的语言，这里应 <strong>使用英语，不要使用汉语</strong>。若安装界面使用汉语，最终安装的系统中会出现两个比较麻烦的问题：
<ol style="list-style-type: decimal">
<li>家目录下的系统文件夹如 Downloads、Desktop 等会以中文表示，这使得在命令行 <code>cd</code> 变得很麻烦；</li>
<li>终端中某些字符用英文字体，某些字符用中文字体，效果非常差，需要自己修改终端字体方可；</li>
</ol></li>
<li>选择区域和城市：Asia 和 Shanghai</li>
<li>键盘使用 English(US) 而不是 English(UK)</li>
<li>Hostname 可以改也可以不改，我用 <code>saturn.geolab</code></li>
<li>安装的目的地，选择要使用的硬盘，在 “Other Storage Options” 处选择“I will configure partioning”，即手动分区</li>
</ol>
<h3 id="分区">分区</h3>
<p>CentOS7 的分区似乎比较特别，自认为经验很丰富的我在第一次安装 CentOS7 时还是在分区上耽误了很多时间。后来找到比较合适的分区方法，如下：</p>
<ul>
<li>点击 “Click here to create them automatically”，即让安装程序帮忙分区</li>
<li>默认的分区方案是使用 LVM，其好处在于 “当机器有多块硬盘时，在使用的时候看上去只有一块”</li>
<li>默认的文件系统为 XFS 而不是以前常用的 EXT4；</li>
<li>自动分区完成后，再根据自己的需求，手动修改分区细节
<ul>
<li><code>/boot</code> ：CentOS 自动分配，一定不要乱改；</li>
<li><code>/</code> ：根目录，合理使用并及时清理的话 15G 就够了，不过建议 30G 以上；</li>
<li><code>swap</code> ：与物理内存大小一致即可</li>
<li><code>/opt</code> ：个人习惯是将第三方软件都安装在 <code>/opt</code> 下，所以分了 70G</li>
<li><code>/home</code> ：余下的全部空间</li>
</ul></li>
<li>点击 “Begin to Install” 开始安装</li>
</ul>
<h3 id="真正的安装">真正的安装</h3>
<ol style="list-style-type: decimal">
<li>设置 root 密码</li>
<li>创建一般用户</li>
<li>等待安装完成</li>
<li>安装完成，重启</li>
<li>重启后，同意 License 即可</li>
</ol>
<h2 id="对系统的若干修改">对系统的若干修改</h2>
<h3 id="若干原则">若干原则</h3>
<p>为了搭建一个稳定的系统，尽量避免因为各种瞎折腾而导致的系统问题，特订立了一些软件安装的原则。 具体参见《<a href="/how-to-install-softwares-under-centos-7.html">CentOS7 下的软件安装方法与策略</a>》。</p>
<h3 id="给一般账号-root-权限">给一般账号 root 权限</h3>
<p>默认情况下，一般账号是没有 root 权限的。为什么不直接用 root 账号，而是要给一般账号 root 权限呢？</p>
<ul>
<li><strong>日常工作中使用 root 账号，是非常糟糕且危险的习惯！无论是服务器还是个人电脑都是如此。</strong></li>
<li>安装软件时需要 root 权限，只能 <code>su</code> 切换到 root 账户再安装。对于习惯使用 <code>sudo</code> 的人来说，还是有些麻烦。</li>
</ul>
<p>假设账户名为 seisman，要授予他 root 权限，则要修改配置文件 <code>/etc/sudoers</code> :</p>
<pre><code>$ su
# echo &#39;seisman ALL=(ALL) ALL&#39;&gt;&gt; /etc/sudoers # 向配置文件中加入语句
# tail -1 /etc/sudoers  # 检查一下是否正确
seisman ALL=(ALL) ALL</code></pre>
<p>其中 seisman 为当前用户名。</p>
<h3 id="添加第三方源">添加第三方源</h3>
<p>CentOS 由于很追求稳定性，所以官方源中自带的软件不多，因而需要一些第三方源，比如 EPEL、ATrpms、ELRepo、Nux Dextop、RepoForge 等。根据上面提到的软件安装原则，为了尽 可能保证系统的稳定性，此处大型第三方源只添加 EPEL 源、Nux Dextop 和 ELRepo 源。</p>
<h4 id="epel">EPEL</h4>
<p><a href="https://fedoraproject.org/wiki/EPEL" target="_blank" rel="external">EPEL</a> 即 Extra Packages for Enterprise Linux， 为 CentOS 提供了额外的 10000 多个软件包，而且在不替换系统组件方面下了很多功夫，因而可以放心使用。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install epel-release</div></pre></td></tr></table></figure>
<p>执行完该命令后，在 <code>/etc/yum.repos.d</code> 目录下会多一个 <code>epel.repo</code> 文件。</p>
<!-- #### Nux Dextop

[Nux Dextop](http://li.nux.ro/repos.html) 中包含了一些与多媒体相关的软件包，作者尽量保证不覆盖 base 源。官方说明中说该源与 EPEL 兼容，实际上个别软件包存在冲突，但基本不会造成影响:

    sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm

完成该命令后，在 `/etc/yum.repos.d` 目录下会多一个 `nux-dextop.repo` 文件。-->
<h4 id="elrepo">ELRepo</h4>
<p>ELRepo 包含了一些硬件相关的驱动程序，比如显卡、声卡驱动:</p>
<pre><code>sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
sudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</code></pre>
<p>完成该命令后，在 <code>/etc/yum.repos.d</code> 目录下会多一个 <code>elrepo.repo</code> 文件。</p>
<h3 id="安装-yum-axelget">安装 yum-axelget</h3>
<p><a href="https://dl.fedoraproject.org/pub/epel/7/x86_64/repoview/yum-axelget.html" target="_blank" rel="external">yum-axelget</a> 是 EPEL 提供的一个 yum 插件。使用该插件后用 yum 安装软件时可以并行下载，大大提高了软件的下载速度，减少了下载的等待时间:</p>
<pre><code>sudo yum install yum-axelget</code></pre>
<p>安装该插件的同时会安装另一个软件 axel。axel 是一个并行下载工具，在下载 http、ftp 等简单协议的文件时非常好用。</p>
<h3 id="第一次全面更新">第一次全面更新</h3>
<p>在进一步操作之前，先把已经安装的软件包都升级到最新版:</p>
<pre><code>sudo yum update</code></pre>
<p>要更新的软件包有些多，可能需要一段时间。不过有了 yum-axelget 插件，速度已经快了很多啦。</p>
<h3 id="重启">重启</h3>
<p>第一次全面更新完之后建议重启。</p>
<h3 id="删除多余的-kernel">删除多余的 kernel</h3>
<p>在前面的 <code>yum update</code> 执行之后，可能会将 kernel 也一起更新，则在启动 CentOS 时启动项中会有很多项。</p>
<p>确认当前使用的 kernel 版本号:</p>
<pre><code>$ uname -r
3.10.0-123.9.3.el7.x86_64</code></pre>
<p>查找当前系统安装的所有 kernel:</p>
<pre><code>$ rpm -qa | grep kernel | sort
kernel-3.10.0-123.8.1.el7.x86_64
kernel-3.10.0-123.9.2.el7.x86_64
kernel-3.10.0-123.9.3.el7.x86_64
kernel-devel-3.10.0-123.8.1.el7.x86_64
kernel-devel-3.10.0-123.9.2.el7.x86_64
kernel-devel-3.10.0-123.9.3.el7.x86_64
kernel-headers-3.10.0-123.9.3.el7.x86_64
kernel-tools-3.10.0-123.9.3.el7.x86_64
kernel-tools-libs-3.10.0-123.9.3.el7.x86_64</code></pre>
<p>可以看出有三个版本的 kernel，123.8.1、123.9.2 和 123.9.3。除了最新的 kernel 外，建议多保留一个旧 kernel，以免新 kernel 出现问题时可以通过旧 kernel 进入系统。因而此处删除 123.8.1 版本的 kernel:</p>
<pre><code>sudo yum remove kernel-3.10.0-123.8.1.el7.x86_64
sudo yum remove kernel-devel-3.10.0-123.8.1.el7.x86_64</code></pre>
<h2 id="基础开发环境">基础开发环境</h2>
<h3 id="gcc-系列">GCC 系列</h3>
<pre><code>sudo yum install gcc                     # C 编译器
sudo yum install gcc-c++                 # C++ 编译器
sudo yum install gcc-gfortran            # Fortran 编译器
sudo yum install compat-gcc-44           # 兼容 gcc 4.4
sudo yum install compat-gcc-44-c++       # 兼容 gcc-c++ 4.4
sudo yum install compat-gcc-44-gfortran  # 兼容 gcc-fortran 4.4
sudo yum install compat-libf2c-34        # g77 3.4.x 兼容库</code></pre>
<h3 id="软件开发辅助工具">软件开发辅助工具</h3>
<pre><code>sudo yum install make
sudo yum install gdb     # 代码调试器
sudo yum install cmake   # Cmake
sudo yum install git     # 版本控制</code></pre>
<h2 id="驱动程序">驱动程序</h2>
<h3 id="显卡驱动">显卡驱动</h3>
<p>Linux 默认只使用开源的显卡驱动，就目前的情况来看，开源驱动的效果还是不错的，但跟官方的 闭源驱动相比还是有一定差距。最明显的区别是，在使用 SAC 的 ppk 功能放大波形时，使用开源驱动会 出现延迟，而使用官方闭源则整个过程非常顺畅。</p>
<p>关于显卡驱动的安装，请参考 <a href="/install-nvidia-drivers-under-linux.html">Linux 下安装 nvidia 显卡驱动</a> 一文中的 “从 ELRepo 源中安装驱动” 部分。</p>
<p><strong>注意</strong>：目前的显卡驱动似乎有问题，安装后终端有时会出现屏幕闪烁、一屏文字上下重复跳动的情况， 稍微有些影响用 vim 写代码。是否要安装显卡驱动自己决定。</p>
<h3 id="ntfs-驱动">NTFS 驱动</h3>
<p>CentOS 下默认无法挂载 NTFS 格式的硬盘。需安装 nfts-3g 即可实现即插即用:</p>
<pre><code>sudo yum install ntfs-3g</code></pre>
<h2 id="进阶开发环境">进阶开发环境</h2>
<h3 id="java-环境">Java 环境</h3>
<p>Java 的一大特色在于跨平台，安装了 Java 运行环境，即可运行 Java 程序:</p>
<pre><code>sudo yum install java                        # java 运行环境</code></pre>
<h3 id="clang-系列">Clang 系列</h3>
<p>Clang 可以认为是 GCC 的替代品，可以用于编译 C、C++、Objective-C 和 Objective-C++。其提供了更友好的 报错信息，在有些方面比 GCC 更友好，同时其提供了一个代码静态分析器，可以用于分析代码中可能出现的 bug 和内存溢出问题。</p>
<pre><code>sudo yum install clang             # clang 编译器
sudo yum install clang-analyzer    # clang 静态分析器</code></pre>
<h3 id="intel-系列">Intel 系列</h3>
<p>Intel 的大部分软件都是非开源且收费的，但同时部分软件也提供了 Linux 下的非商业免费版。 比如 icc、mkl 数学库以及代码性能分析工具等。</p>
<p>Intel 软件的申请以及安装参考《<a href="/intel-non-commercial-software.html">Intel 非商业免费开发工具</a>》。</p>
<p>还有一点需要注意的是，Intel 也提供了并行相关的几个命令，比如 mpicc、mpirun。所以 openmpi、mpich 和 intel 三者，在并行时只能用其中一个。</p>
<h3 id="并行计算">并行计算</h3>
<p>并行可以用 openmpi，也可以用 mpich，二者的功能可以认为是完全相同的。由于二者提供了几乎一样的命令， 所以二者可以同时安装，但是不可以同时处于使用状态。</p>
<h4 id="openmpi">openmpi</h4>
<p>安装 openmpi:</p>
<pre><code>sudo yum install openmpi openmpi-devel</code></pre>
<p>安装后，二进制文件位于 <code>/usr/lib64/openmpi/bin</code> 下，动态库文件位于 <code>/usr/lib64/openmpi/lib</code> 下，因而实际使用的话还需要额外的配置，在 <code>.bashrc</code> 中加入如下语句:</p>
<pre><code>export PATH=/usr/lib64/openmpi/bin/:${PATH}
module load mpi/openmpi-x86_64</code></pre>
<p>PS：要使用 <code>module</code> 命令需要先安装 <code>environment-modules</code> 包。</p>
<h4 id="mpich">mpich</h4>
<p>安装 mpich:</p>
<pre><code>sudo yum install mpich mpich-devel</code></pre>
<p>安装后，二进制文件位于 <code>/usr/lib64/mpich/bin</code> 下，动态库文件位于 <code>/usr/lib64/mpich/lib</code> 下， 因而实际使用的话还需要额外的配置，在 <code>.bashrc</code> 中加入如下语句:</p>
<pre><code>export PATH=/usr/lib64/mpich/bin/:${PATH}
module load mpi/mpich-x86_64</code></pre>
<h2 id="脚本语言环境">脚本语言环境</h2>
<h3 id="perl">Perl</h3>
<p>CentOS 7.0 自带了 Perl 5.16.3（2013 年 03 月 11 日发布），目前的最新版本为 5.20.1（2014 年 09 月 14 日发布）。</p>
<h4 id="系统自带-perl">系统自带 Perl</h4>
<p>系统自带 Perl，就目前来看，版本不算老，基本够用。官方源和 EPEL 源中提供了 1000 多个模块，可以直接用 yum 安装:</p>
<pre><code>sudo yum install perl-Parallel-ForkManager  # 并行模块</code></pre>
<p>若源中没有已打包好的模块，也可以使用 perl 自带的 cpan 来安装模块。</p>
<p>优先级：yum &gt; cpan。</p>
<h4 id="plenv-管理新版本">plenv 管理新版本</h4>
<p>若需要使用最新版本的 perl，可以使用 <a href="/perl-plenv.html">plenv</a> 安装新版本的 perl，并使用 plenv 提供的 cpanm 命令安装模块:</p>
<pre><code>cpanm install Parallel::ForkManager # 并行模块</code></pre>
<h3 id="python">Python</h3>
<p>CentOS 7.0 自带 Python 2.7.5，目前 Python 2 的最新版本为 2.7.8，Python 3 的最新版本为 3.4.2。</p>
<h4 id="系统自带-python">系统自带 Python</h4>
<p>系统自带的 Python 2.7.5，基本已经够用，Python 2 常用的模块在官方源或 EPEL 源中也有有编译好的包， 因而直接通过 yum 安装即可:</p>
<pre><code>sudo yum install python-matplotlib  # 2D 绘图库
sudo yum install PyQt4  # Qt4 的 Python 绑定
sudo yum install numpy  # 数组操作库
sudo yum install scipy  # 科学计算库
sudo yum install python-requests  # 网页请求
sudo yum install python-docopt  # 命令行参数分析器
sudo yum install gdal-python    # gdal 的 Python 绑定</code></pre>
<h4 id="pyenv-管理-python3">pyenv 管理 Python3</h4>
<p>Python2 与 Python3 之间是不完全兼容的，而我以 Python3 为主，所以需要安装一个 Python3。</p>
<p>首先，安装 <a href="/python-pyenv.html">pyenv</a> 来管理多个 Python 版本，然后利用 pyenv 安装 anaconda3 （即 Python3.4）。anaconda 自带了众多科学计算所需的包，免去了安装的麻烦，对于其他包， 则可以利用 Python 自带的 pip 安装:</p>
<pre><code>pip install requests
pip install docopt</code></pre>
<h2 id="编程相关软件">编程相关软件</h2>
<h3 id="编辑器">编辑器</h3>
<p>写代码的时候选一个好用的编辑器很重要，用的比较多的编辑器如下：</p>
<ol style="list-style-type: decimal">
<li>vim</li>
<li>emacs</li>
<li>atom</li>
<li>sublime text 3</li>
<li>Visual Studio Code</li>
</ol>
<h3 id="ide">IDE</h3>
<ul>
<li>Python IDE：<a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="external">PyCharm Community Edition</a></li>
</ul>
<h2 id="日常软件">日常软件</h2>
<h3 id="office-套件">Office 套件</h3>
<h4 id="libreoffice">LibreOffice</h4>
<p>大多数 Linux 发行版都自带 LibreOffice:</p>
<pre><code>sudo yum install libreoffice</code></pre>
<p>LibreOffice 与 Microsoft Office 的兼容性不太好，操作界面与 MS Office 也有较大差异，让人不太习惯。</p>
<h4 id="wps-office">WPS Office</h4>
<p>若在 Linux 下对于文档处理有更高一些的要求，可以尝试目前还处于测试版的 WPS Office for Linux。 WPS Office 的兼容性以及界面都比 LibreOffice 要好很多，值得期待，当然还是不能做到完全兼容 MS Office。</p>
<p>安装过程参考 <a href="/wps-office-for-centos7.html">CentOS 下安装 WPS Office</a> 一文。</p>
<h3 id="pspdf-阅读器">PS/PDF 阅读器</h3>
<p>系统自带的 evince 阅读器，可以打开 PS 和 PDF 文件，基本足够日常的使用了。</p>
<h4 id="zathura">zathura</h4>
<p>zathura 可以查看 PS、PDF、djvu 格式的文件，可以作为 evince 的替代品:</p>
<pre><code>sudo yum install zathura zathura-plugins-all</code></pre>
<h4 id="ghostscript">ghostscript</h4>
<pre><code>sudo yum install ghostscript</code></pre>
<h4 id="master-pdf-editor">master-pdf-editor</h4>
<p>官方网站: <a href="https://code-industry.net/free-pdf-editor/" class="uri" target="_blank" rel="external">https://code-industry.net/free-pdf-editor/</a></p>
<pre><code>sudo yum localinstall http://get.code-industry.net/public/master-pdf-editor3-3.2.62-1.x86_64.rpm</code></pre>
<h3 id="tex-live-2015">TeX Live 2015</h3>
<p>系统是自带了 TeXLive，版本较老，还是安装最新版比较好。</p>
<p>参考 <a href="/install-texlive-under-linux.html">Linux 下安装 TeXLive</a> 一文。</p>
<h3 id="mendeley">Mendeley</h3>
<p>Mendeley 是一个跨平台的文献管理软件，其内部自带了一个可以添加注释的 PDF 阅读器。</p>
<p>下载 Generic Linux (64 bits)：http://www.mendeley.com/download-mendeley-desktop</p>
<p>安装:</p>
<pre><code>tar -xvf mendeleydesktop-1.12.3-linux-x86_64.tar.bz2  # 解压
sudo mv mendeleydesktop /opt  # 复制到 / opt 下
cd /opt/mendeleydesktop/bin   # cd 进去
./install-mendeley-link-handler.sh /opt/mendeleydesktop/bin/mendeleydesktop
sudo yum install qtwebkit  # 安装依赖包</code></pre>
<p>注销重新登陆，在 Application-&gt;Education 下即可看到 mendeley 的相关项目。不过是 没有软件的图标的，强迫症不能忍，用下面的命令解决:</p>
<pre><code>cp /opt/mendeleydesktop/share/icons/hicolor/128x128/apps/mendeleydesktop.png ~/.local/share/icons/</code></pre>
<h3 id="google-chrome-浏览器">Google Chrome 浏览器</h3>
<p>默认的浏览器是 Firefox，还是更喜欢 Chrome 浏览器。</p>
<p>Google 官方源在国内可能无法正常访问，故而添加 Fedora 中文社区提供的镜像源:</p>
<pre><code>sudo wget http://repo.fdzh.org/chrome/google-chrome-mirrors.repo -P /etc/yum.repos.d/</code></pre>
<p>安装:</p>
<pre><code>sudo yum install google-chrome-stable</code></pre>
<h3 id="opera-浏览器">Opera 浏览器</h3>
<p>也可以选择 Opera 浏览器。</p>
<p>下载地址：http://www.opera.com/download/guide/?os=linux</p>
<p>选择 CentOS RPM package 进行下载。下载完成后，执行:</p>
<pre><code>sudo yum localinstall opera-12.16-1860.x86_64.rpm</code></pre>
<p>想要卸载的话，就执行:</p>
<pre><code>sudo yum remove opera</code></pre>
<h3 id="flash-插件">Flash 插件</h3>
<p>Flash 插件主要是看在线视频的时候要用。Google 浏览器自带了 Flash 插件，所以这里安装的 flash 插件主要是为了 firefox。</p>
<pre><code>sudo rpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm
sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux
sudo yum install flash-plugin</code></pre>
<h3 id="解压软件">解压软件</h3>
<p>解压 7z 或 zip 格式需要 p7zip，由 EPEL 提供:</p>
<pre><code>sudo yum install p7zip</code></pre>
<p>解压 rar 格式可以使用 <a href="https://unarchiver.c3.cx/commandline" target="_blank" rel="external">unar</a>，该软件位于 EPEL 源中：</p>
<pre><code>sudo yum install unar</code></pre>
<h3 id="ftp-客户端">FTP 客户端</h3>
<p>FTP 客户端，还是有界面的 filezilla 比较方便些。</p>
<pre><code>sudo yum install filezilla</code></pre>
<h3 id="google-earth">Google Earth</h3>
<p>到 https://www.google.com/earth/download/ge/agree.html 下载64位rpm包，执行如下命令安装:</p>
<pre><code>sudo yum localinstall google-earth-stable_current_x86_64.rpm</code></pre>
<h2 id="效率类软件">效率类软件</h2>
<p>这一类工具能够在不同方面提高科研的效率，也提高了使用者的体验。</p>
<h3 id="终端模拟器">终端模拟器</h3>
<p>Gnome 自带的终端模拟器是 gnome-terminal。经常会需要开十几个终端，切换和管理起来比较麻烦。</p>
<h4 id="terminator">terminator</h4>
<p>terminator 有很多功能，我只用到了终端分割的功能。 <code>Ctrl+Shift+O</code> 对终端水平分隔， <code>Ctrl+Shift+E</code> 对终端垂直分隔， <code>Alt + 上下左右</code> 可以在各子终端中切换。terminator 由 Nux Dextop 提供:</p>
<pre><code>sudo yum install terminator</code></pre>
<h4 id="guake">guake</h4>
<p>有些时候需要临时执行一两个命令，但是又不想额外启动一个终端的情况下，guake 是个不错的选择。</p>
<pre><code>sudo yum install guake</code></pre>
<p>安装完成后，在 Application-&gt;System Tools 里找到 guake Terminal 即可启动。按下 F12 即可呼出 guake，再次按下 F12 即可隐藏。也可在终端执行 <code>guake-prefs</code> 对 gauke 进行配置。</p>
<h3 id="zsh-与-oh-my-zsh">zsh 与 oh my zsh</h3>
<p>Linux 下有很多 shell，比如最常见的 bash，除此之外还有 csh、ksh。zsh 也是一个 shell。</p>
<p>zsh 的特点在于：</p>
<ul>
<li>语法基本完全兼容于 bash，一般用户完全体会不到其区别</li>
<li>zsh 提供命令补全特性，比 bash 的补全要更好用</li>
<li>可配置性强</li>
</ul>
<p>完全不经配置的 zsh 已经很好用了，一般用户也没必要花时间研究配置。 <a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="external">oh my zsh</a> 是一群人一起维护的一套 zsh 配置文件。 直接用这个配置文件，稍稍了解一点会有更好的体验。</p>
<p>安装 zsh:</p>
<pre><code>sudo yum install zsh</code></pre>
<p>安装 oh my zsh:</p>
<pre><code>curl -L http://install.ohmyz.sh | sh</code></pre>
<p>上面的命令，做了如下几件事情：</p>
<ul>
<li>下载 <code>oh my zsh</code> 到 <code>~/.oh-my-zsh</code></li>
<li>备份已有的 zsh 配置文件 <code>~/.zshrc</code> ，并复制新的 <code>.zshrc</code> 文件</li>
<li>将当前用户的默认 shell 由 bash 改成 zsh</li>
</ul>
<p>第三步中，会报错如下： <code>chsh: &quot;/usr/bin/zsh&quot; is not listed in /etc/shells.</code> ，需要手动修改默认 shell:</p>
<pre><code>chsh -s /bin/zsh</code></pre>
<p>chsh 命令修改的是 login shell，因而需要退出当前用户并重新登陆，以后用户的默认 shell 就从 bash 变成了 zsh，所有的配置都不用写到 <code>.bashrc</code> 而要写到 <code>.zshrc</code> 中。</p>
<p>在 <code>.zshrc</code> 中可以选择喜欢的主题，以及适当数量的插件。下面列出我在用的插件:</p>
<ol style="list-style-type: decimal">
<li><p>git</p>
<p>该插件为 git 的众多常用命令提供了更简单的别名，比如 <code>git status</code> 的别名是 <code>gst</code>， 大大减少了击键数。但该插件中 <code>git mergetool --no-prompt</code> 的别名是 <code>gmt</code>， 与 GMT 软件冲突，需要将该插件的目录 git 复制到 custom/plugins 下，然后删除其中的 gmt 别名；</p></li>
<li>命令补全插件: pip, pyenv</li>
<li>sudo：按两下 <code>ESC</code> 即可在当前命令前加上 <code>sudo</code></li>
<li><p>yum：为常见的 yum 命令提供别名</p></li>
</ol>
<h3 id="autojump">autojump</h3>
<p><a href="https://github.com/joelthelion/autojump" target="_blank" rel="external">autojump</a> 是一个非常智能的目录快速切换的工具。简单演示如下:</p>
<pre><code>$ pwd
/home/seisman
$ cd Desktop
$ cd /opt
$ cd /usr/local

# 用 j 命令迅速从 / usr/local 跳转到与 des 匹配的目录，这里只有 Desktop 可以匹配
$ j des
$ pwd
/home/seisman/Desktop</code></pre>
<p>用法差不多就这样，具体看项目主页。</p>
<p>安装:</p>
<pre><code>sudo yum install autojump
sudo yum install autojump-zsh</code></pre>
<h3 id="中文输入法">中文输入法</h3>
<p>由于使用的是全英文安装，所以默认是没有中文输入法的。</p>
<p>在“Application”-&gt;“Settings”-&gt;“Region &amp; Language” 中将“Chinese（Intelligent Pinyin）”添加到“Input Sources” 中即可使用中文输入法。默认使用“Shift”键切换中文输入法。</p>
<h3 id="等宽字体">等宽字体</h3>
<p>编程要用等宽字体，这点是常识了。一款适合编程的等宽字体，至少要满足如下几个要求：</p>
<ol style="list-style-type: decimal">
<li>易于区分 “1”、“i” 和“l”</li>
<li>易于区分 “0”、“o” 和“O”</li>
<li>易于区分中文下的左引号和右引号</li>
<li>美观</li>
</ol>
<p>目前选择的 Source Code Pro。将解压后的字体文件放在 <code>~/.fonts</code> 目录下，并修改终端、gedit 以及其他编辑器、IDE 等的默认字体。</p>
<h2 id="虚拟机">虚拟机</h2>
<p>有时候可能需要在 Windows 下做一些操作，如果机器性能足够好的话，可以安装虚拟机。</p>
<h3 id="virtualbox-虚拟机">VirtualBox 虚拟机</h3>
<p>VirtuabBox 的安装:</p>
<pre><code>wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo
sudo mv virtualbox.repo /etc/yum.repos.d/
sudo yum install VirtualBox-5.0</code></pre>
<p>需要注意两点：</p>
<ul>
<li>若机器性能不够，虚拟机的使用体验会非常差，所以不建议在老机器上使用；</li>
<li>更新 kernel 之后需要执行 <code>sudo /sbin/rcvboxdrv setup</code> ；</li>
<li>在 VirtualBox 安装虚拟系统后，记得使用 “设备”-&gt;“安装增强功能”，使用效果会更好；</li>
</ul>
<h3 id="gnome-boxes">gnome-boxes</h3>
<p>gnome-boxes 是 GNOME3 开发的一个虚拟机工具，使用体验不如 VirtualBox:</p>
<pre><code>sudo yum install gnome-boxes</code></pre>
<h3 id="wine">Wine</h3>
<p>Wine 是一个可以让 Windows 程序运行在 Linux 下的软件。类似虚拟机，但跟虚拟机又不太一样:</p>
<pre><code>sudo yum install wine</code></pre>
<h2 id="同步网盘">同步网盘</h2>
<p>网盘根据功能大概可以分为两类：同步网盘和备份网盘。既然是同步网盘，Linux 下 的客户端必不可少。就目前已知的情况来看，CentOS7 下能使用的同步网盘只有三个： Dropbox、MEGA 和坚果云。</p>
<p>我主要用同步网盘将 Linux 机器上的 PDF 文献同步到 iPad 上。</p>
<h3 id="dropbox">Dropbox</h3>
<p>又是一个被墙的工具，熟练掌握科学上网技巧的人可以使用，一般人还是不要用了。</p>
<pre><code>wget https://www.dropbox.com/download?dl=packages/fedora/nautilus-dropbox-1.6.2-1.fedora.x86_64.rpm
sudo rpm -i nautilus-dropbox-1.6.2-1.fedora.x86_64.rpm</code></pre>
<h3 id="mega">MEGA</h3>
<p>MEGA： <a href="https://mega.co.nz/" class="uri" target="_blank" rel="external">https://mega.co.nz/</a></p>
<p>免费容量 50G，作为同步盘来说基本是够用了。</p>
<pre><code># 下载主程序
wget https://mega.nz/linux/MEGAsync/CentOS_7/x86_64/megasync-CentOS_7.x86_64.rpm
# 下载文件管理器扩展（可选）
wget https://mega.nz/linux/MEGAsync/CentOS_7/x86_64/nautilus-megasync-CentOS_7.x86_64.rpm
sudo yum localinstall megasync-CentOS_7.x86_64.rpm
sudo yum localinstall nautilus-megasync-CentOS_7.x86_64.rpm</code></pre>
<h3 id="坚果云">坚果云</h3>
<p>国内的全平台同步网盘，不限空间，但限制每月上传流量 1G，下载流量 3G。</p>
<pre><code># 坚果云依赖于 notify-python
sudo yum install notify-python
# 下载
wget https://jianguoyun.com/static/exe/installer/fedora/nautilus_nutstore_amd64.rpm
sudo rpm -i nautilus_nutstore_amd64.rpm</code></pre>
<h2 id="工具软件">工具软件</h2>
<h3 id="视频下载工具">视频下载工具</h3>
<p><a href="https://github.com/soimort/you-get" target="_blank" rel="external">you-get</a> 和 <a href="https://github.com/rg3/youtube-dl" target="_blank" rel="external">youtube-dl</a> 是两个用于从视频网站上下载视频文件的工具。其中，后者支持的网站更多，但前者对国内的视频网站支持更好。</p>
<pre><code>pip install you-get
pip install youtube-dl
# EPEL 中提供了 youtube-dl 包，因而也可以使用 yum 安装。一般来说，pip 安装的版本更新一些</code></pre>
<h3 id="pdf-处理工具">PDF 处理工具</h3>
<p><a href="http://community.coherentpdf.com/" target="_blank" rel="external">cpdf</a> 是一个跨平台的 PDF 处理工具，可以完成常见的 PDF 合并、 切割、加密解密、书签、水印等功能。</p>
<p>下载已编译好的 <a href="https://github.com/coherentgraphics/cpdf-binaries/archive/master.zip" target="_blank" rel="external">二进制包</a>， 解压，并将与自己的平台对应的二进制文件复制到 <code>${HOME}/bin</code> 目录下即可使用。</p>
<h3 id="bt-软件">BT 软件</h3>
<p>transmission 是 Linux 下常用的 Torrent 下载软件:</p>
<pre><code>sudo yum install transmission</code></pre>
<p>在 “Application”-&gt;“Internet”-&gt; 中可以启动 transmission。</p>
<h3 id="uget">uGet</h3>
<p><a href="http://ugetdm.com/" class="uri" target="_blank" rel="external">http://ugetdm.com/</a></p>
<p>uGet 是 Linux 下的一个下载工具，支持 HTTP、HTTPS、FTP、Torrent 等，支持多连接，并可以监视剪贴板:</p>
<pre><code>sudo yum --enablerepo=epel-testing install uget aria2</code></pre>
<h3 id="截图软件-shutter">截图软件 shutter</h3>
<p>GNOME 自带了截图工具。 <code>PrtScn</code> 为截取整个屏幕； <code>Alt+PrtScn</code> 为截取当前窗口； <code>Shift+PrtScn</code> 为自定义截屏区域。</p>
<p><a href="http://shutter-project.org/" target="_blank" rel="external">shutter</a> 是一个功能更强大的截图工具，支持不同的截图方式、 图片格式，还支持图片的简单编辑与注释:</p>
<pre><code>sudo yum install shutter</code></pre>
<p>可以通过 <a href="http://shutter-project.org/faq-help/set-shutter-as-the-default-screenshot-tool/" target="_blank" rel="external">修改快捷键使 shutter 成为默认的截图工具</a>。</p>
<h3 id="其他工具">其他工具</h3>
<pre><code>sudo yum install nfs-utils     # 挂载 NFS 文件系统所必须
sudo yum install xclip         # 终端的文本复制工具
sudo yum install ImageMagick   # 其中的 import 和 convert 命令很有用
sudo yum install dos2unix unix2dos  # Windows 和 Linux 换行符互相转换
sudo yum install meld          # 图形界面下的文件差异比较工具</code></pre>
<h2 id="娱乐">娱乐</h2>
<h3 id="影音播放器">影音播放器</h3>
<p>Nux Dextop 提供了 mplayer 和 VLC，可以用于播放常见格式的音频和视频，二者选其一安装即可:</p>
<pre><code>sudo yum install mplayer
sudo yum install vlc</code></pre>
<h3 id="游戏">游戏</h3>
<pre><code>sudo yum install 2048-cli   # 2048 命令行版</code></pre>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="http://elrepo.org/tiki/tiki-index.php" target="_blank" rel="external">ELRepo 官方网站</a></li>
<li><a href="http://elrepo.org/tiki/kmod-nvidia" target="_blank" rel="external">ELRepo kmod-nvidia</a></li>
<li><a href="http://wiki.centos.org/zh/AdditionalResources/Repositories/GoogleYumRepos" target="_blank" rel="external">CentOS Yum 软件库样例</a></li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-07-15：初稿；</li>
<li>2014-09-05：EPEL 已经发布正式版；修改了 epel-release 的下载链接；修订了 import 步骤的错误；</li>
<li>2014-09-20：将小小输入法改为搜狗输入法；</li>
<li>2014-11-20：使用 zsh；</li>
<li>2014-11-24：加入了 VirtualBox 虚拟机；</li>
<li>2014-12-01：从 ELRepo 源中安装显卡驱动；</li>
<li>2014-12-02：新增 Opera 浏览器和 unrar；</li>
<li>2014-12-27：新增 pointdownload 下载工具；google chrome 采用非官方源镜像；</li>
<li>2014-12-28：修订 unrar 的 rpm 文件链接；</li>
<li>2015-01-03：新增同步网盘 Dropbox 和坚果云；删除 pointdownload；</li>
<li>2015-01-05：autojump 直接从 epel 中安装；新增 youtube-dl、you-get 和 2048-cli；</li>
<li>2015-01-07：新增 terminator 和 guake；</li>
<li>2015-01-27：新增 cpdf；</li>
<li>2015-03-03：新增 filezilla 和 transmission；</li>
<li>2015-03-26：安装过程中不应使用中文安装界面；</li>
<li>2015-05-11：新增 MEGA 同步网盘；</li>
<li>2015-05-16：新增 gnome-boxes；</li>
<li>2015-06-26：新增 zathura 和 ghostscript；</li>
<li>2015-07-14：新增 Nux Dextop 源，uGet、shutter；</li>
<li>2015-09-03：删除地球物理相关软件；</li>
<li>2015-09-18：删除显卡驱动安装的具体步骤，直接链接到相关博文；</li>
<li>2016-09-12：新增google earth的安装；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Perl </tag>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux 下安装 NVIDIA 显卡驱动]]></title>
      <url>http://seisman.info/install-nvidia-drivers-under-linux.html</url>
      <content type="html"><![CDATA[<p>大部分 Linux 发行版都使用开源的显卡驱动 nouveau，对于 nvidia 显卡来说，还是闭源的官方驱动的效果更好。最明显的一点是，在使用 SAC 拾取震相的时候，使用官方显卡驱动在刷新界面的时候要快很多。</p>
<p>对于 CentOS 用户而言，有两种安装 NVIDIA 显卡驱动的方法，从 ELRepo 源中安装或从源码编译驱动。对于一般的 CentOS 用户，建议使用第一种方法。</p>
<a id="more"></a>
<h2 id="从-elrepo-源中安装驱动">从 ELRepo 源中安装驱动</h2>
<p>ELRepo 源中包含了一系列驱动程序。</p>
<ol style="list-style-type: decimal">
<li><p>添加 ELRepo 源:</p>
<pre><code>sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
sudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</code></pre></li>
<li><p>安装显卡检查程序:</p>
<pre><code>sudo yum install nvidia-detect</code></pre></li>
<li><p>检测显卡型号，并选择对应的驱动:</p>
<pre><code>$ nvidia-detect -v
Probing for supported NVIDIA devices...
[10de:06dd] NVIDIA Corporation GF100GL [Quadro 4000]
This device requires the current 346.47 NVIDIA driver kmod-nvidia</code></pre>
<p>根据 <code>nvidia-detect</code> 的输出信息，可以知道显卡的型号，以及要使用的驱动版本 <code>346.47</code> 。</p></li>
<li>安装显卡驱动
<ol style="list-style-type: decimal">
<li><p>若驱动版本为 304.xx，则安装 304xx 版本:</p>
<pre><code>sudo yum install nvidia-x11-drv-304xx nvidia-x11-drv-304xx-32bit</code></pre></li>
<li><p>若驱动版本为 340.xx，则安装 340xx 版本:</p>
<pre><code>sudo yum install nvidia-x11-drv-340xx nvidia-x11-drv-340xx-32bit</code></pre></li>
<li><p>对于大多数比较新的显卡来说，直接安装最新版的驱动即可:</p>
<pre><code>sudo yum install nvidia-x11-drv nvidia-x11-drv-32bit</code></pre></li>
</ol></li>
<li><p>安装过程中可能会给出软件冲突的警告，需要卸载以下软件包及其依赖:</p>
<pre><code>sudo yum remove xorg-x11-glamor</code></pre></li>
<li><p>重启</p></li>
</ol>
<h2 id="手动编译显卡驱动">手动编译显卡驱动</h2>
<h3 id="准备工作">准备工作</h3>
<ol style="list-style-type: decimal">
<li><p>查看显卡型号</p>
<pre><code>$ lspci | grep VGA
03:00.0 VGA compatible controller: NVIDIA Corporation GF100GL [Quadro 4000] (rev a1)</code></pre>
<p>从这里可以得出显卡型号为 Quadro 4000。</p></li>
<li><p>驱动下载</p>
<p>下载地址为： <a href="http://www.nvidia.com/Download/index.aspx?lang=en-us" class="uri" target="_blank" rel="external">http://www.nvidia.com/Download/index.aspx?lang=en-us</a></p></li>
</ol>
<h3 id="安装显卡驱动">安装显卡驱动</h3>
<ol style="list-style-type: decimal">
<li><p>安装 <code>kernel-devel</code></p>
<pre><code>sudo yum install kernel-devel</code></pre></li>
<li><p>将 <code>nouveau</code> 驱动加入黑名单，在 <code>/etc/modprobe.d/blacklist.conf</code> （CentOS 7 下为 <code>/usr/lib/modprobe.d/dist-blacklist.conf</code> ）中加入 <code>blacklist nouveau</code></p></li>
<li><p>备份 <code>initramfs</code> 文件</p>
<pre><code>sudo mv /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r).img.bak</code></pre></li>
<li><p>重建 <code>initramfs</code> 文件</p>
<pre><code>sudo dracut -v /boot/initramfs-$(uname -r).img $(uname -r)</code></pre></li>
<li>关机重启。由于此时 <code>nouveau</code> 驱动已经被禁用，桌面的显示效果非常差。</li>
<li><p>进入文本界面</p>
<pre><code>sudo init 3</code></pre>
<p>会直接进入文本界面。</p></li>
<li><p>在文本界面登录后直接安装</p>
<pre><code>sh NVIDIAxxx --kernel-source-path=/usr/src/kernels/x.xx.x-xxxxx</code></pre>
<p>其中 <code>NVIDIAxxx</code> 为 nvidia 驱动脚本文件， <code>x.xx.x-xxxx</code> 为 kernel 版本号。</p></li>
</ol>
<h3 id="更新-kernel-后重装驱动">更新 kernel 后重装驱动</h3>
<p>手动编译显卡驱动的一个麻烦之处在于，每次更新 kernel 之后，都会出现无法进入图形界面的情况，此时需要重新安装显卡驱动。</p>
<ol style="list-style-type: decimal">
<li>更新 kernel，重启，发现无法进入图形界面；</li>
<li>按下 <code>Alt+F2</code> ，进入文本界面，以 root 身份登陆；</li>
<li>备份 <code>initramfs</code> 文件</li>
<li>重建 <code>initramfs</code> 文件</li>
<li>重启，按下 <code>Alt+F2</code> ，进入文本界面，以 root 身份登陆；</li>
<li>执行第七步；再重启；</li>
</ol>
<h3 id="卸载显卡驱动">卸载显卡驱动</h3>
<pre><code>sh ./NVIDIA-Linux-xxxxx --uninstall</code></pre>
<h2 id="更新历史">更新历史</h2>
<ul>
<li>2014-07-13：初稿；</li>
<li>2014-11-01：加入了更新 kernel 之后的操作；</li>
<li>2014-12-01：添加 “从 ELRepo 源中安装显卡驱动” 一节，且不建议手动编译驱动；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7.0 下安装小小输入法]]></title>
      <url>http://seisman.info/install-yong-chinese-input-method-under-centos-7.html</url>
      <content type="html"><![CDATA[<p>另一篇博文： <a href="/fcitx-for-centos-7.html">CentOS7.0 下安装搜狗输入法</a></p>
<p>小小输入法也叫 yong 输入法，是一个免费但不开源的中文输入法，其作者为 dgod，2008 年发布第一个版本，至今六年时间依然在不断的更新。以一人之力默默维护一个项目 6 年时间，不得不让人佩服。</p>
<ul>
<li>官方网址： <a href="http://yong.dgod.net/" class="uri" target="_blank" rel="external">http://yong.dgod.net/</a></li>
<li>下载地址： <a href="http://yongim.ys168.com/" class="uri" target="_blank" rel="external">http://yongim.ys168.com/</a></li>
</ul>
<a id="more"></a>
<p>曾经试图在 CentOS 6.5 下安装该输入法，无奈 CentOS6.5 的库版本太低，一直安不上。下面记录一下在 CentOS 7.0 下的安装过程。</p>
<ol style="list-style-type: decimal">
<li>从官方网站下载 Linux 下的最新版本 <code>yong-lin-2.2.0-1.7z</code> 。</li>
<li>解压。7z 格式的压缩文件需要安装 <code>p7zip</code> 方可解压，在 EPEL 源中有提供该软件。</li>
<li><p>安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> yong</div><div class="line">$ su</div><div class="line"><span class="comment"># ./yong-tool.sh --install64   # 安装</span></div><div class="line"><span class="comment"># ./yong-tool.sh --select      # 设置为默认输入法</span></div></pre></td></tr></table></figure>
<p>想要卸载 yong</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ./yong-tool.sh --uninstall</div></pre></td></tr></table></figure></li>
<li><p>系统启用中文输入源</p>
<p>在 “Application”-&gt;“System Tools”-&gt;“Region&amp;Language”-&gt;“Input Source” 中添加中文输入源“Chinese(yong)”。也可以考虑删除 <code>English(US)</code> 输入法，直接使用 yong 自带的功能切换中英文输入法。</p></li>
<li><p>似乎需要关机重启。重启之后，在桌面右上角即出现了中英文输入法的图标。</p></li>
</ol>
<p>需要注意的是，yong 的安装其实只是在 <code>/usr/bin</code> 下建立了两个软链接 <code>yong</code> 和 <code>yong-config</code> ，并且在 <code>${HOME}</code> 下建立了文件夹 <code>.yong</code> ，其中包含了 yong 的配置文件。因而在第二步中解压的 yong 文件夹不可删除。</p>
<p>yong 的配置文件位于 <code>~/.yong/yong.ini</code>，可以根据需要修改，或者也可以直接用 <code>yong-config</code> 命令调出图形界面来修改。</p>
<p>我的配置如下：</p>
<ul>
<li>输入法状态栏主窗口位于左下角。由于使用了双显示器，默认的窗口位于右下角会使得状态栏位于另一个显示器。（使用过程中发现，在终端全屏的情况下，状态栏位于左下角会挡住部分终端的命令，目前没有合适的解决办法。或许可以考虑顶部居中。）</li>
<li>在系统输入源中删除英文输入，只留下中文的 yong 作为唯一输入源。使用默认的 <code>Ctrl+LShift</code> 作为切换输入法的快捷键。中英文切换快捷键设置为 <code>Ctrl+Space</code> 。默认的中英文切换键是 <code>LSHIFT</code> ，但是由于我习惯使用 <code>LSHIFT + 字母</code> 的方式来临时输入大写字母，所以如果使用 <code>LSHIFT</code> 进行中英文切换的话很容易导致误操作。</li>
<li>yong 自带了七种输入法，我只有拼音输入法，因而删除其他输入法，只留下 pinyin 输入法，并设其为默认值；</li>
<li><p>小小输入法支持百度、google、微软、QQ 和搜狗等云输入法，可以自行配置。配置如下:</p>
<pre><code>1=BaiduCloud

[cloud]
name = 百度云
engine=libcloud.so
arg=baidu</code></pre>
其他云输入法类似，其中 arg 可以取 baidu、google、qq、sogou、microsoft 等（似乎 sogou 和 microsoft 都不支持了？）。</li>
<li>默认使用 QQ 云输入法，特殊情况切换到百度云或谷歌云。由于国内连接的问题，使用谷歌云的时候有很明显的时间延迟，不建议使用。</li>
<li>yong 输入法还支持自定义皮肤或使用别人设计的皮肤，将下载的皮肤文件放在 <code>~/.yong/skin</code> 下即可。</li>
<li>一个不太方便的一点是状态栏貌似无法显示当前正在使用的中文输入法是哪一个。</li>
<li><p>在配置文件中的 <code>[IM]</code> 里加入 <code>ABCD=1</code>，这样在中文输入法的情况下按下 SHIFT 以及字母会直接将相应的大写字母输出出来，不必再经过中文输入法。</p></li>
</ul>
<p>参考:</p>
<ul>
<li><a href="http://www.mintos.org/software/xiaoxiao-input.html" class="uri" target="_blank" rel="external">http://www.mintos.org/software/xiaoxiao-input.html</a></li>
<li><a href="http://yong.dgod.net/read.php?tid=5&amp;fid=7" class="uri" target="_blank" rel="external">http://yong.dgod.net/read.php?tid=5&amp;fid=7</a></li>
<li><a href="http://yong.dgod.net/read.php?tid=25&amp;fid=7" class="uri" target="_blank" rel="external">http://yong.dgod.net/read.php?tid=25&amp;fid=7</a></li>
<li><a href="http://yong.dgod.net/read.php?tid=18&amp;fid=7" class="uri" target="_blank" rel="external">http://yong.dgod.net/read.php?tid=18&amp;fid=7</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 中文 </tag>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[USTC 网络通登录脚本 Python 版]]></title>
      <url>http://seisman.info/python-ustc-wlt-login.html</url>
      <content type="html"><![CDATA[<p>最近几日在学 Python 以及相关的网页请求模块，练习着重写了 USTC 网络通的登录脚本，比之前的 Perl 版要简短了很多，其中使用了 <code>Requests</code> 模块。</p>
<p>下载地址：<a href="https://github.com/seisman/python-notes/blob/master/USTC-wlt.py" target="_blank" rel="external">USTC-wlt.py</a></p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Python Script to login wlt @ USTC</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Author: Dongdong Tian @ USTC</span></div><div class="line"><span class="comment"># Date  : 2014/06/15</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">name = <span class="string">'xxxxxx'</span></div><div class="line">passwd = <span class="string">'xxxxxxxx'</span></div><div class="line">url = <span class="string">'http://wlt.ustc.edu.cn/cgi-bin/ip'</span></div><div class="line"></div><div class="line">print(<span class="string">"""\</span></div><div class="line">请选择出口：</div><div class="line">        1: 教育网出口 (国际, 仅用教育网访问, 适合看文献)</div><div class="line">        2: 电信网出口 (国际, 到教育网走教育网)</div><div class="line">        3: 联通网出口 (国际, 到教育网走教育网)</div><div class="line">        4: 电信网出口 2(国际, 到教育网免费地址走教育网)</div><div class="line">        5: 联通网出口 2(国际, 到教育网免费地址走教育网)</div><div class="line">        6: 电信网出口 3(国际, 到教育网走教育网, 到联通走联通)</div><div class="line">        7: 联通网出口 3(国际, 到教育网走教育网, 到电信走电信)</div><div class="line">        8: 教育网国际出口 (国际, 国内使用电信和联通, 国际使用教育网)</div><div class="line">        9: 移动测试国际出口 (国际, 无 P2P 或带宽限制)</div><div class="line">注：选择出口 2、3 无法使用的某些电子资源，使用出口 4、5、6 可能可以正常使用 """)</div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    port = int(input(<span class="string">"[1-9] "</span>))</div><div class="line">    <span class="keyword">if</span> port &gt;= <span class="number">1</span> <span class="keyword">and</span> port &lt;= <span class="number">9</span>:</div><div class="line">        port -= <span class="number">1</span></div><div class="line">        <span class="keyword">break</span></div><div class="line"></div><div class="line">print(<span class="string">"""</span></div><div class="line">使用时限：</div><div class="line">        1: 0s, 永久</div><div class="line">        2: 3600s, 1 小时</div><div class="line">        3: 14400s, 4 小时</div><div class="line">        4: 39600s, 11 小时</div><div class="line">        5: 50400s, 14 小时 """)</div><div class="line">expire = &#123;</div><div class="line">    <span class="string">'1'</span>:     <span class="number">0</span>,</div><div class="line">    <span class="string">'2'</span>:  <span class="number">3600</span>,</div><div class="line">    <span class="string">'3'</span>: <span class="number">14400</span>,</div><div class="line">    <span class="string">'4'</span>: <span class="number">39600</span>,</div><div class="line">    <span class="string">'5'</span>: <span class="number">50400</span>,</div><div class="line">&#125;</div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    exp = int(input(<span class="string">"[1-6] "</span>))</div><div class="line">    <span class="keyword">if</span> exp &gt;= <span class="number">1</span> <span class="keyword">and</span> exp &lt;= <span class="number">5</span>:</div><div class="line">        exp = expire[str(exp)]</div><div class="line">        <span class="keyword">break</span></div><div class="line"></div><div class="line">payload = &#123;</div><div class="line">    <span class="string">'cmd'</span>:      <span class="string">'set'</span>,</div><div class="line">    <span class="string">'exp'</span>:      exp,</div><div class="line">    <span class="string">'name'</span>:     name,</div><div class="line">    <span class="string">'password'</span>: passwd,</div><div class="line">    <span class="string">'type'</span>:     port,</div><div class="line">&#125;</div><div class="line">r = requests.get(url, data=payload)</div><div class="line"></div><div class="line"><span class="keyword">if</span> r.status_code != requests.codes.ok:</div><div class="line">    print(<span class="string">"request error with status code: %s"</span>, r.status_code)</div></pre></td></tr></table></figure>
<p>代码就 60 行左右，其中真正必要的代码才 10 行。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-06-16：初稿；</li>
<li>2014-06-24：修改已兼容 Python 2.7 和 Python 3.4。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> web </tag>
            
            <tag> USTC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SAC 修改绘图窗口的背景色]]></title>
      <url>http://seisman.info/change-background-color-of-window-in-sac.html</url>
      <content type="html"><![CDATA[<p>SAC 在绘图时默认使用白色作为背景色、用黑色绘制波形数据。这样的配色对比很明显，看起来也很清晰。</p>
<p>但是在需要长期查看波形、拾取震相时，黑底白线这种强烈的颜色对比，对眼睛很不友好，经常看着看着就花了。</p>
<p>SAC 的 color 命令可以修改绘图窗口的背景色。SAC 目前只支持几种简单的颜色：red、green、blue、yellow、cyan、magenta、black、white。其中 cyan 作为背景色是不错的选择。</p>
<p>因而，在绘图之前，使用 color 命令将窗口背景色修改为 cyan:</p>
<pre><code>color black background cyan</code></pre>
<p>每次绘图之前都执行这个命令显然比较麻烦，可以设置让 SAC 在启动时自带执行该命令。</p>
<p>在 <code>~/.bashrc</code> 中加入如下 <code>alias</code> 语句:</p>
<pre><code>alias sac=&quot;${SACHOME}/bin/sac ${SACAUX}/init.m&quot;</code></pre>
<p>并在 <code>${SACAUX}</code> 目录下（一般是 <code>/usr/local/sac/aux</code> ）新建文件 <code>init.m</code>，其内容为:</p>
<pre><code>color black background cyan</code></pre>
<p>即可。</p>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SAC技巧 </tag>
            
            <tag> 图像 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[gCAP 的安装]]></title>
      <url>http://seisman.info/install-gcap.html</url>
      <content type="html"><![CDATA[<p>gCAP 是 Prof. Lupei Zhu 发展的一种反演震源机制解的一种方法。目前该代码已经开源。</p>
<a id="more"></a>
<h2 id="gcap-安装步骤">gCAP 安装步骤</h2>
<ol style="list-style-type: decimal">
<li>下载 gCAP 源码： <a href="http://www.eas.slu.edu/People/LZhu/downloads/gcap1.0.tar" class="uri" target="_blank" rel="external">http://www.eas.slu.edu/People/LZhu/downloads/gcap1.0.tar</a></li>
<li><p>解压:</p>
<pre><code>tar -xvf gcap1.0.tar</code></pre></li>
<li><p>清理垃圾文件</p>
<p>软件包在发布的时候，没有做一些清理，遗留了一些没有用的临时文件，看起来很碍眼:</p>
<pre><code>rm junk.ps junk.out .gmtcommands</code></pre></li>
<li><p>下载辅助代码</p>
<p>gCAP 使用了 Numerical Recipes（简称 NR）中的一些函数，包括 <code>matrix</code> 、 <code>free_matrix</code> 、 <code>free_convert_matrix</code> 、 <code>jacobi</code> 、 <code>eigsrt</code> 。 由于 NR 是非开源非免费的软件，所以 gCAP 并没有将 NR 相关的代码放在包里。</p>
<p>网络上可以下载到 NR 的完整代码，这里仅给出 gCAP 所需的部分（注：此处存在版权问题！）。 下载该压缩包，解压，并将解压后的源代码放到 gCAP 的目录中。</p>
<p>gCAP_util 下载：<a href="http://seisman.qiniudn.com/downloads/gcap_utils.tar.gz" target="_blank" rel="external">gcap_utils.tar.gz</a></p></li>
<li><p>新的 Makefile</p>
<p>软件包自带的 Makefile 无法使用，因而对其进行了一些修改。修改幅度稍大，几乎算是重写了。</p>
<p>新 Makefile 下载地址：<a href="http://seisman.qiniudn.com/downloads/Makefile.gCAP" target="_blank" rel="external">Makefile.gCAP</a></p>
<p>下载之后，将其重命名为 Makefile，替换原目录中的同名文件，并根据自身情况修改 Makefile 文件中的 变量 <code>SACHOME</code> 、 <code>FC</code> 、<code>CC</code> 。</p></li>
<li><p>编译:</p>
<pre><code>make</code></pre></li>
<li><p>修改环境变量</p>
<p>要想在终端运行 gcap，需要系统能够正确找到二进制文件 <code>cap</code> 、<code>cap_dir</code> 、 <code>mtdcmp</code> 、 <code>radpttn</code> 以及脚本文件 <code>cap.pl</code> 和 <code>depth.pl</code>。</p>
<p>直接将 gcap 的源码路径加入到 PATH 环境变量中，即在 <code>~/.bashrc</code> 中加入类似如下语句:</p>
<pre><code>export PATH=/path/to/gcap:${PATH}</code></pre></li>
<li><p>修改脚本 <code>cap.pl</code></p>
<p><code>cap.pl</code> 中第 15 行与第 19 行包含了两个绝对路径，需要根据自身情况进行修改。</p>
<ul>
<li>第15行： <code>require &quot;$home/Src/cap/cap_plt.pl&quot;;</code> 中的路径改成 <code>cap_plt.pl</code> 的绝对路径，类似于 <code>require &quot;/path/to/gcap/cap_plt.pl&quot;</code></li>
<li>第19行： <code>$green</code> 是自己计算的格林函数库的位置。如果你不知道如何修改的话，就直接用默认值，并使用命令 <code>mkdir ~/data/models/Glib</code> 新建这个目录。</li>
</ul></li>
<li><p>修改绘图脚本 <code>cap_plt.pl</code></p>
<p>使用默认的脚本运行并绘图后，可能会发现整个图片都缩在图片的左下角的一个小区域 内，与示例中的图片相比有较大差别。出现这个错误的主要原因是，Prof. Zhu 的 GMT 默认 使用了 US 单位制，脚本中所有未显式指定单位的值使用的都是 inch，而其他人通常使用的都 是 SI 单位制，会将这些未显式指定单位的值使用默认单位 cm。</p>
<p>解决办法是，在 <code>cap_plt.pl</code> 的第 6 行之后加上如下语句:</p>
<pre><code>system &quot;gmtset MEASURE_UNIT inch&quot;;
system &quot;gmtset PAGE_ORIENTATION portrait&quot;;</code></pre>
<p>这两句的作用是设置默认单位为英寸，并设置纸张方向为 portrait 模式。</p></li>
</ol>
<h2 id="运行-gcap">运行 gcap</h2>
<p>在终端直接执行:</p>
<pre><code>$ cap.pl</code></pre>
<p>就会出现软件的用法说明。</p>
<p>软件包中自带了一个示例数据，下面来复现一下这个示例。</p>
<h3 id="用-fk-构建格林函数库">用 fk 构建格林函数库</h3>
<p>要运行 gcap，使用要使用 fk 建立格林函数库。如果你不知道 fk 是什么，请参考：</p>
<ol style="list-style-type: decimal">
<li><a href="/fk-installation.html">安装fk</a></li>
<li><a href="/fk-notes.html">fk 用法笔记</a></li>
</ol>
<p>要建立格林函数库，首先需要一个模型文件。gcap 的示例使用的是一个名为 cus 的模型，由于 gcap 没有使用 cus 这个模型文件，所以这里使用的是 fk 自带的 hk 模型。</p>
<pre><code># 切换到格林函数库所在目录
$ cd ~/data/models/Glib
# 为 hk 模型新建目录
$ mkdir hk
$ cd hk
# 将 fk 自带的 hk 模型文件复制到当前目录下
$ cp /path/to/fk/hk .
# 用 fk 计算格林函数库
$ fk.pl -Mhk/15/k -N512/0.2 -S2 05 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100 105 110 115 120 125 130 135 140 145 150 155 160 165 170 175 180 185 190 195 200 205 210 215 220 225 230 235 240 245 250 255 260 265 270 275 280 285 290 295 300 305 310 315 320 325 330 335 340 345 350 355 360 365 370 375 380 385 390 395 400 405 410 415
$ fk.pl -Mhk/15/k -N512/0.2 -S0 05 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100 105 110 115 120 125 130 135 140 145 150 155 160 165 170 175 180 185 190 195 200 205 210 215 220 225 230 235 240 245 250 255 260 265 270 275 280 285 290 295 300 305 310 315 320 325 330 335 340 345 350 355 360 365 370 375 380 385 390 395 400 405 410 415</code></pre>
<p><code>-M</code> 选项中 15 代表震源深度是 15 km，你可以从 1 km 一直算到 40 km 甚至更深，此处只算了 15 km 以供示例使用。</p>
<h3 id="运行-gcap-示例">运行 gcap 示例</h3>
<pre><code># 切换回 gcap 目录
$ cd /path/to/gcap
# 为了防止误操作，先将自带的示例备份一下
$ cp -r 20080418093700 20080418093700.bak
# 运行 gcap 示例
$ cap.pl -H0.2 -P0.3 -S2/5/0 -T35/70 -F -D2/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mhk_15/5.0 20080418093700</code></pre>
<p>运行该示例所使用的参数来自于 <code>cap.pl</code> 命令的说明文档，请自行查阅以了解每个参数的含义。 <code>-Mhk_15/5.0</code> 选项表示使用 hk 模型、震源深度为 15 km处的格林函数。</p>
<p>执行完毕后，会生成 <code>hk_15.ps</code> 和 <code>hk_15.out</code>，将其与示例自带的 <code>cus_15.ps</code> 和 <code>cus_15.out</code> 对比可发现，二者基本完全一致。</p>
<h2 id="关于段错误的说明">关于段错误的说明</h2>
<p>若直接运行二进制文件 <code>cap</code> 会出现段错误:</p>
<pre><code>$ cap
[1]    12763 segmentation fault  cap</code></pre>
<p>这是因为 <code>cap</code> 命令行中需要一个参数。记住，直接使用 <code>cap.pl</code> ，不要直接使用 <code>cap</code>。</p>
<h2 id="关于-gcap3d-的说明">关于 gCAP3D 的说明</h2>
<p>gCAP3D 是在 gCAP 的基础上修改得到的，与 gCAP 的区别在于其可以使用三维格林函数。 该代码也已经开源。</p>
<p>gCAP 和 gCAP3D 之间没有本质区别，本文的介绍以 gCAP 为准，在最后会介绍安装方法上 gCAP3D 与 gCAP 的不同。</p>
<p>gCAP3D 的安装与 gCAP 的步骤几乎完全相同（部分文件名以及行号可能不一致，读者自行判断），区别列出如下：</p>
<ul>
<li>下载地址： <a href="http://www.eas.slu.edu/People/LZhu/downloads/gCAP3D1.0.tar" class="uri" target="_blank" rel="external">http://www.eas.slu.edu/People/LZhu/downloads/gCAP3D1.0.tar</a></li>
<li>Makefile 下载地址： <a href="http://seisman.qiniudn.com/downloads/Makefile.gCAP3D" class="uri" target="_blank" rel="external">http://seisman.qiniudn.com/downloads/Makefile.gCAP3D</a></li>
</ul>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-06-13：初稿；</li>
<li>2016-03-12：加入了对 gCAP3D 的说明；</li>
<li>2016-04-07：微调文章结构，加入了对段错误的说明；</li>
<li>2016-07-31：完善了示例；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 震源机制解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 绘制双 Y 轴]]></title>
      <url>http://seisman.info/double-y-axis-plot.html</url>
      <content type="html"><![CDATA[<p>所谓双 Y 轴，指的是在一张图中同时使用两个完全不同的 Y 轴。这种类型的图在某些情况下会用到。</p>
<p>这样一张图的绘制其实很简单，只需要绘制两个 basemap 即可。第一个 basemap 只绘制 X 轴和左 Y 轴；第二个只绘制右 Y 轴。</p>
<a id="more"></a>
<p>GMT 的 <code>-B</code> 选项中，<code>WESN</code> 分别表示在四个坐标轴上显示坐标轴及标注文字、刻度；小写 <code>news</code> 表示在四个坐标轴上只显示坐标轴和刻度，不标注文字；若某个坐标轴上没有相关参数，则什么都不画。 因而第一个 basemap 使用 <code>SW</code>，第二个 basemap 使用 <code>E</code>。</p>
<div class="figure">
<img src="/images/2014061201.jpg">

</div>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">Rx=0/10</div><div class="line">R1=<span class="variable">$Rx</span>/0/1000</div><div class="line">R2=<span class="variable">$Rx</span>/0/1</div><div class="line">Jx=15c</div><div class="line">J1=X<span class="variable">$Jx</span>/10c</div><div class="line">J2=X<span class="variable">$Jx</span>/6c</div><div class="line">PS=doubleAxis.ps</div><div class="line"></div><div class="line"><span class="comment"># 写入 PS 头，这里的 J 和 R 可以任意</span></div><div class="line">psxy -J<span class="variable">$J1</span> -R<span class="variable">$R1</span> -T -K -Xc -Yc &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制左 Y 轴</span></div><div class="line">psbasemap -J<span class="variable">$J1</span> -R<span class="variable">$R1</span> -Ba2f1:X:/a100f50:<span class="string">"Left   Y"</span>:WS -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制一堆与左 Y 轴相关的数据</span></div><div class="line"><span class="comment"># ...</span></div><div class="line">psxy -J<span class="variable">$J1</span> -R<span class="variable">$R1</span> -Sc0.2c -Gred -K -O &lt;&lt;EOF&gt;&gt; <span class="variable">$PS</span></div><div class="line">1 100</div><div class="line">3 300</div><div class="line">5 500</div><div class="line">7 700</div><div class="line">9 800</div><div class="line">EOF</div><div class="line"></div><div class="line"><span class="comment"># 绘制右 Y 轴</span></div><div class="line">psbasemap -J<span class="variable">$J2</span> -R<span class="variable">$R2</span> -Ba2f1/a0.2f0.1:<span class="string">"Right    Y"</span>:E -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制一堆与右 Y 轴相关的数据</span></div><div class="line"><span class="comment"># ...</span></div><div class="line">psxy -J<span class="variable">$J2</span> -R<span class="variable">$R2</span> -Sa0.2c -Gblue -K -O &lt;&lt;EOF&gt;&gt; <span class="variable">$PS</span></div><div class="line">1 0.5</div><div class="line">3 0.3</div><div class="line">5 0.7</div><div class="line">7 0.2</div><div class="line">9 0.6</div><div class="line">EOF</div><div class="line"></div><div class="line"><span class="comment"># 写入 PS 尾，这里的 J 和 R 可以任意</span></div><div class="line">psxy -J<span class="variable">$J1</span> -R<span class="variable">$R1</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[等震中距线的绘制]]></title>
      <url>http://seisman.info/plot-equal-distance-lines.html</url>
      <content type="html"><![CDATA[<p>这里给出两个绘制等震中距线的方法，两种方法各有利弊，按需选取。</p>
<a id="more"></a>
<h2 id="等值线法">等值线法</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># This script works for GMT 4.5.13 only!</span></div><div class="line"><span class="comment"># You need to modify it if you use other versions of GMT.</span></div><div class="line"><span class="comment"># You should read notes below before you go.</span></div><div class="line"><span class="comment">#</span></div><div class="line">R=g</div><div class="line">J=H25c</div><div class="line">B=60/30</div><div class="line">PS=map.ps</div><div class="line">evlo=160</div><div class="line">evla=20</div><div class="line"></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 绘制底图</span></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B<span class="variable">$B</span> -Dc -A10000 -Glightblue -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 绘制震中位置</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$evlo</span> <span class="variable">$evla</span> | psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sa1c -Gred -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 计算全球每点到震中的距离</span></div><div class="line">gmtset ELLIPSOID Sphere</div><div class="line">grdmath -R<span class="variable">$R</span> -I1 <span class="variable">$evlo</span> <span class="variable">$evla</span> SDIST KM2DEG = dist.nc</div><div class="line"><span class="comment"># 绘制等值线</span></div><div class="line">grdcontour dist.nc -J<span class="variable">$J</span> -A15 -L0/60 -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">rm dist.nc</div></pre></td></tr></table></figure>
<p>grdmath 命令首先将全球（<code>-Rg</code>）划分为间隔为 1 度（<code>-I1</code>）的网格，并计算每个网格点到固定 点 <code>evlo</code>、<code>evla</code> 的距离（单位为 km），然后将 KM 转换为度。则最终生成的 <code>dist.nc</code> 中 包含了每个网格点到固定点的距离。最好使用 <code>grdcontour</code> 命令绘制等值线，即等震中距线。 <code>grdcontour</code> 命令的众多选项可以对具体的等值线效果做微调。</p>
<p>对 <code>grdmath</code> 的若干说明：</p>
<ol style="list-style-type: decimal">
<li>GMT 4.5.11 及之前的版本中，<code>SDIST</code> 的返回值单位为度；</li>
<li>GMT 4.5.12 及之后的版本中，<code>SDIST</code> 的返回值单位为 km；</li>
<li>GMT 5 中，<code>SDIST</code> 的返回值单位为 km；</li>
<li>从 GMT 4.5.12 开始，新增了 <code>KM2DEG</code> 操作，但 4.5.12 版本的 <code>KM2DEG</code> 有问题；</li>
<li>KM2DEG 操作仅适用于球状地球，因而要设置 <code>ELLIPSOID</code> 为 <code>Sphere</code>；</li>
<li>KM2DEG 近似等效于 <code>111.19 DIV</code>；</li>
</ol>
<div class="figure">
<img src="/images/2014052101.jpg">

</div>
<h2 id="椭圆法">椭圆法</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=g</div><div class="line">J=H25c</div><div class="line">B=60/30</div><div class="line">PS=map2.ps</div><div class="line">evlo=160</div><div class="line">evla=20</div><div class="line"></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B<span class="variable">$B</span> -Dc -A10000 -Glightblue -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$evlo</span> <span class="variable">$evla</span> | psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sa1c -Gred -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 15 度等值线</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$evlo</span> <span class="variable">$evla</span> 0 3335.8 3335.8 | psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -SE -K -O -W1p,red &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="comment"># 37.5 度等值线</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$evlo</span> <span class="variable">$evla</span> 0 8339.6 8339.6 | psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -SE -K -O -W1p,blue &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>该方法使用了 <code>psxy</code> 的 <code>-SE</code> 选项。-SE 本是用于绘制椭圆的，这里被用来绘制圆以表示等震中距线。</p>
<p>该命令需要的输入数据有 5 个，分别是椭圆的中心经度、中心纬度、短轴的方位角、短轴长度（km）、长轴长度（km）。此处另短轴长度与长轴长度相等，即得到特殊的椭圆 – 圆。</p>
<p>想要绘制一条震中距为 15 度的等震中距线，需要注意如下几点：</p>
<ul>
<li>对于圆来说，其长轴 = 短轴 = 直径 = 30 度；</li>
<li>长轴和短轴的单位是 km，因而需要将震中距乘以 111.19 转换为 km。</li>
</ul>
<div class="figure">
<img src="/images/2014052102.jpg">

</div>
<p>对于 GMT5，其提供了更简单的方法来绘制一个以千米为直径单位的圆，即 <code>-SE-</code> 选项，该选项需要 3 个参数：<code>经度　纬度　圆直径 (km)</code> ，因而示例中的两条等值线命令在 GMT5 中可以简化成:</p>
<pre><code># 15 度等值线
echo $evlo $evla 3335.8 | gmt psxy -J$J -R$R -SE- -K -O -W1p,red &gt;&gt; $PS
# 37.5 度等值线
echo $evlo $evla 8339.6 | gmt psxy -J$J -R$R -SE- -K -O -W1p,blue &gt;&gt; $PS</code></pre>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-05-21：初稿</li>
<li>2015-02-26： <code>grdmath</code> 在不同 GMT 版本下表现不同</li>
<li>2015-11-03：GMT5 中提供了 <code>-SE-</code> 选项，可以绘制以千米为直径单位的圆</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> GMT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[板块边界数据集]]></title>
      <url>http://seisman.info/plate-boundary-datasets.html</url>
      <content type="html"><![CDATA[<h2 id="nuvel-板块边界数据">NUVEL 板块边界数据</h2>
<p>下载地址： <a href="http://jules.unavco.org/GMT/" class="uri" target="_blank" rel="external">http://jules.unavco.org/GMT/</a></p>
<p>该数据集包含了 15 个主要的板块边界数据。其中：</p>
<ul>
<li><code>nuvel_1_plates.orig</code> ：最原始的数据，来自于 NUVEL-1A 包；</li>
<li><code>nuvel_1_plates</code> ：在原始数据的基础上修正了一些小的错误；</li>
<li><code>&lt;plate-name&gt;_plate</code>：给出了板块 plate-name 与其它板块的分界线，即多段数据。</li>
<li><code>&lt;plate-name&gt;.txt</code>：给出了板块 plate-name 的轮廓，即相当于将 <code>&lt;plate-name&gt;_plate</code> 的数据进行整理使其成为一个封闭的曲线。</li>
</ul>
<a id="more"></a>
<p>因而 <code>&lt;plate-name&gt;_plate</code> 文件中包含了最丰富的信息。</p>
<p>PS：数据文件中似乎是多段数据，以 <code>:</code> 作为每段分割标识，似乎在绘图时应该使用 <code>-m:</code> 选项，但实际上不使用也可以正常绘制（GMT 4.5.12），不确定其它版本是否需要 <code>-m:</code> 选项。</p>
<h3 id="绘制全部边界">绘制全部边界</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=g</div><div class="line">J=W20c</div><div class="line">B=60/30</div><div class="line">PS=plate.ps</div><div class="line"></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line">pscoast -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -Glightblue -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">psxy nuvel_1_plates -R<span class="variable">$R</span> -J<span class="variable">$J</span> -W1p,red -m: -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<div class="figure">
<img src="/images/2014051801.jpg">

</div>
<h3 id="绘制单个板块轮廓">绘制单个板块轮廓</h3>
<p>以绘制太平洋板块为例，将上面的脚本中 <code>nuvel_1_plates</code> 修改为 <code>Pacific.txt</code> 即可。</p>
<div class="figure">
<img src="/images/2014051802.jpg">

</div>
<h2 id="pb2003-板块数据集">PB2003 板块数据集</h2>
<p>该数据集在 NUVEL 数据的基础上加入了 38 个更小的板块。</p>
<p>主页：<a href="http://peterbird.name/publications/2003_PB2002/2003_PB2002.htm" class="uri" target="_blank" rel="external">http://peterbird.name/publications/2003_PB2002/2003_PB2002.htm</a></p>
<p>下载地址： <a href="http://peterbird.name/oldFTP/PB2002/" class="uri" target="_blank" rel="external">http://peterbird.name/oldFTP/PB2002/</a></p>
<p>其包含如下数据：</p>
<ul>
<li><code>PB2002_boundaries.dig</code>：给出了每两个相邻板块的交界数据；</li>
<li><code>PB2002_plates.dig</code>：给出每个板块的边界数据；</li>
<li><code>PB2002_orogens.dig</code>：造山带边界数据；</li>
<li><code>PB2002_steps.dat</code>：两个相邻板块交界处任一点的信息，包括边界类型，运动速度等信息。数据较复杂，需要仔细研究才能知道每列的含义。</li>
<li><code>PB2002_poles.dat</code>：每个板块的 Poles。</li>
</ul>
<p>PS：前三个数据都是多段数据，而且其数据格式相对来说也很复杂。直观上看似乎需要对数据先做一些格式上的转换才能使用 GMT 进行绘图，但实际操作中（GMT4.5.12），使用上面的脚本即可绘图，无法保证在其它版本也可行。</p>
<h3 id="绘图">绘图</h3>
<p>板块边界图（使用 <code>PB2002_boundaries.dig</code> 或 <code>PB2002_plates.dig</code> 均可）</p>
<div class="figure">
<img src="/images/2014051803.jpg">

</div>
<p>造山带边界</p>
<div class="figure">
<img src="/images/2014051804.jpg">

</div>
<h2 id="板块边界与洋壳年龄">板块边界与洋壳年龄</h2>
<p>将边界数据与洋壳年龄放在一起：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=d</div><div class="line">J=W20c</div><div class="line">B=60/30</div><div class="line">PS=age.ps</div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line">grdimage -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -Cage.cpt age.3.6.nc2 -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">pscoast -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -Glightblue -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">psxy PB2002_boundaries.dig.txt -R<span class="variable">$R</span> -J<span class="variable">$J</span> -W1p,black -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">psscale -Ba20 -Cage.cpt -D10.5c/-1c/15c/.35ch -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<div class="figure">
<img src="/images/2014051805.jpg">

</div>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[洋壳年龄数据]]></title>
      <url>http://seisman.info/ocean-floor-crustal-age.html</url>
      <content type="html"><![CDATA[<h2 id="简介">简介</h2>
<p>官方网站： <a href="http://www.earthbyte.org/Resources/agegrid2008.html" class="uri" target="_blank" rel="external">http://www.earthbyte.org/Resources/agegrid2008.html</a></p>
<p>该数据集包含四类数据：洋壳年龄（age）、年龄不确定度（ageerror）、扩张速度（rate）、扩张非对称性（asym）。数据最高精度为 2 弧分。</p>
<p>数据下载地址：<a href="ftp://ftp.earthbyte.org/earthbyte/agegrid/2008/Grids/" class="uri" target="_blank" rel="external">ftp://ftp.earthbyte.org/earthbyte/agegrid/2008/Grids/</a></p>
<a id="more"></a>
<p>数据文件名的命名方式为:</p>
<pre><code>数据类型. 数据版本. 数据分辨率. 数据格式. bz2</code></pre>
<p>比如 <code>age.3.2.nc.bz2</code> 表示洋壳年龄数据，版本号为 3，数据精度为 2 弧分，格式为 netCDF 格式。</p>
<h2 id="数据的使用">数据的使用</h2>
<p>官方提供了三种格式的数据，img 格式、netCDF 格式以及 XYZ 格式。综合各种情况，这里只用 netCDF 格式，其它格式的使用请参考 <code>README.txt</code> 。</p>
<h3 id="netcdf-格式">netCDF 格式</h3>
<ul>
<li>短整型 netCDF 格式</li>
<li>年龄单位为百万年，扩展速率单位为 mm/yr。并对数据乘以 100 以使得其可以用短整型保存。</li>
<li>经度范围为 0 到 360 度，纬度范围为 - 90 到 90。</li>
<li>数据精度为 2 弧分；</li>
<li>网格线配准</li>
</ul>
<h3 id="数据解压">数据解压</h3>
<pre><code>bzip2 -d age.3.2.nc.bz2</code></pre>
<h3 id="数据转换">数据转换</h3>
<p>由于真实数据被乘以 100 以使得数据可以用短整型表示，所以在使用之前要将数据乘以因子 0.01。可以通过如下命令进行转换:</p>
<pre><code>grdmath age.3.2.nc=ns 0.01 MUL = age.3.2.nc2=nf -V</code></pre>
<h3 id="绘图">绘图</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=d</div><div class="line">J=W20c</div><div class="line">B=60/30</div><div class="line">PS=age.ps</div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line">grdimage -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -Cage.cpt age.3.2.nc2 -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">pscoast -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$B</span> -Glightblue -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">psscale -Ba20 -Cage.cpt -D10.5c/-1c/15c/.35ch -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>绘图效果</p>
<div class="figure">
<img src="/images/2014051701.jpg">

</div>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
            <tag> 数据 </tag>
            
            <tag> 网格 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python 科学计算发行版 --Anaconda]]></title>
      <url>http://seisman.info/anaconda-scientific-python-distribution.html</url>
      <content type="html"><![CDATA[<p>Python 是一种强大的编程语言，其提供了很多用于科学计算的模块，常见的包括 numpy、scipy 和 matplotlib。要利用 Python 进行科学计算，就需要一一安装所需的模块， 而这些模块可能又依赖于其它的软件包或库，因而安装和使用起来相对麻烦。幸好有人 专门在做这一类事情，将科学计算所需要的模块都编译好，然后打包以发行版的形式 供用户使用，Anaconda 就是其中一个常用的科学计算发行版。</p>
<p>主页： <a href="https://store.continuum.io/cshop/anaconda/" class="uri" target="_blank" rel="external">https://store.continuum.io/cshop/anaconda/</a></p>
<a id="more"></a>
<p>Anaconda 的特点：</p>
<ul>
<li>包含了众多流行的科学、数学、工程、数据分析的 <a href="http://docs.continuum.io/anaconda/pkgs.html" target="_blank" rel="external">Python 包</a></li>
<li>完全开源和免费</li>
<li>额外的加速、优化是收费的，但对于学术用途可以申请免费的 License</li>
<li>全平台支持：Linux、Windows、Mac</li>
<li>支持 Python 2.x 和 3.x，可自由切换</li>
</ul>
<h2 id="安装">安装</h2>
<ol style="list-style-type: decimal">
<li><p>安装 pyenv</p>
<p>安装 anaconda 后，系统内就会存在两个版本的 Python：anaconda 以及系统自带的 Python。</p>
<p>为了保证两个 Python 版本之间不相互干扰，需要使用专门的工具来管理多个 Python 版本。这里选择的工具是 pyenv。</p>
<p>pyenv 的安装可以参考《<a href="/python-pyenv.html">Python 多版本共存之 pyenv</a>》。</p>
<p>当然，也可以不使用 pyenv，而直接从其官方网站下载： <a href="http://continuum.io/downloads" class="uri" target="_blank" rel="external">http://continuum.io/downloads</a> 。此时用户需自行承担可能的版本冲突。</p></li>
<li><p>安装 anaconda</p>
<p>Anaconda 支持 Python 2 和 Python 3，但二者是分开的，用户需要自己选择使用 Python 2 还是 Python 3。当然，借助于 pyenv 的版本管理功能，同时装两个版本也是没问题的。</p>
<p>安装支持 Python 2.7 的 Anaconda:</p>
<pre><code>$ pyenv install anaconda2-4.2.0 -v</code></pre>
<p>安装支持 Python 3.4 的 Anaconda:</p>
<pre><code>$ pyenv install anaconda3-4.2.0 -v</code></pre></li>
<li><p>申请免费的学术 License</p>
<p>对于学生来说，可以申请免费的学术 License，以安装额外的功能包，以实现计算过程的加速。</p>
<p>申请地址： <a href="https://store.continuum.io/cshop/academicanaconda" class="uri" target="_blank" rel="external">https://store.continuum.io/cshop/academicanaconda</a></p>
<p>申请后，会得到一个 license 文件，将其放在 <code>~/.continuum</code> 目录下即可。</p></li>
<li><p>安装额外的功能包</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ conda update conda</div><div class="line">$ conda install accelerate</div><div class="line">$ conda install iopro</div></pre></td></tr></table></figure></li>
</ol>
<h2 id="升级-anaconda">升级 Anaconda</h2>
<p>新版本发布之后，可以使用 pyenv 安装 Anaconda 的最新版本，也可以用 Anaconda 的自带更新工具升级:</p>
<pre><code>conda update conda
conda update anaconda</code></pre>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-05-14: 初稿</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT4 脚本风格指南]]></title>
      <url>http://seisman.info/gmt4-style-guide.html</url>
      <content type="html"><![CDATA[<p>这篇博文会介绍写 GMT 脚本时需要遵循的一些风格与习惯。本文的目的是，希望遵循本风格指南的 GMT 脚本能够更易读、易改、更健壮、可移植性更高。</p>
<a id="more"></a>
<h2 id="使用脚本来执行-gmt-命令">使用脚本来执行 GMT 命令</h2>
<p>GMT 遵循了 UNIX 的设计思想，将不同的功能分别放在不同的命令中，因而在绘图时需要执行一系列命令。</p>
<p>若使用命令行来执行一系列命令，很容易弄混前一个命令是什么。将所有的绘图命令放在脚本中可以很方便地重复执行一系列命令，以对绘图的细节进行微调。</p>
<p>除非是一两个命令就可以解决的图，否则应一律使用脚本而非命令行。</p>
<p>Windows 下常用的脚本是 bat，Linux 常用的是 Bash、Perl 和 Python。使用什么脚本语言完全依赖于用户个人的需求与喜好，这里以 Bash 脚本为例，其他脚本同理。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">psxy ...</div><div class="line">pscoast ...</div><div class="line">grdraster ...</div><div class="line">grdimage ...</div><div class="line">psxy ...</div></pre></td></tr></table></figure>
<h2 id="不要跨平台写脚本">不要跨平台写脚本</h2>
<p>不要在 Windows 下写 Bash 脚本然后复制到 Linux 下运行；也不要在 Linux 下写 Bat 脚本放在 Windows 下运行。这其中会遇到很多坑，包括但不限于：</p>
<ul>
<li>默认编码不同，Windows 用 GBK，Linux 用 UTF8；</li>
<li>换行符不同，Windows 用 <code>\r\n</code> ，Linux 用 <code>\n</code> ；</li>
</ul>
<p>如果你真的跨平台写了脚本并遇到各种奇怪的问题时，尝试着新建一个文件，然后把脚本重新手敲一遍。</p>
<h2 id="使用变量">使用变量</h2>
<p>脚本不仅仅只是将一系列命令放在一个文件而已。绘图时有很多需要在多个命令中重复使用的东西，比如设置投影方式的 <code>-J</code> 、设置绘图范围的 <code>-R</code> 、文件名 <code>xxx.ps</code> 。</p>
<p>关于如何使用变量，一般有两种定义方式，这两种方法各有利弊，尚待权衡：</p>
<ol style="list-style-type: decimal">
<li><p>将参数作为变量的值</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=M6i</div><div class="line">R=0/360/-60/60</div><div class="line">B=60/30</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B<span class="variable">$B</span> -W1p -A1000 -K &gt; <span class="variable">$PS</span></div><div class="line">psxy -J -R -Sa0.5c -Gred -O &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">160 20</div><div class="line">150 30</div><div class="line">EOF</div></pre></td></tr></table></figure></li>
<li><p>将选项和参数作为变量的值</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=-JM6i</div><div class="line">R=-R0/360/-60/60</div><div class="line">B=-B60/30</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">pscoast <span class="variable">$J</span> <span class="variable">$R</span> <span class="variable">$B</span> -W1p -A1000 -K &gt; <span class="variable">$PS</span></div><div class="line">psxy -J -R -Sa0.5c -Gred -O &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">160 20</div><div class="line">150 30</div><div class="line">EOF</div></pre></td></tr></table></figure></li>
</ol>
<h2 id="不要省略参数">不要省略参数</h2>
<p>GMT 的一个特性是后面的命令可以继承前面命令的一些参数，比如前面的命令中指定了 <code>-JM10c -R0/360/-60/60</code> ，后面的命令可以直接使用 <code>-J -R</code> 而不用重复给出更多的参数。 这样的设计减少了用户的键入。</p>
<p>省略参数虽然带来了一点点方便，但也可能会造成一些麻烦：</p>
<ol style="list-style-type: decimal">
<li>写 GMT 脚本时由于需要经常修改、增添命令或调整各个命令之间的顺序。在省略了部分参数的情况 下，调整各个命令之间的顺序就可能导致 <code>-J -R</code> 出现在第一个，有时会造成意想不到的错误。</li>
<li>参数可以省略本质上是因为之前的命令将参数写到了文件 <code>.gmtcommands</code> 中，因而当在同 一个目录里同时运行两个相同或不同的脚本时，两个脚本就会读写同一个 <code>.gmtcommands</code> 文件， 进而可能导致一个脚本读到的内容是另外一个脚本写的。</li>
</ol>
<p>因而，尽量不要省略参数。相同的参数在多个命令里要写很多遍，这样很麻烦，但是因为前面已经把这些 参数定义成变量了，所以只是多敲了几个字符而已，因此带来的好处可不少。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=M6i</div><div class="line">R=0/360/-60/60</div><div class="line">B=60/30</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B<span class="variable">$B</span> -W1p -A1000 -K &gt; <span class="variable">$PS</span></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sa0.5c -Gred -O &gt;&gt; <span class="variable">$PS</span> &lt;&lt; EOF</div><div class="line">160 20</div><div class="line">150 30</div><div class="line">EOF</div></pre></td></tr></table></figure>
<h2 id="开始与结束">开始与结束</h2>
<p>多个绘图命令会将 PS 代码依次写入到一个 PS 文件中。绘图命令的顺序有时会影响到成图的效果， 最常见的例子就是，如果先 <code>pscoast</code> 再 <code>grdimage</code>，则 <code>grdimage</code> 的效果就会覆盖 <code>pscoast</code> 的效果。因而在绘制一张稍复杂的图时，经常需要在原有的代码中增添、删除或修改 已有命令的顺序，这个时候尤其需要注意 <code>-K</code> 、 <code>-O</code> 以及重定向符号的使用。</p>
<p>下面的代码解决了这个问题：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=M6i</div><div class="line">R=0/360/-60/60</div><div class="line">B=60/30</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line"><span class="comment"># 写入 PS 文件头</span></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 一系列绘图命令</span></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B<span class="variable">$B</span> -W1p -A1000 -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 写入 PS 文件尾</span></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>此处使用了专门的两个命令用于开始和结束一个 PS 绘图。这样做的好处在于：中间的所有绘图命令都使用 <code>-K -O &gt;&gt;</code>，不必再考虑这个命令是第一个还是最后一个了，也可以随意删除或修改任何一个命令而不必担心造成其它效果。</p>
<p>因而，实际写绘图脚本时，先把开始和结束这两个命令写对，然后在两个命令的中间写入真正的绘图命令。每新增一个绘图命令，都可以执行一下脚本，以检查绘图效果，若效果正确，则继续添加下一个绘图命令。</p>
<h2 id="使用-si-单位制">使用 SI 单位制</h2>
<p>GMT 支持 SI 单位制和 US 单位制，默认是 SI 单位制。由于 GMT 的开发者是美国人，官方的文档使用的是 US 单位制，因而国内的 GMT 用户在学习的过程中也就习惯性地使用了 US 单位制。</p>
<p>实际上，国内用户对于 US 单位制没有太多的概念， <code>-X1i</code> 远远没有 <code>-X2.5c</code> 直观。 SI 单位制是国际标准单位，也是中国人熟悉的单位，使用 SI 单位制会使得微调更简单。</p>
<h2 id="不要依赖于-gmt-的系统设置">不要依赖于 GMT 的系统设置</h2>
<p>你所写的每一个脚本，将来都可能传给后来人使用，可能在任一台机器上使用。要保证脚本每次运行的结果完全一致，并不是一个简单的事情。</p>
<h3 id="不要修改-gmt-系统设置">不要修改 GMT 系统设置</h3>
<p>有些人喜欢使用特定字体，或者喜欢使用特定尺寸的纸张，这可以通过修改 <code>$GMTHOME/share/conf</code> 下的一堆系统配置文件来实现。但是，不要这样做，这会导致脚本在别人的机器上跑出来完全不一样的结果。</p>
<h3 id="不要省略单位">不要省略单位</h3>
<p>当使用 <code>-JM10</code> 时，GMT 会默认使用当前的系统默认单位（一般来说是 <code>c</code>，也就是厘米），当脚本在另一台系统默认单位为 <code>i</code> 的机器上运行时，绘图的结果会完全不同。</p>
<h3 id="default-文件的使用">default 文件的使用</h3>
<p>不要手动修改 default 文件！</p>
<p>GMT 中提供了 <code>gmtset</code> 命令可以用于修改缺省参数，比如标题的字体、大小等等。该命令会在当前工作目录下生成一个 <code>.gmtdefaults4</code> 文件，进而影响到接下来绘图命令的执行效果。</p>
<p>合理的使用方式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment"># 用 gmtset 修改默认参数</span></div><div class="line">gmtset BASEMAP_TYPE plain</div><div class="line"></div><div class="line"><span class="comment"># 绘图</span></div><div class="line">psxy ...</div><div class="line">pscoast ...</div><div class="line">psxy ...</div><div class="line"></div><div class="line"><span class="comment"># 删除参数文件</span></div><div class="line">rm .gmt*</div></pre></td></tr></table></figure>
<p>在脚本的最后 <code>rm .gmt*</code> 至少删除了两个临时文件，一个是 <code>.gmtcommands</code>，其记录了 通用选项的一些信息，另一个是 <code>.gmtdefaults4</code>，记录了当前的缺省参数。</p>
<p>删除这些文件的原因在于：</p>
<ul>
<li>临时文件，应该删除。</li>
<li>脚本已经执行完毕，不应该遗留下无用的文件。</li>
<li>保留 <code>.gmtdefaults4</code> 文件，可能会导致下次执行脚本时产生不同的效果。例如，脚本中首先使用了默认字体 0，然后绘制了一部分图，再使用 <code>gmtset</code> 修改字体为字体 1，又绘制了一部分图，若忘记删除 <code>.gmtdefaults4</code> 文件，则该文件会成为下次执行脚本时的默认参数文件，导致默认字体变成 1，因而出现不同的绘图效果。</li>
</ul>
<p>有这样一种可怕的情况：假如你在 <code>$HOME</code> 下执行了 <code>gmtset</code> 命令，然后画了一个简单的图，但是却忘记删除 <code>$HOME</code> 下生成的 <code>.gmtdefaults4</code> 文件，这会影响到其它目录中几乎所有 GMT 脚本的执行效果，而且这个问题很难排查。要避免这种情况的发生需要遵循几个原则：</p>
<ol style="list-style-type: decimal">
<li>尽量不要在 <code>$HOME</code> 下执行 GMT 命令（可能会产生临时文件，难以清理）</li>
<li>尽量不要使用命令行执行 GMT 命令（因为你很可能会忘记你刚刚执行过哪些命令）</li>
<li>使用 <code>gmtset</code> 的脚本，最后一定要记得删除 <code>.gmtdefaults4</code></li>
</ol>
<h2 id="p-选项的使用">-P 选项的使用</h2>
<p>只有第一个绘图命令中的 <code>-P</code> 选项是起作用的，所以不需要在每个绘图命令里都使用 <code>-P</code> 选项， 当然若是每个绘图命令都使用了 <code>-P</code> 选项也没有问题，只是不够简洁而已。</p>
<p>两种推荐的使用方式：</p>
<ol style="list-style-type: decimal">
<li><p>在开始 PS 文件时使用该选项：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=M20c</div><div class="line">R=0/360/-60/60</div><div class="line">B=60/30</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K -P &gt; <span class="variable">$PS</span></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B<span class="variable">$B</span> -W1p -A1000 -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure></li>
<li><p>修改 <code>PAGE_ORIENTATION</code> ，不使用 <code>-P</code> 选项</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=M20c</div><div class="line">R=0/360/-60/60</div><div class="line">B=60/30</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">gmtset PAGE_ORIENTATION portrait</div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B<span class="variable">$B</span> -W1p -A1000 -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">rm .gmt*</div></pre></td></tr></table></figure></li>
</ol>
<h2 id="不要滥用---b-选项">不要滥用 - B 选项</h2>
<p><code>-B</code> 选项用于绘制边框并控制边框的绘制效果。</p>
<p>即每个使用 <code>-B</code> 选项的命令都会绘制一次边框，在没有使用 <code>-X</code> 和 <code>-Y</code> 的情况下，多个命令重复使用 <code>-B</code> 选项会绘制多次边框，但由于边框是重合的，所以会看不出来区别。</p>
<p>对于 <code>-B</code> 选项，合理的用法是仅在第一个命令中使用。</p>
<h2 id="verbose-模式">verbose 模式</h2>
<p>GMT 命令的输出信息常用于在写脚本时判断命令执行是否正确，而在真正执行时过多的输出信息反而会扰乱用户的屏幕输出。合理的使用 verbose 模式的方式有三种：</p>
<ol style="list-style-type: decimal">
<li>写脚本时每个命令都加上 <code>-V</code> 选项，待确认脚本正确无误之后删除所有 <code>-V</code> 。</li>
<li><p>定义 Verbose 变量</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">J=M20c</div><div class="line">R=0/360/-60/60</div><div class="line">B=60/30</div><div class="line">PS=map.ps</div><div class="line">V=-V      <span class="comment"># 调试时用这个</span></div><div class="line"><span class="comment">#V=       # 调试完成用这个</span></div><div class="line"></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K -P <span class="variable">$V</span> &gt; <span class="variable">$PS</span></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B<span class="variable">$B</span> -W1p -A1000 -K -O <span class="variable">$V</span> &gt;&gt; <span class="variable">$PS</span></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O <span class="variable">$V</span> &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure></li>
<li><p>修改缺省参数</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=M20c</div><div class="line">R=0/360/-60/60</div><div class="line">B=60/30</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">gmtset VERBOSE TRUE</div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B<span class="variable">$B</span> -W1p -A1000 -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">rm .gmt*</div></pre></td></tr></table></figure></li>
</ol>
<p>从使用上的简洁来看，最简单的是第三种方法。</p>
<h2 id="慎用---x-和---y">慎用 - X 和 - Y</h2>
<p>使用这两个选项会导致坐标原点的移动。因而使用的时候需要相当慎重。</p>
<ol style="list-style-type: decimal">
<li>除极个别的情况外， <code>-X</code> 和 <code>-Y</code> 选项应该仅在绘制组合图（即一张图多个子图）时使用；</li>
<li>对于非组合图，也可以在第一个绘图命令中使用 <code>-Xc -Yc</code> 使得整个绘图框架位于纸张的中央；</li>
<li>不要仅仅为了将某个符号或文字移动到某个位置就使用这两个选项，如果真的有这种需求的话，应该使用绝对坐标 <code>-Xa1c -Ya1c</code> ，其仅影响当前命令的绘图位置。</li>
</ol>
<h2 id="网格文件后缀">网格文件后缀</h2>
<p>GMT 主要使用 netCDF 格式作为网格数据的格式，其标准后缀名为 <code>.nc</code> 。</p>
<p>需要注意以下两个事实：</p>
<ol style="list-style-type: decimal">
<li>GMT 不会对后缀进行检测，所以后缀是什么都不重要</li>
<li>GMT 之前的版本中曾经自定义了一种网格数据格式，并使用后缀 <code>.grd</code>，因而很多脚本中都使用了 <code>.grd</code> 作为后缀。</li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-05-13：初稿；</li>
<li>2014-05-16：关于 “网格文件后缀” 的说明；</li>
<li>2015-03-17：不要跨平台写脚本；</li>
<li>2015-08-08：省略参数可能导致的两种问题；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在 Fortran 程序中读写 SAC 文件]]></title>
      <url>http://seisman.info/read-and-write-sac-in-fortran-program.html</url>
      <content type="html"><![CDATA[<p>SAC 是进行地震数据预处理的好工具，但是无法实现所有的数据分析功能，这就需要能够在自己的程序中读写 SAC 文件。这篇博文介绍如何在 Fortran 程序中读写 SAC 文件。</p>
<a id="more"></a>
<h2 id="子函数库">子函数库</h2>
<p>SAC 自带了读写函数库，并且提供了相关的示例程序，这些可以在 <a href="/sac-manual.html">《SAC 参考手册》</a> 中的相关章节中找到。</p>
<p>SAC 自带的读写子函数实际上并不好用，因而就有很多人自己重新实现了 SAC 读写函数库，其中之一就是 Prof. Lupei Zhu 所写的 <code>sacio.c</code> 。</p>
<p><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="external">Prof. Lupei Zhu</a> 的 <code>fk</code> 或者 <code>gCAP</code> 中都包含了 SAC 读写函数库， <code>sacio.c</code> 和 <code>sac.h</code>。这是一个用 C 语言实现的 SAC 读写函数库，同时提供了一些 Fortran 接口，因而也可以直接在 Fortran 程序中使用。</p>
<h2 id="子函数">子函数</h2>
<p><code>sacio.c</code> 中定义了如下 Fortran 接口：</p>
<ul>
<li><code>rdsac0</code>：读取 SAC 二进制文件</li>
<li><code>my_brsac</code>：读取 SAC 二进制文件的另一个 Fortran 接口</li>
<li><code>wrtsac0</code>：写 SAC 二进制文件</li>
<li><code>wrtsac2</code>：将两个 1 维数组写成 XY 形式的 SAC 数据</li>
<li><code>wrtsac3</code>：与 wrtsac0 类似，但向头段中加入了分量信息</li>
</ul>
<h2 id="读和写一个-sac-文件">读和写一个 SAC 文件</h2>
<p>最常见的需求是读取一个 SAC 二进制文件，对数据进行处理，并将处理后的数据写回到原文件中。</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">program</span></span> main</div><div class="line"><span class="keyword">implicit</span> <span class="keyword">none</span></div><div class="line"><span class="keyword">integer</span> <span class="built_in">MAX</span></div><div class="line"><span class="keyword">parameter</span> (<span class="built_in">MAX</span>=<span class="number">10000</span>)</div><div class="line"><span class="keyword">real</span> array</div><div class="line"><span class="keyword">dimension</span> array(<span class="built_in">MAX</span>)</div><div class="line"><span class="keyword">real</span> b, delta, dist</div><div class="line"><span class="keyword">integer</span> npts, j</div><div class="line"><span class="keyword">character</span>(len=<span class="number">80</span>) kname, kout</div><div class="line">kname = <span class="string">'seis.SAC'</span></div><div class="line"><span class="keyword">call</span> rdsac0(<span class="built_in">trim</span>(kname), delta, npts, b, array)</div><div class="line"></div><div class="line"><span class="comment">! Process</span></div><div class="line"><span class="keyword">do</span> j=<span class="number">1</span>, npts</div><div class="line">   array(j) = array(j)+<span class="number">1</span></div><div class="line"><span class="keyword">end</span> <span class="keyword">do</span></div><div class="line">dist = <span class="number">10.0</span> <span class="comment">! distance</span></div><div class="line">kout = <span class="string">'seis.SAC.out'</span></div><div class="line"><span class="keyword">call</span> wrtsac0(<span class="built_in">trim</span>(kout), delta, npts, b, dist, array)</div><div class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">program</span></span></div></pre></td></tr></table></figure>
<p>需要注意的几个事项包括：</p>
<ul>
<li>调用子函数前需要使用 <code>trim</code> 将文件名中的多余空白字符去除</li>
<li>只能返回头段变量 delta、npts 和 b 的值，无法获取其它头段变量</li>
<li>对数据进行处理后，可以直接写回到原文件中，或写入到新文件中</li>
<li>写数据时，需要提供表示距离的变量 <code>dist</code>（这完全是个人的需求，所以该子函数并不那么好用）</li>
</ul>
<h2 id="说明">说明</h2>
<p>此 SAC 函数库的 Fortran 接口，基本是完全根据个人需求而写的，因而没有太高的通用性。且 Fortran 中不包含结构体，无法一次性获取全部头段变量的信息。有需要在 Fortran 中读写 SAC 的可以考虑使用 SAC 自带的函数库，或者重新定义该函数。</p>
<h2 id="编译方法">编译方法</h2>
<pre><code>$ gfortran prog.c  sacio.c</code></pre>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-05-11：mars_cfeng 原稿；</li>
<li>2014-05-12：SeisMan 修订稿；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Fortran </tag>
            
            <tag> SAC技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在 C 程序中读写 SAC 文件]]></title>
      <url>http://seisman.info/read-and-write-sac-in-c-program.html</url>
      <content type="html"><![CDATA[<h2 id="序言">序言</h2>
<p>SAC 是进行地震数据预处理的好工具，但是无法实现所有的数据分析功能，这就需要能够在自己的程序中读写 SAC 文件。这篇博文介绍如何在 C 程序中读写 SAC 文件。</p>
<a id="more"></a>
<h2 id="子函数库">子函数库</h2>
<p>SAC 自带了读写函数库，并且提供了相关的示例程序，这些可以在 <a href="/sac-manual.html">《SAC 参考手册》</a> 中的相关章节中找到。</p>
<p>SAC 自带的读写子函数实际上并不好用，因而就有很多人自己重新实现了 SAC 读写函数库，其中之一就是 Prof. Lupei Zhu 所写的 <code>sacio.c</code> 。</p>
<p><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="external">Prof. Lupei Zhu</a> 的 <code>fk</code> 或者 <code>gCAP</code> 中都包含了 SAC 读写函数库， <code>sacio.c</code> 和 <code>sac.h</code> 。</p>
<h2 id="子函数">子函数</h2>
<p><code>sac.h</code> 中定义了名为 <code>SACHEAD</code> 的结构体，其包含了 SAC 格式的所有头段变量。</p>
<p><code>sacio.c</code> 中定义了如下子函数：</p>
<ul>
<li><code>read_sac</code>：读取 SAC 二进制数据</li>
<li><code>read_sac2</code>：读取含 cut 选项的二进制数据</li>
<li><code>read_sachead</code>：仅读取 SAC 文件中的头段部分</li>
<li><code>write_sac</code>：写 SAC 二进制数据</li>
<li><code>wrtsac2</code>：将两个 1 维数组写成 XY 形式的 SAC 数据</li>
<li><code>sachdr</code>：创建一个全新的 SAC 头段</li>
</ul>
<h2 id="示例">示例</h2>
<h3 id="读和写一个-sac-文件">读和写一个 SAC 文件</h3>
<p>最常见的需求是读取一个 SAC 二进制文件，对数据进行处理，并将处理后的数据写回到原文件中。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sac.h"</span>        <span class="comment">// 包含头文件 sac.h</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    <span class="keyword">char</span>    file[<span class="number">80</span>];</div><div class="line">    SACHEAD hd;</div><div class="line">    <span class="keyword">float</span>   *data;</div><div class="line">    <span class="keyword">int</span>     i;</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(file,<span class="string">"seis.SAC"</span>);</div><div class="line"></div><div class="line">    <span class="comment">// 读入数据</span></div><div class="line">    data = read_sac(file, &amp;hd);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"npts=%d delta=%f \n"</span>, hd.npts, hd.delta);</div><div class="line"></div><div class="line">    <span class="comment">// 其它数据处理</span></div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;hd.npts; i++) &#123;</div><div class="line">        data[i] *= <span class="number">0.1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 将结果写回到原文件中</span></div><div class="line">    write_sac(file, hd, data);</div><div class="line"></div><div class="line">    <span class="built_in">free</span>(data);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>需要注意的几个事项包括：</p>
<ul>
<li>SAC 文件的头段区保存到结构体 <code>SACHEAD hd</code> 中。此处必须定义成结构体变量 <code>SACHEAD hd</code> ，若定义成结构体指针 <code>SACHEAD *hd</code> ，必须通过 <code>malloc</code> 为头段区分配空间。</li>
<li>SAC 文件的数据保存到指针 <code>float *data</code> 中，此处不需要对指针分配空间，<code>read_sac</code> 子函数会首先读取 SAC 文件的头段区，然后根据头段变量 <code>npts</code> 的值分配合适的内存空间。</li>
<li>对数据进行处理后，可以直接写回到原文件中，或写入到新文件中。</li>
<li>指针 <code>data</code> 在该程序中定义，并在子程序 <code>read_sac</code> 中分配内存，最终需要在该程序中 <code>free(data)</code> 将已分配的内存空间释放。在本例中内存是否释放并无太大影响，在有些情况下会出现 “内存溢出” 的问题。</li>
<li>本示例中，为了保持代码的简洁性，没有对子函数的返回值进行判断。</li>
</ul>
<h3 id="读取一个-sac-文件的头段区">读取一个 SAC 文件的头段区</h3>
<p>有些时候只需要 SAC 文件的头段区的一些信息，此时若读取整个文件就有些浪费了。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sac.h"</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    <span class="keyword">char</span>    file[<span class="number">80</span>];</div><div class="line">    SACHEAD hd;</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(file,<span class="string">"seis.SAC"</span>);</div><div class="line"></div><div class="line">    read_sachead(file, &amp;hd);</div><div class="line">    <span class="keyword">if</span> (hd.npts&gt;=<span class="number">500</span>) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Too much data points!\n"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="读取-sac-文件中的一段数据">读取 SAC 文件中的一段数据</h3>
<p>有些时候，数据可能有 10000s，而我们只需要其中 50s 的数据。为了获得 50s 的数据而读取 10000s 的数据，实在太浪费。因而需要一个有效的手段对数据进行截取，即相当于 SAC 中的 cut 命令。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sac.h"</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    <span class="keyword">char</span>    fin[<span class="number">80</span>];</div><div class="line">    <span class="keyword">char</span>    fout[<span class="number">80</span>];</div><div class="line">    SACHEAD hd;</div><div class="line">    <span class="keyword">float</span>   *data;</div><div class="line">    <span class="keyword">int</span>     tmark;</div><div class="line">    <span class="keyword">float</span>   t1, t2;</div><div class="line">    <span class="keyword">int</span>     i;</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(fin,<span class="string">"seis.SAC"</span>);</div><div class="line"></div><div class="line">    tmark   =   <span class="number">-2</span>;</div><div class="line">    t1      =   <span class="number">-0.5</span>;</div><div class="line">    t2      =   <span class="number">2.5</span>;</div><div class="line"></div><div class="line">    data = read_sac2(fin, &amp;hd, tmark, t1, t2);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"npts=%d delta=%f\n"</span>, hd.npts, hd.delta);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;hd.npts; i++) &#123;</div><div class="line">        data[i] += <span class="number">0.1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(fout,<span class="string">"seis.SAC.cut"</span>);</div><div class="line">    write_sac(fout, hd, data);</div><div class="line"></div><div class="line">    <span class="built_in">free</span>(data);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>说明：</p>
<ul>
<li><p><code>tmark</code>、<code>t1</code> 和 <code>t2</code> 确定了要读取的数据的时间窗。其中 <code>tmark</code> 可以取如下值</p>
<ul>
<li><code>tmark=-5</code>：以 b 为时间标记</li>
<li><code>tmark=-3</code>：以 o 为时间标记</li>
<li><code>tmark=-2</code>：以 a 为时间标记</li>
<li><code>tmark=0~9</code>：以 t0~t9 中的某个为时间标记</li>
</ul>
<p>此例中，表示仅读取头段变量 a 前 0.5 秒到后 2.5 秒的数据。</p></li>
<li>在 <code>sacio.c</code> 的源代码中，理解 <code>tref = *((float *) hd + 10 + tmark);</code> 这一句很重要，在自己的程序中也会经常需要类似的代码。</li>
<li>虽然只读取了文件中的部分数据，该子程序对于头段区的 b、e、npts 等做了相应修改，因而最终的头段区是完全正确的。</li>
<li><p>因为只读取了文件中的部分数据，若将处理之后的数据写入原文件中，会导致原数据丢失，因而一般保持到新的文件中。</p></li>
</ul>
<h3 id="从零开始写一个-sac-文件">从零开始写一个 SAC 文件</h3>
<p>在做合成数据时，经常需要从无到有完全创建一个 SAC 文件。这相对于一般的 “读 -&gt; 处理 -&gt;写”而言要更复杂一些，因为必须首先构建一个基本的头段区。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sac.h"</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    <span class="keyword">char</span>    fout[<span class="number">80</span>];</div><div class="line">    SACHEAD hd;</div><div class="line">    <span class="keyword">float</span>   *data;</div><div class="line"></div><div class="line">    <span class="keyword">float</span>   delta;</div><div class="line">    <span class="keyword">int</span>     npts;</div><div class="line">    <span class="keyword">float</span>   b;</div><div class="line"></div><div class="line">    <span class="keyword">int</span>     i;</div><div class="line"></div><div class="line">    delta = <span class="number">0.01</span>;       <span class="comment">// 采样周期</span></div><div class="line">    npts  = <span class="number">1000</span>;       <span class="comment">// 数据点数</span></div><div class="line">    b     = <span class="number">10</span>;         <span class="comment">// 文件开始时间</span></div><div class="line">    hd = sachdr(delta, npts, b);    <span class="comment">// 构建基本头段</span></div><div class="line">    hd.dist     = <span class="number">10</span>;   <span class="comment">// 给其它头段变量赋值</span></div><div class="line">    hd.cmpaz    = <span class="number">0.0</span>;</div><div class="line">    hd.cmpinc   = <span class="number">0.0</span>;</div><div class="line"></div><div class="line">    <span class="built_in">strcpy</span>(fout,<span class="string">"seis.syn"</span>);</div><div class="line">    <span class="comment">// 生成合成数据</span></div><div class="line">    data = (<span class="keyword">float</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">float</span>)*npts);</div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;npts; i++) &#123;</div><div class="line">        data[i] = i;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 写入到文件中</span></div><div class="line">    write_sac(fout, hd, data);</div><div class="line">    <span class="built_in">free</span>(data);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="创建一个-xy-型-sac-文件">创建一个 XY 型 SAC 文件</h3>
<p>XY 型数据中包含了两个数据区，分别是自变量和因变量。这种类型的文件其实很少用到。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sac.h"</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    <span class="keyword">char</span>    fout[<span class="number">80</span>];</div><div class="line">    <span class="keyword">float</span>   *xarray;</div><div class="line">    <span class="keyword">float</span>   *yarray;</div><div class="line"></div><div class="line">    <span class="keyword">int</span>     npts;</div><div class="line">    <span class="keyword">int</span>     i;</div><div class="line"></div><div class="line">    npts = <span class="number">1000</span>;</div><div class="line">    <span class="built_in">strcpy</span>(fout,<span class="string">"seis.syn"</span>);</div><div class="line">    <span class="comment">// 构建数据</span></div><div class="line">    xarray = (<span class="keyword">float</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">float</span>)*npts);</div><div class="line">    yarray = (<span class="keyword">float</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">float</span>)*npts);</div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;npts; i++) &#123;</div><div class="line">        xarray[i] = i*<span class="number">0.1</span>;</div><div class="line">        yarray[i] = i*i;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    wrtsac2(fout, npts, xarray, yarray);</div><div class="line"></div><div class="line">    <span class="built_in">free</span>(xarray);</div><div class="line">    <span class="built_in">free</span>(yarray);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="编译方法">编译方法</h2>
<pre><code>$ gcc prog.c  sacio.c -lm</code></pre>
<h2 id="一些问题">一些问题</h2>
<p>下面列举中 <code>sacio.c</code> 的一些问题：</p>
<ol style="list-style-type: decimal">
<li>无法正确处理字符型的头段变量。由于 C 语言中字符串是以 <code>\0</code> 为结束符的，所以长度为 8 的字符型头段变量实际上需要额外的一个字节保存 <code>\0</code>，未考虑此问题会导致无法正确使用和修改字符型头段变量，且可能导致字符型头段变量中的信息丢失。</li>
<li>写文件时未处理中断信号。在写文件的过程中，若出现中断信号，会导致文件损坏，若在写文件过程中遇到中断信号，应保证继续执行写操作或许会更好。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C </tag>
            
            <tag> SAC技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[辐射花样的计算与震源球的绘制]]></title>
      <url>http://seisman.info/radiation-pattern-and-beach-ball.html</url>
      <content type="html"><![CDATA[<h2 id="p-波辐射花样计算公式">P 波辐射花样计算公式</h2>
<p>Quantitative Seismology (Aki and Richards,1980) 中式（4.29）给出了零迹地震矩 M 所产生的 n 分量位移公式：</p>
<div class="figure">
<img src="/images/2014050101.png">

</div>
<p>其中等式右边共计 5 项，第一项为近场项，第二、三项分别是 P、S 波的中间场项，第四、五项分别为 P、S 波的远场项。一般研究辐射花样大多关注于 P 波远场辐射花样，即第四项。</p>
<a id="more"></a>
<p>式（4.91）中给出了远场 P 波位移的矢量形式，看上去更加直观一些：</p>
<div class="figure">
<img src="/images/2014050102.png">

</div>
<p>其中，除去震源时间函数以及绝对振幅，只留下辐射花样相关的因子：</p>
<p><span class="math display">\[Rad = \mathbf{\gamma} \cdot \mathbf{M} \cdot \mathbf{\gamma}\]</span></p>
<p>其中，<span class="math inline">\(\mathbf{\gamma}\)</span> 为离源矢量，是离源角和方位角的函数，表征了地震射线从震源的出射方向，<span class="math inline">\(\mathbf{M}\)</span> 为矩张量。</p>
<h2 id="坐标系的选取">坐标系的选取</h2>
<p>对于点源而言，上式中的矩张量是一个常量（M(t) 与时间相关的部分可以分离成震源时间函数），离源矢量是与方位角和离源角有关的矢量，所以求辐射花样的本质就是矢量和张量的乘法。如何选定坐标系是一个关键问题。</p>
<p>按照 Aki&amp;Richards(1980) 中图 4.20 的方式定义坐标系，如下图，定义 X 轴为北向，Y 轴为东向，Z 轴为垂直向下，即 NED 坐标系。</p>
<div class="figure">
<img src="/images/2014050103.jpg">

</div>
<p>可以得到，此坐标下，离源矢量 <span class="math inline">\(\mathbf{\gamma}\)</span> 的具体形式:</p>
<p><span class="math display">\[\mathbf{\gamma}=(\sin i_{\xi} \cos\phi, \sin i_{\xi} \sin\phi, \cos i_{\xi})\]</span></p>
<h2 id="震源机制解">震源机制解</h2>
<p>震源机制解一般有两种表达方式，一种是矩张量形式，另一种是断层参数形式。</p>
<ol style="list-style-type: decimal">
<li>矩张量形式是震源机制的通用表示方式，需要六个分量。对于地震震源而言，多限制矩张量为零迹张量，即去除爆炸源的成分，只保留 double couple 和 CLVD 部分。</li>
<li>断层参数形式需要三个分量 (strike,dip,rake)，只能表示 double couple 位错源。</li>
</ol>
<p>Global CMT 给出了零迹矩张量解和断层参数解。</p>
<ol style="list-style-type: decimal">
<li><p>若使用 GCMT 给出的断层参数 (strike,dip,rake) 解，则可根据 Aki&amp;Richards(1980) P117 Box4.4 中式 1 将其转换成 NED 坐标系下的矩张量。</p>
<div class="figure">
<img src="/images/2014050104.jpg">

</div></li>
<li><p>若使用 GCMT 给出的矩张量解，由于 GCMT 给出的是 (Mrr, Mtt, Mff, Mrt, Mrf, Mtf) 解，即 USE 坐标系下的矩张量，需要转换成 NED 坐标系的矩张量，方可使用。转换公式如下：</p>
<div class="figure">
<img src="/images/2014050105.jpg">

</div></li>
</ol>
<p>不同的文献给出的坐标系可能不同，比如这里提到的 NED 坐标系和 USE 坐标系。即便相同的坐标系所使用的符号也可能不同，比如 GCMT 的 <span class="math inline">\((r,t,f)\)</span> 坐标系和 Aki&amp;Richards(1980) 中给出的 <span class="math inline">\((r,\Delta,\phi)\)</span> 坐标系其实都是 USE 坐标系。</p>
<h2 id="辐射花样计算代码">辐射花样计算代码</h2>
<p>获得矩张量以及离源矢量的表达式之后，即可求出震源球上任一点的辐射振幅。代码如下：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.14159265358979323846</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DEG2RAD PI/180.0</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> i, j;</div><div class="line">    <span class="keyword">float</span> m[<span class="number">3</span>][<span class="number">3</span>];</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (argc != <span class="number">7</span> &amp;&amp; argc != <span class="number">4</span>) &#123;</div><div class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"Usage: %s mrr mtt mff mrt mrf mtf\n"</span>, argv[<span class="number">0</span>]);</div><div class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"   Or: %s strike dip rake\n"</span>, argv[<span class="number">0</span>]);</div><div class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (argc == <span class="number">7</span>) &#123;    <span class="comment">// moment tensor</span></div><div class="line">        <span class="built_in">sscanf</span>(argv[<span class="number">1</span>], <span class="string">"%f"</span>, &amp;m[<span class="number">2</span>][<span class="number">2</span>]);    <span class="comment">// mrr -&gt; mzz</span></div><div class="line">        <span class="built_in">sscanf</span>(argv[<span class="number">2</span>], <span class="string">"%f"</span>, &amp;m[<span class="number">0</span>][<span class="number">0</span>]);    <span class="comment">// mtt -&gt; mxx</span></div><div class="line">        <span class="built_in">sscanf</span>(argv[<span class="number">3</span>], <span class="string">"%f"</span>, &amp;m[<span class="number">1</span>][<span class="number">1</span>]);    <span class="comment">// mff -&gt; myy</span></div><div class="line"></div><div class="line">        <span class="built_in">sscanf</span>(argv[<span class="number">4</span>], <span class="string">"%f"</span>, &amp;m[<span class="number">2</span>][<span class="number">0</span>]);    <span class="comment">// mrt -&gt; mzx</span></div><div class="line">        m[<span class="number">0</span>][<span class="number">2</span>] = m[<span class="number">2</span>][<span class="number">0</span>];</div><div class="line"></div><div class="line">        <span class="built_in">sscanf</span>(argv[<span class="number">5</span>], <span class="string">"%f"</span>, &amp;m[<span class="number">2</span>][<span class="number">1</span>]);    <span class="comment">// mrf -&gt; -Mzy</span></div><div class="line">        m[<span class="number">2</span>][<span class="number">1</span>] = -m[<span class="number">2</span>][<span class="number">1</span>];</div><div class="line">        m[<span class="number">1</span>][<span class="number">2</span>] = m[<span class="number">2</span>][<span class="number">1</span>];</div><div class="line"></div><div class="line">        <span class="built_in">sscanf</span>(argv[<span class="number">6</span>], <span class="string">"%f"</span>, &amp;m[<span class="number">0</span>][<span class="number">1</span>]);    <span class="comment">// mtf -&gt; -Mxy</span></div><div class="line">        m[<span class="number">0</span>][<span class="number">1</span>] = -m[<span class="number">0</span>][<span class="number">1</span>];</div><div class="line">        m[<span class="number">1</span>][<span class="number">0</span>] = m[<span class="number">0</span>][<span class="number">1</span>];</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (argc == <span class="number">4</span>) &#123; <span class="comment">// strike, dip, rake</span></div><div class="line">        <span class="keyword">float</span> strike, dip, rake;</div><div class="line">        <span class="built_in">sscanf</span>(argv[<span class="number">1</span>], <span class="string">"%f"</span>, &amp;strike);</div><div class="line">        <span class="built_in">sscanf</span>(argv[<span class="number">2</span>], <span class="string">"%f"</span>, &amp;dip   );</div><div class="line">        <span class="built_in">sscanf</span>(argv[<span class="number">3</span>], <span class="string">"%f"</span>, &amp;rake  );</div><div class="line">        strike *= DEG2RAD;</div><div class="line">        rake   *= DEG2RAD;</div><div class="line">        dip    *= DEG2RAD;</div><div class="line">        m[<span class="number">0</span>][<span class="number">0</span>] = - <span class="built_in">sin</span>(dip)*<span class="built_in">cos</span>(rake)*<span class="built_in">sin</span>(<span class="number">2</span>*strike)</div><div class="line">                - <span class="built_in">sin</span>(<span class="number">2</span>*dip)*<span class="built_in">sin</span>(rake)*<span class="built_in">sin</span>(strike)*<span class="built_in">sin</span>(strike);</div><div class="line">        m[<span class="number">0</span>][<span class="number">1</span>] = <span class="built_in">sin</span>(dip)*<span class="built_in">cos</span>(rake)*<span class="built_in">cos</span>(<span class="number">2</span>*strike)</div><div class="line">                + <span class="number">0.5</span>*<span class="built_in">sin</span>(<span class="number">2</span>*dip)*<span class="built_in">sin</span>(rake)*<span class="built_in">sin</span>(<span class="number">2</span>*strike);</div><div class="line">        m[<span class="number">0</span>][<span class="number">2</span>] = -<span class="built_in">cos</span>(dip)*<span class="built_in">cos</span>(rake)*<span class="built_in">cos</span>(strike)</div><div class="line">                - <span class="built_in">cos</span>(<span class="number">2</span>*dip)*<span class="built_in">sin</span>(rake)*<span class="built_in">sin</span>(strike);</div><div class="line">        m[<span class="number">1</span>][<span class="number">1</span>] = <span class="built_in">sin</span>(dip)*<span class="built_in">cos</span>(rake)*<span class="built_in">sin</span>(<span class="number">2</span>*strike)</div><div class="line">                - <span class="built_in">sin</span>(<span class="number">2</span>*dip)*<span class="built_in">sin</span>(rake)*<span class="built_in">cos</span>(strike)*<span class="built_in">cos</span>(strike);</div><div class="line">        m[<span class="number">1</span>][<span class="number">2</span>] = -<span class="built_in">cos</span>(dip)*<span class="built_in">cos</span>(rake)*<span class="built_in">sin</span>(strike)</div><div class="line">                + <span class="built_in">cos</span>(<span class="number">2</span>*dip)*<span class="built_in">sin</span>(rake)*<span class="built_in">cos</span>(strike);</div><div class="line">        m[<span class="number">2</span>][<span class="number">2</span>] = <span class="built_in">sin</span>(<span class="number">2</span>*dip)*<span class="built_in">sin</span>(rake);</div><div class="line">        m[<span class="number">1</span>][<span class="number">0</span>] = m[<span class="number">0</span>][<span class="number">1</span>];</div><div class="line">        m[<span class="number">2</span>][<span class="number">0</span>] = m[<span class="number">0</span>][<span class="number">2</span>];</div><div class="line">        m[<span class="number">2</span>][<span class="number">1</span>] = m[<span class="number">1</span>][<span class="number">2</span>];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>,<span class="string">"    / %6.3f %6.3f %6.3f \\ \n"</span>, m[<span class="number">0</span>][<span class="number">0</span>], m[<span class="number">0</span>][<span class="number">1</span>], m[<span class="number">0</span>][<span class="number">2</span>]);</div><div class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>,<span class="string">"M = | %6.3f %6.3f %6.3f | \n"</span>,  m[<span class="number">1</span>][<span class="number">0</span>], m[<span class="number">1</span>][<span class="number">1</span>], m[<span class="number">1</span>][<span class="number">2</span>]);</div><div class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>,<span class="string">"    \\ %6.3f %6.3f %6.3f / \n"</span>, m[<span class="number">2</span>][<span class="number">0</span>], m[<span class="number">2</span>][<span class="number">1</span>], m[<span class="number">2</span>][<span class="number">2</span>]);</div><div class="line"></div><div class="line">    FILE *fop;</div><div class="line">    fop = fopen(<span class="string">"pattern.dat"</span>, <span class="string">"wb"</span>);</div><div class="line">    <span class="keyword">double</span> az, theta;</div><div class="line">    <span class="keyword">float</span> p[<span class="number">3</span>];         <span class="comment">// 离源矢量</span></div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">3600</span>; i++)</div><div class="line">      <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;=<span class="number">900</span>; j++) &#123;</div><div class="line">        az = (<span class="keyword">double</span>)i / <span class="number">10.0</span> * DEG2RAD;     <span class="comment">// 方位角</span></div><div class="line">        theta = (<span class="keyword">double</span>)j/<span class="number">10.0</span> * DEG2RAD;    <span class="comment">// 离源角，仅计算下半球</span></div><div class="line">        p[<span class="number">0</span>] = (<span class="keyword">float</span>)(<span class="built_in">sin</span>(theta)*<span class="built_in">cos</span>(az));</div><div class="line">        p[<span class="number">1</span>] = (<span class="keyword">float</span>)(<span class="built_in">sin</span>(theta)*<span class="built_in">sin</span>(az));</div><div class="line">        p[<span class="number">2</span>] = (<span class="keyword">float</span>)(<span class="built_in">cos</span>(theta));</div><div class="line"></div><div class="line">        <span class="keyword">int</span> k, l;</div><div class="line">        <span class="keyword">float</span> amp = <span class="number">0.0</span>;</div><div class="line">        <span class="keyword">for</span> (k=<span class="number">0</span>; k&lt;=<span class="number">2</span>; k++)</div><div class="line">          <span class="keyword">for</span> (l=<span class="number">0</span>; l&lt;=<span class="number">2</span>; l++)&#123;</div><div class="line">            amp += p[k]*m[k][l]*p[l];</div><div class="line">        &#125;</div><div class="line">        fwrite(&amp;amp, <span class="keyword">sizeof</span>(<span class="keyword">float</span>), <span class="number">1</span>, fop);</div><div class="line">    &#125;</div><div class="line">    fclose(fop);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>此代码可以正确处理断层参数和矩张量两种形式的震源机制解，二者均可被正确转换为 NED 坐标系下的矩张量解。对 360 度的方位角以及 90 度的离源角进行遍历，计算每一点的振幅值，并保存到 <code>pattern.dat</code> 中待用。</p>
<p>关于离源角，需要注意两点：</p>
<ol style="list-style-type: decimal">
<li>离源角的取值范围为 [0,90]，即只计算震源球的下半球，这是因为多数情况下绘制震源球都使用下半球投影（上半球辐射的能量无法传播到大震中距处）。</li>
<li>离源角与纬度的对应关系为：纬度 = 离源角 - 90。</li>
</ol>
<h2 id="震源球的绘制">震源球的绘制</h2>
<h3 id="投影方式的选取">投影方式的选取</h3>
<p>目前已经拥有了震源球的下半球上任意一点的振幅（未归一化），还需要选择合适的投影方式将数据投影到 “赤道” 面上。</p>
<p>绘制震源球有两种投影方式，分别是 Schmidt 投影和 Wulff 投影。前者是等面积投影，后者是等角度投影。在 GMT 中分别对应 <code>JA</code> 和 <code>JS</code> 。这里以 Wulff 投影为例，想要使用 Schmidt 投影只需要把 <code>JS</code> 改成 <code>JA</code> 即可。</p>
<h3 id="绘图脚本">绘图脚本</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=0/360/-90/0</div><div class="line">J=S0/-90/15c</div><div class="line">B=a30f10N</div><div class="line">name=pattern</div><div class="line">PS=meca.ps</div><div class="line"></div><div class="line">gmtset BASEMAP_TYPE=plain</div><div class="line">gmtset PLOT_DEGREE_FORMAT=+</div><div class="line">xyz2grd <span class="variable">$&#123;name&#125;</span>.dat -G<span class="variable">$&#123;name&#125;</span>.nc -I6m/6m -R<span class="variable">$R</span> -ZLBxf</div><div class="line">grd2cpt <span class="variable">$&#123;name&#125;</span>.nc -Cpolar -E100 &gt; <span class="variable">$&#123;name&#125;</span>.cpt</div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K -P &gt; <span class="variable">$PS</span></div><div class="line">grdimage <span class="variable">$&#123;name&#125;</span>.nc -R<span class="variable">$R</span> -J<span class="variable">$J</span> -C<span class="variable">$&#123;name&#125;</span>.cpt -B<span class="variable">$B</span> -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">grdcontour <span class="variable">$&#123;name&#125;</span>.nc -R<span class="variable">$R</span> -J<span class="variable">$J</span> -L-0.001/0.001 -C1 -K -O -W2p &gt;&gt; <span class="variable">$PS</span></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">rm .gmt* <span class="variable">$&#123;name&#125;</span>.cpt <span class="variable">$&#123;name&#125;</span>.nc</div></pre></td></tr></table></figure>
<p>绘图脚本的一些说明：</p>
<ol style="list-style-type: decimal">
<li>设置 <code>PLOT_DEGREE_FORMAT</code> 使得方位角范围是 0 到 360，而不是 -180 到 180。其中 0 度指向正北方向。</li>
<li>这里 R 的横向范围是 0 到 360，实际上 360 度处与 0 度处是同一个经度，所以网格中没有计算 360 度处的振幅。同时在 <code>-Z</code> 选项中使用了 x 以表明 X 轴的周期性。</li>
<li>在振幅为 0 处绘制了等值线。</li>
</ol>
<h2 id="结果展示与比较">结果展示与比较</h2>
<h3 id="震源机制解-1">震源机制解</h3>
<p>从 GCMT 中找到一个地震事件，其机制解如下:</p>
<pre><code>201304191751A SOUTH OF TIMOR, INDONESI
    Date: 2013/ 4/19 Centroid Time: 17:51:46.9 GMT
    Lat= -12.01 Lon= 121.71
    Depth= 29.5 Half duration= 2.0
    Centroid time minus hypocenter time: 5.5
    Moment Tensor: Expo=24 -1.350 5.410 -4.060 -3.210 -3.580 -0.736
    Mw = 5.8 mb = 6.0 Ms = 5.8 Scalar Moment = 6.88e+24
    Fault plane: strike=315 dip=45 slip=-12
    Fault plane: strike=53  dip=82 slip=-135</code></pre>
<h3 id="矩张量-wulff-投影">矩张量 + Wulff 投影</h3>
<div class="figure">
<img src="/images/2014050106.png">

</div>
<h3 id="矩张量-schmidt-投影">矩张量 + Schmidt 投影</h3>
<div class="figure">
<img src="/images/2014050107.png">

</div>
<h3 id="断层参数-wulff-投影">断层参数 + Wulff 投影</h3>
<div class="figure">
<img src="/images/2014050108.png">

</div>
<h3 id="断层参数-schmidt-投影">断层参数 + Schmidt 投影</h3>
<div class="figure">
<img src="/images/2014050109.png">

</div>
<h3 id="gmt-psmeca-绘制矩张量解">GMT psmeca 绘制矩张量解</h3>
<p>psmeca 的 <code>-Sm</code> 选择可以用于在地图上绘制 GCMT 矩张量形式的震源球。需要注意的是这个震源球的投影方式与 <code>J</code> 指定的投影无关。这里把边框画出来，以指示出正北方向。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">psmeca -R0/250/-90/90 -JQ22c -Sm7c -W1p -B60/30 &lt;&lt;EOF&gt; gmt_meca.ps</div><div class="line">121.71 -12.01 29 -1.35 5.41 -4.06 -3.21 -3.58 -0.74 24 X Y 201304191751A</div><div class="line">EOF</div></pre></td></tr></table></figure>
<div class="figure">
<img src="/images/2014050110.png">

</div>
<h3 id="gmt-psmeca-绘制矩张量的-double-couple-部分">GMT psmeca 绘制矩张量的 double couple 部分</h3>
<p><code>-Sd</code> 用于绘制矩张量的 double couple 部分。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">psmeca -R0/250/-90/90 -JQ22c -Sd7c -W1p -B60/30 &lt;&lt;EOF&gt; gmt_meca.ps</div><div class="line">121.71 -12.01 29 -1.35 5.41 -4.06 -3.21 -3.58 -0.74 24 X Y 201304191751A</div><div class="line">EOF</div></pre></td></tr></table></figure>
<div class="figure">
<img src="/images/2014050111.png">

</div>
<h3 id="mopad-绘制矩张量">Mopad 绘制矩张量</h3>
<p>Mopad 是一个可以计算与绘制矩张量的 Python 脚本，其功能强大，可控制的参数更多:</p>
<pre><code>$ mopad plot -1.35,5.41,-4.06,-3.21,-3.58,-0.74 -i USE</code></pre>
<p>这里 <code>-i USE</code> 指定了输入的六个矩张量分量是 USE 坐标下的解。</p>
<div class="figure">
<img src="/images/2014050112.jpg">

</div>
<h2 id="图像格式转换">图像格式转换</h2>
<p>利用 ps2raster 命令可以将 PS 文件转换为其它格式的图像，最好选择透明的 PNG 格式:</p>
<pre><code>ps2raster -A -TG beachball.ps</code></pre>
<h2 id="一些小结">一些小结</h2>
<ol style="list-style-type: decimal">
<li>绘制震源球时，选择匹配的坐标系很重要；</li>
<li>可以使用 Schmidt 投影和 Wulff 投影绘制震源球，二者大体相同，细节上有差异；</li>
<li>GMT 的 psmeca 命令使用 Schmidt 投影绘制震源球，这一点无法修改；</li>
<li>GCMT 给出的震源球精度很低，但可以看出其使用了 Schmidt 投影 <code>JA</code> 。</li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-04-28：初稿 By cxh757；</li>
<li>2014-05-01：修订与补充 By SeisMan；</li>
<li>2014-05-30：增加了图像格式转换一节；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
            <tag> 震源球 </tag>
            
            <tag> 辐射花样 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 绘制地理坐标与笛卡尔坐标混合体]]></title>
      <url>http://seisman.info/mix-geographical-coordinate-with-cartesian-coordinate.html</url>
      <content type="html"><![CDATA[<h2 id="提出问题">提出问题</h2>
<p>需要画一个沿着某个经线或纬线的深度剖面图，即 X 轴表示经度或纬度，Y 轴表示深度，如下图：</p>
<div class="figure">
<img src="/images/2014042601.png">

</div>
<a id="more"></a>
<h2 id="分析问题">分析问题</h2>
<p>这张图比较特殊的地方在于，X 轴是地理坐标，Y 轴是笛卡尔坐标。最简单的办法是直接用线性投影 <code>-JX</code> 来绘制整张图，比如:</p>
<pre><code>gmt psbasemap -R40/50/0/600 -JX15c/-10c -Bx2 -By100 &gt; mix.ps</code></pre>
<p>效果如下图：</p>
<div class="figure">
<img src="/images/2014042602.png">

</div>
<p>显然，这张图还差了一点，X 轴的坐标都没有 “度” 符号以及 <code>WSEN</code> 后缀，无法体现出其地理坐标的特征。</p>
<h2 id="解决问题">解决问题</h2>
<p>解决办法如下:</p>
<pre><code>gmt set FORMAT_GEO_MAP +ddd:mmF
gmt psbasemap -R40/50/0/600 -JX15cd/-10c -Bx2 -By100 &gt; mix.ps</code></pre>
<p>几点说明：</p>
<ul>
<li><code>FORMAT_GEO_MAP</code> 用于设置地理坐标的显示方式。这里的 <code>+ddd:mmF</code> 表示以 <code>度:分</code> 的形式显示，并加上 <code>EWSN</code> 后缀；</li>
<li><code>-JX15cd/-10c</code> 设定了线性投影方式。X 轴多了一个 <code>d</code>，用于显式指定 X 轴为地理坐标；Y 轴没有 <code>d</code>，为正常的笛卡尔坐标；这里 Y 轴的长度是负值，表示 Y 值从上到下递增，以符合常见的深度的定义；</li>
<li>GMT4 同理，但 GMT 4.5.13 似乎存在 bug，当使用 <code>-JX15cd/-10c</code> 时，X 轴的标注的位置会出现偏差；尚未发布的 GMT 4.5.14 中该 bug 已被修复；</li>
<li>X 轴由于是地理坐标，所以不能用 <code>-B</code> 选项给 X 轴加标题；如果需要加标题的话，只能使用 <code>pstext</code>；</li>
</ul>
<h2 id="其它解决方法">其它解决方法</h2>
<p>下面列出最初对于这个问题的分析以及两种稍复杂的解决方案。虽说下面的两种方案更复杂了，但其思路与想法还是很有意思的，或许在其它问题上可以借鉴，因而将其列出。</p>
<h3 id="分析问题-1">分析问题</h3>
<ol style="list-style-type: decimal">
<li>因为 Y 轴是线性坐标，所以必然只能选择线性投影，即 <code>-JX</code></li>
<li>线性投影的情况下，图的主体很简单，关键在于 X 轴坐标的 “度” 符号以及后缀 E 上</li>
<li>尝试将 X 轴和 Y 轴都当作线性坐标，然后对于 X 轴设置其 <strong>单位</strong> 为特殊的 “度” 符号。此法看似可行，但实际上 GMT 内部设置了单位与标注之间的距离，通过单位设置的 “度” 符号明显离标注的距离较远，不太美观。</li>
<li>为了使 X 轴有一个 “度” 符号，X 轴必须当作地理坐标处理；而 Y 轴的范围已经超过了地理坐标的范围，所以必须当作线性坐标处理；</li>
<li>综上，必须使用两个命令来绘制边框，分别绘制地理坐标的 X 轴（<code>-BxxxSN</code>）和线性坐标的 Y 轴（<code>-BxxxEW</code>）；</li>
<li>关于如何绘制地理坐标的 X 轴，有两种解决办法。</li>
</ol>
<h3 id="解决问题-1">解决问题</h3>
<h4 id="法-1">法 1</h4>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#/bin/bash</span></div><div class="line">Rx=40/50    <span class="comment"># X 轴范围</span></div><div class="line">Ry=0/600    <span class="comment"># Y 轴范围</span></div><div class="line">R=<span class="variable">$Rx</span>/<span class="variable">$Ry</span></div><div class="line">B=2/100     <span class="comment"># 间隔</span></div><div class="line">J=X15c/10c</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span>   <span class="comment"># 写入 PS 文件头</span></div><div class="line"></div><div class="line">psbasemap -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$&#123;B&#125;</span>SN -K -O --D_FORMAT=<span class="string">'%g\260E'</span> &gt;&gt; <span class="variable">$PS</span>    <span class="comment"># 绘制 X 轴</span></div><div class="line">psbasemap -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$&#123;B&#125;</span>EW -K -O &gt;&gt; <span class="variable">$PS</span>     <span class="comment"># 绘制 Y 轴</span></div><div class="line"></div><div class="line"><span class="comment"># 这里放置其它绘图命令，不再使用 B 选项</span></div><div class="line"></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span>  <span class="comment"># 写入 PS 文件尾</span></div><div class="line">rm .gmt*</div></pre></td></tr></table></figure>
<p>这里绘制 X 轴时直接使用 <code>--D_FORMAT=%g\260E</code> ，使得在该命令中 <code>D_FORMAT</code> 的值为 <code>%g\260E</code>， 即设置显示浮点数时在其后加上 “度” 符号以及后缀“E”。</p>
<p>此法的优点在于简单，缺点在于后缀 “E” 是固定值，无法处理东西经同时存在的情况。</p>
<h4 id="法-2">法 2</h4>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#/bin/bash</span></div><div class="line">Rx=40/50    <span class="comment"># X 轴范围</span></div><div class="line">Ry=0/600    <span class="comment"># Y 轴范围</span></div><div class="line">Rfake=0/1   <span class="comment"># 假轴范围</span></div><div class="line">R=<span class="variable">$Rx</span>/<span class="variable">$Ry</span></div><div class="line">B=2/100     <span class="comment"># 间隔</span></div><div class="line">J=X20c/15c</div><div class="line">PS=map.ps</div><div class="line"></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K &gt; <span class="variable">$PS</span>   <span class="comment"># 写入 PS 文件头</span></div><div class="line"></div><div class="line">psbasemap -Rg<span class="variable">$Rx</span>/<span class="variable">$Rfake</span> -J<span class="variable">$J</span> -B<span class="variable">$&#123;B&#125;</span>SN -K -O --BASEMAP_TYPE=plain &gt;&gt; <span class="variable">$PS</span>    <span class="comment"># 绘制 X 轴</span></div><div class="line">psbasemap -R<span class="variable">$R</span> -J<span class="variable">$J</span> -B<span class="variable">$&#123;B&#125;</span>EW -K -O &gt;&gt; <span class="variable">$PS</span>     <span class="comment"># 绘制 Y 轴</span></div><div class="line"></div><div class="line"><span class="comment"># 这里放置其它绘图命令，不再使用 B 选项</span></div><div class="line"></div><div class="line">psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span>  <span class="comment"># 写入 PS 文件尾</span></div><div class="line">rm .gmt*</div></pre></td></tr></table></figure>
<h3 id="其它的说明">其它的说明</h3>
<ol style="list-style-type: decimal">
<li>GMT 的 B 选项提供了这样一个功能，可以使用形如 <code>-Bgxmin/xmax/ymin/ymax</code> 的语法，其中 <code>g</code> 告诉命令即便使用 <code>-JX</code> 投影，也认为其是地理坐标。由于是地理坐标，“度”符号以及后缀 “E” 就很容易出来了</li>
<li>使用 <code>-Bgxmin/xmax/ymin/ymax</code> 存在两个问题
<ol style="list-style-type: decimal">
<li>虽然是线性投影，但是由于使用了地理坐标，GMT 会默认将底图类型设置为 fancy。这一点可以设置 <code>BASEMAP_TYPE</code> 等于 <code>plain</code> 来解决。</li>
<li>Y 轴被当作地理坐标，所以 ymin 和 ymax 的范围被限制在 [-90,90] 之内</li>
</ol></li>
<li>在此例中在绘制 X 轴时引入了一个假的 Y 轴 <code>0/1</code>，以满足 <code>-Rgxmin/xmax/ymin/ymax</code> 形式中对 ymin 和 ymax 范围的限制。</li>
</ol>
<p>这样，X 轴和 Y 轴就都设计好了，接下来要做的就只是保证其它命令都不使用 B 选项即可。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-04-26：初稿；</li>
<li>2014-04-26：修改脚本，解决了对 Y 轴范围的限制；Thanks to Chen Zhaohui；</li>
<li>2014-06-09：通过修改 <code>D_FORMAT</code> 以解决地理坐标的度符号；该方法由刘珠妹提供；</li>
<li>2014-07-09：找到了一种非常简单的方法来解决该问题；</li>
<li>2014-11-24：修正了 <code>--PLOT_DEGREE_FORMAT</code> 中的小问题；</li>
<li>2015-06-29：GMT4.5.13 在解决该问题时有其他 bug，这里使用 GMT5；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[走时计算软件包]]></title>
      <url>http://seisman.info/travel-time-packages.html</url>
      <content type="html"><![CDATA[<p>地震波走时的计算是地震学的一个基本问题。下面列出几个目前已知的几个可以计算地震波走时的包。</p>
<a id="more"></a>
<p>以下软件按照功能性、方便性等综合排序：</p>
<ol style="list-style-type: decimal">
<li><p>TauP Toolkit</p>
<p>网址： <a href="http://www.seis.sc.edu/taup/" class="uri" target="_blank" rel="external">http://www.seis.sc.edu/taup/</a></p>
<p>Java 版，具体良好的跨平台能力。包含图形界面和命令行工具，是目前来说最好用的走时计算工具，但是其还是有一些缺憾，最明显的一点是在命令行的输出对于脚本批量处理不算友好。</p></li>
<li><p>ObsPy TauP</p>
<p>网址： <a href="http://docs.obspy.org/packages/obspy.taup.html" class="uri" target="_blank" rel="external">http://docs.obspy.org/packages/obspy.taup.html</a></p>
<p>Python 版本，简单易用，但目前功能还没有Java版TauP丰富。相比于Java版的优势在于，其可以将数据以完整精度输出，而 Java 版 TauP 很多数据只能输出小数点后两位。</p></li>
<li><p>MatTauP</p>
<p>网址：<a href="https://github.com/g2e/seizmo/tree/master/mattaup" class="uri" target="_blank" rel="external">https://github.com/g2e/seizmo/tree/master/mattaup</a></p>
<p>Matlab 版，是 seiszmo 项目的一部分，底层貌似调用了 Java 版 TauP 的代码。</p></li>
<li><p>Cake</p>
<p>网址： <a href="http://emolch.github.io/pyrocko/current/cake_doc.html" class="uri" target="_blank" rel="external">http://emolch.github.io/pyrocko/current/cake_doc.html</a></p>
<p>Python 版，Pyrocko 项目的一部分，支持自定义模型，且可以处理更复杂的震相名。</p></li>
<li><p>George Helffrich 修改版</p>
<p>网址： <a href="http://www1.gly.bris.ac.uk/~george/sac-bugs.html#ttimes" class="uri" target="_blank" rel="external">http://www1.gly.bris.ac.uk/~george/sac-bugs.html#ttimes</a></p>
<p>Fortran 版本，该版本是在 ttimes 的基础上修改得到，相比 ttimes，加入了更多的速度模型，可以直接编译使用。</p></li>
<li><p>iaspei-tau</p>
<p>网址： <a href="https://seiscode.iris.washington.edu/projects/iaspei-tau" class="uri" target="_blank" rel="external">https://seiscode.iris.washington.edu/projects/iaspei-tau</a></p>
<p>原始的 ttimes 的修改版本，支持 ak135 和 iasp91 模型。</p></li>
<li><p>IASPEI Travel Time Software - AK135 version</p>
<p>网址： <a href="http://rses.anu.edu.au/seismology/soft/ttsoft.html" class="uri" target="_blank" rel="external">http://rses.anu.edu.au/seismology/soft/ttsoft.html</a></p>
<p>这个版本的源码比较古老，可能是用 Fortran77 甚至更老的版本写的。曾经试图编译，发现很多语法编译器已经不再支持，改起来应该不困难，但是有些繁琐，不建议使用。且该版本只支持 ak135 模型。</p></li>
</ol>
<p>这几个软件都是基于同一个原理，参考如下：</p>
<p>Buland, R. and C. H. Chapman (1983). The Computation of Seismic Travel Times, Bull. Seism. Soc. Am. 73(5),1271–1302.</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-03-29：初稿</li>
<li>2016-02-24：新增 cake</li>
<li>2017-03-31：新增 obspy.taup</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 走时 </tag>
            
            <tag> TauP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 在 Windows 下的中文支持]]></title>
      <url>http://seisman.info/gmt-chinese-support-under-windows.html</url>
      <content type="html"><![CDATA[<p>GMT 在 Windows 下如何支持中文的问题在这篇 <a href="http://xxqhome.blog.163.com/blog/static/1967330202011112810120598/" target="_blank" rel="external">博文</a> 里已经说的差不多了。本文会在该博文的基础上做进一步地整理、归纳和补充。</p>
<a id="more"></a>
<h2 id="准备工作">准备工作</h2>
<ol style="list-style-type: decimal">
<li>安装 Windows 版 GMT；</li>
<li><p>安装 ghostscript；</p>
<p>需要注意在安装的最后，会有一个生成 cidmap 的选项，选中该选项则表示会为当前系统自动生成中文所需的 cidmap 文件。默认该选项是被选中的，一定 <strong>不要</strong> 将该选项取消；</p></li>
<li><p>安装 gsview；</p></li>
</ol>
<h2 id="ghostscript-的中文支持">ghostscript 的中文支持</h2>
<p>若 ghostscript 的安装没有问题，则在 <code>C:\Program Files\gs\gs9.15\examples\cjk</code> 目录下可以找到文件 <code>gscjk_ag.ps</code> 。</p>
<p>启动 cmd，键入如下命令:</p>
<pre><code>cd &quot;C:\Program Files\gs\gs9.16\bin&quot;
gswin64.exe ..\examples\cjk\gscjk_ag.ps</code></pre>
<p>该命令用命令行版本的 <code>gswin64c</code> 打开 <code>gscjk_ag.ps</code>，若能看到中文，则说明 ghostscript 是可以正常支持中文的。</p>
<h2 id="gsview-的中文支持">gsview 的中文支持</h2>
<p>安装好 gsview 之后，PS 格式会自动与 gsview 关联。一般情况下，直接双击 PS 文件，就会用 gsview 打开该 PS 文件。</p>
<p>双击打开 <code>gscjk_ag.ps</code>，一般情况下不会正确显示汉字。这是因为 gsview 在打开 PS 文件时没有找到汉字所对应的字体文件。</p>
<p>在 gsview 的 “选项”-&gt;“高级配置” 中，将 Ghostscript Options 由 <code>-dNOPLATFONTS -sFONTPATH=&quot;c:\psfonts&quot;</code> 改成 <code>-dNOPLATFONTS -sFONTPATH=&quot;C:\Windows\Fonts&quot;</code>，此时 gsview 在调用 gswin64 时会将选项传递给 gswin64，gswin64 则会在 <code>FONTPATH</code> 中搜索字体。</p>
<p>配置完毕后，重新打开 <code>gscjk_ag.ps</code>，若中文正常显示，则表示 gsview 已支持中文。</p>
<h2 id="gmt-的中文支持">GMT 的中文支持</h2>
<p>用 <strong>编辑器</strong> 打开 <code>gscjk_ag.ps</code> ，会看到如下内容:</p>
<pre><code>/STSong-Light--GB-EUC-H *findfont 20 scalefont setfont
150 400 moveto
(Song Typeface 宋体) show
/STFangsong-Light--GB-EUC-H *findfont 20 scalefont setfont
150 375 moveto
(Fangsong Typeface 仿宋体) show
/STHeiti-Regular--GB-EUC-H *findfont 20 scalefont setfont
150 350 moveto
(Hei Typeface 黑体) show
/STKaiti-Regular--GB-EUC-H *findfont 20 scalefont setfont
150 325 moveto
(Kai Typeface 揩体) show
%
/Times-Roman findfont 13 scalefont setfont
50 200 moveto
(* Chinese translation of&quot;Ghostscript&quot; is merely associative \
characters of these meanings.) show
50 200 13 sub moveto
(In Simplified Chinese articles, customarily we use just&quot;Ghostscript&quot; \
as it is.) show</code></pre>
<p>其中 <code>STSong-Light--GB-EUC-H</code> 即为宋体， <code>GB-EUC</code> 是文字编码方式， <code>H</code> 表示水平字体， <code>V</code> 表示垂直向字体，这里给出了四种常见字体的名称</p>
<ol style="list-style-type: decimal">
<li><code>STSong-Light--GB-EUC-H</code></li>
<li><code>STFangsong-Light--GB-EUC-H</code></li>
<li><code>STHeiti-Regular--GB-EUC-H</code></li>
<li><code>STKaiti-Regular--GB-EUC-H</code></li>
</ol>
<p>将这四种中文字体添加到 GMT 的字体配置文件中，GMT 版本不同，配置文件的位置也不同：</p>
<ul>
<li>GMT 5.1.2 及其之前版本： <code>C:\programs\gmt5\share\pslib\PS_font_info.d</code></li>
<li>GMT 5.2.1 及其之后版本： <code>C:\programs\gmt5\share\postscriptlight\PSL_standard_fonts.txt</code></li>
</ul>
<p>字体配置文件修改后，最后几行如下:</p>
<pre><code>ZapfChancery-MediumItalic   0.610       0
ZapfDingbats            0.700       1
STSong-Light--GB-EUC-H  0.700    1
STFangsong-Light--GB-EUC-H  0.700    1
STHeiti-Regular--GB-EUC-H   0.700   1
STKaiti-Regular--GB-EUC-H   0.700   1</code></pre>
<p>用 <code>gmt pstext -L</code> 查看 GMT 字体，可以看到，新添加的四种中文字体对应的字体编号为 35 到 38。</p>
<h2 id="测试脚本">测试脚本</h2>
<p>本代码为 GMT5 语法！</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">gmt gmtset FONT_TITLE 40p,35,black</div><div class="line"></div><div class="line"><span class="built_in">echo</span> 3.5 5 0 LM 45p,35,red  GMT 宋体 &gt; tmp</div><div class="line"><span class="built_in">echo</span> 3.5 4 0 LM 45p,36,blue GMT 仿宋 &gt;&gt; tmp</div><div class="line"><span class="built_in">echo</span> 3.5 3 0 LM 45p,37,yellow GMT 黑体 &gt;&gt; tmp</div><div class="line"><span class="built_in">echo</span> 3.5 2 0 LM 45p,38,green GMT 楷体 &gt;&gt; tmp</div><div class="line"></div><div class="line">gmt pstext tmp -R0/7/0/7 -JX6i/6i -Bafg -B+t<span class="string">"GMT 中文"</span> -F+a+c+f -P &gt; cn.ps</div></pre></td></tr></table></figure>
<p>若生成的 PS 文件正常显示汉字，则表示 GMT 已经可以支持中文。</p>
<p>需要注意，若使用记事本编辑 bat 文件，则保存时应注意编码方式为 ANSI、Unicode 或 Unicode big endian，若使用 UTF-8 编码则会出现乱码；另外，很多编辑器默认将文本文件以 UTF-8 编码保存，因而可能需要修改编辑器的默认编码。</p>
<h2 id="图片格式转换">图片格式转换</h2>
<p>使用 GMT 自带的 <code>ps2raster</code> 命令可以将 PS 文件转换为其它图片格式。</p>
<p>在 Windows 下，对于含中文的 PS 文件，需要在 ps2raster 上加上字体路径，如下:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps2raster -C<span class="_">-s</span>FONTPATH=C:\Windows\Fonts test.ps</div></pre></td></tr></table></figure>
<p>即可正常使用。</p>
<ol style="list-style-type: decimal">
<li>GMT 5.1.1 存在 bug，上面的命令无法与 - A 选项一起使用；</li>
<li>GMT 5.1.2 在 Windows 下存在 Bug，主要是由于引号的错误使用导致；</li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ol style="list-style-type: decimal">
<li>2014-03-27：初稿；</li>
<li>2016-01-05：GMT 5.2.1 中字体配置文件的位置发生变化；</li>
</ol>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> 中文 </tag>
            
            <tag> Windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[跟我一起写 Makefile (PDF 重制版)]]></title>
      <url>http://seisman.info/how-to-write-makefile.html</url>
      <content type="html"><![CDATA[<h2 id="简介">简介</h2>
<p>《跟我一起写 Makefile》是 <a href="http://coolshell.cn/haoel" target="_blank" rel="external">陈皓</a> 发表在其 CSDN 博客上的 系列文章，一直受到读者的推荐，是很多人学习 Makefile 的首选文档。目前网络上流传的 PDF 版本多为祝冬华整理的版本。这个版本的排版一般，代码部分没有做任何语法高亮。</p>
<p>2010 年初学 Makefile 的时候，读了前几章皮毛，一直用到了现在。最近想着重新学习一下 Makefile，顺便学习一下 Sphinx，重新制作一个更精美的 PDF 版本。</p>
<h2 id="相关">相关</h2>
<ul>
<li>书的文字部分来自于 <a href="http://andriki.com/mediawiki/index.php?title=Linux:跟我一起写Makefile" target="_blank" rel="external">Andriki</a> 提供的 Mediawiki 源码；</li>
<li>使用 <a href="http://sphinx-doc.org/" target="_blank" rel="external">Sphinx</a> 制作文档</li>
<li>项目主页：<a href="https://github.com/seisman/how-to-write-makefile" class="uri" target="_blank" rel="external">https://github.com/seisman/how-to-write-makefile</a></li>
<li>网页在线版：<a href="http://how-to-write-makefile.readthedocs.io/zh_CN/latest/" class="uri" target="_blank" rel="external">http://how-to-write-makefile.readthedocs.io/zh_CN/latest/</a></li>
<li>下载： <a href="https://media.readthedocs.org/pdf/how-to-write-makefile/latest/how-to-write-makefile.pdf" target="_blank" rel="external">PDF版</a> <a href="https://media.readthedocs.org/epub/how-to-write-makefile/latest/how-to-write-makefile.epub" target="_blank" rel="external">EPUB版</a></li>
</ul>
<h2 id="sphinx-中文支持">sphinx 中文支持</h2>
<p>sphinx 在利用 LaTeX 生成 PDF 时，对中文支持不够，因而需要做特殊配置，详情 见 <a href="/chinese-support-for-sphinx.html">sphinx的中文支持</a>。</p>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> make </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地震数据的命名规则]]></title>
      <url>http://seisman.info/seismic-file-name-convections.html</url>
      <content type="html"><![CDATA[<p>利用 <code>rdseed</code> 程序可以很容易地从 SEED 格式数据中解压得到 SAC 格式的地震记录，下面就是一个 SAC 数据的文件名:</p>
<pre><code>2013.166.17.34.00.0195.IU.HRV.10.BHZ.M.SAC</code></pre>
<p>这篇博文说一说文件的命名规则。</p>
<a id="more"></a>
<h2 id="文件名格式">文件名格式</h2>
<p>根据 <code>rdseed</code> 的 Manual，SAC 数据的文件名形式如下:</p>
<pre><code>yyyy.ddd.hh.mm.ss.ffff.NN.SSSSS.LL.CCC.Q.SAC</code></pre>
<p>其中</p>
<ul>
<li><code>yyyy.ddd.hh.mm.ss.ffff</code> 是 SAC 文件中第一个数据点对应的时间
<ul>
<li><code>yyyy</code> 为年；</li>
<li><code>ddd</code> 为一年的第多少天；</li>
<li><code>hh.mm.ss</code> 为时, 分, 秒；</li>
<li><code>ffff</code> 为毫秒；需要注意的是 1s=1000ms，这里毫秒却用了 4 位来表示，这里很容易出错。</li>
</ul></li>
<li><code>NN</code> 为台网名，2 字符；</li>
<li><code>SSSSS</code> 为台站名，一般是 3 个字符，偶尔见到 4 字符的；</li>
<li><code>LL</code> 为 location id；为空或两字符；</li>
<li><code>CCC</code> 为通道名；</li>
<li><code>Q</code> 为质量控制标识；</li>
<li><code>SAC</code> 为文件后缀；</li>
</ul>
<h2 id="location-id-ll">Location ID: LL</h2>
<p>关于 Location ID 的详细介绍，见 <a href="http://ds.iris.edu/ds/newsletter/vol1/no1/specification-of-seismograms-the-location-identifier/" target="_blank" rel="external">IRIS: DS Newsletter: Vol. 1, No. 1</a></p>
<p>Location ID 用于区分同一个台站下多个传感器的不同数据，或者同一个传感器传来的多个数据流。 通常来说，同一个台站不同 location ID 的两个地震数据具有极为相似但有略有不同的波形。</p>
<p>常见的 Location ID 为空，偶尔会见到 <code>00</code> , <code>01</code> , <code>10</code> 这样的，也有遇到 <code>60</code> 这样的。</p>
<h2 id="质量控制-q">质量控制: Q</h2>
<p>质量控制标识有四种:</p>
<ul>
<li>D: Data of undetermined state</li>
<li>M: Merged Data</li>
<li>R: Raw waveform Data</li>
<li>Q: QC’d data</li>
</ul>
<p>一般见到的都是 M。</p>
<h2 id="通道名-ccc">通道名: CCC</h2>
<p>通道名用三个字符来表示，这三个字符分别代表了 Band Code、Instrument Code 和 Orientation Code。</p>
<h3 id="band-code">Band Code</h3>
<p>Band Code 是通道名的第一个字符，表示了仪器的采样率以及响应频带等信息。</p>
<div class="figure">
<img src="/images/2014030501.jpg" alt="Band Code">
<p class="caption">Band Code</p>
</div>
<p>常见的仪器一般是宽频带 (B) 或长周期(L)。</p>
<h3 id="instrument-code">Instrument Code</h3>
<p>Instrument Code 是通道名的第二个字符，代表了不同的仪器传感器。</p>
<table>
<thead>
<tr class="header">
<th align="center">Instrument Code</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center">H</td>
<td align="left">High Gain Seismometer</td>
</tr>
<tr class="even">
<td align="center">L</td>
<td align="left">Low Gain Seismometer</td>
</tr>
<tr class="odd">
<td align="center">G</td>
<td align="left">Gravimeter</td>
</tr>
<tr class="even">
<td align="center">M</td>
<td align="left">Mass position Seismometer</td>
</tr>
<tr class="odd">
<td align="center">N</td>
<td align="left">Accelerometer</td>
</tr>
</tbody>
</table>
<p>常见的是高增益 (H) 仪器，记录地面运动速度。</p>
<h3 id="orientation-code">Orientation Code</h3>
<p>Orientation Code 表示了传感器记录的地面运动的方向。</p>
<table>
<thead>
<tr class="header">
<th align="center">Code</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center">N E Z</td>
<td align="left">南北向、东西向、垂向</td>
</tr>
<tr class="even">
<td align="center">1 2 3</td>
<td align="left">3 为垂向；1、2 为水平方向，正交但与东西南北向有偏离</td>
</tr>
<tr class="odd">
<td align="center">T R</td>
<td align="left">切向、径向，主要用于射线束中</td>
</tr>
<tr class="even">
<td align="center">A B C</td>
<td align="left">三轴向 (正交)</td>
</tr>
<tr class="odd">
<td align="center">U V W</td>
<td align="left">可选分量</td>
</tr>
</tbody>
</table>
<p>常见的是 N、E、Z 以及 1、2、3。</p>
<p>需要注意的是：当仪器的方向与东西方向的夹角小于 5 度时，此 Orientation Code 取为 E；当与东西方向夹角大于 5 度时，Orientation Code 取为 1(或 2). 对于南北方向同理。</p>
<p>因而，即便 Orientation Code 为 N，也并不意味着台站是南北方向的，真实的方向还是需要看 SAC 头段中的 <code>cmpaz</code> 和 <code>cpminc</code> 。</p>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li>rdseed 5.3.1 Manual</li>
<li>SEED Reference Manual v2.4, Appendix A, P136-P140</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用 EPEL 和 RPMforge 源安装 netcdf 时的冲突]]></title>
      <url>http://seisman.info/conflict-between-epel-and-rpmforge.html</url>
      <content type="html"><![CDATA[<p>新版本的 GMT 的编译与运行要求 netCDF 的版本大于 4，且支持 netCDF4/HDF5。即如果想要手动编译 netCDF4 以上的版本，则同时需要编译 hdf5，而 hdf5 又依赖于 zlib 和 szlib 等等包，所以手动编译 netcdf 相当不合算。</p>
<p>大多数发行版中应该都有 netcdf4，所以不会出现太多的问题。</p>
<p>CentOS 官方源中没有 netcdf，因而需要使用第三方源，直接将别人已经编译好的文件拿过来使用。其中最常用的就是 EPEL 和 RPMforge。而恰好二者都包含了 netcdf、netcdf-devel、hdf5、hdf5-devel 包。由此引发了一些冲突。</p>
<a id="more"></a>
<p>EPEL 中的 netcdf 版本为 4.1.1，其编译过程中依赖于 hdf5，因而当通过</p>
<pre><code>sudo yum install netcdf netcdf-devel</code></pre>
<p>安装 netcdf 时，hdf5 以及 hdf5-devel 会由于依赖关系而被自动安装。</p>
<p>而 RPMforge 中 netcdf 的版本为 4.1.2，其编译过程中没有加入 hdf5 依赖，所以当</p>
<pre><code>sudo yum install netcdf netcdf-devel</code></pre>
<p>时，hdf5 由于没有被依赖，所以不会被安装。</p>
<p>所以通过 EPEL 安装的 netcdf4 是可以被 GMT 使用的，而通过 RPMforge 安装的 netcdf4 是不能被使用的。而由于 RPMforge 的 netcdf 版本比 EPEL 的版本高，因而两个源共存时，RPMforge 的 netcdf 会被优先安装。（利用优先级插件设置之后好像没有用）</p>
<p>因而当遇到如下报错时:</p>
<pre><code>-- Looking for nc_def_var_deflate
-- Looking for nc_def_var_deflate - not found
CMake Error at cmake/modules/FindNETCDF.cmake:127 (message):
Library found but netCDF-4/HDF5 format unsupported. Do not configure
netCDF-4 with --disable-netcdf-4.
Call Stack (most recent call first):
src/CMakeLists.txt:39 (find_package)</code></pre>
<p>需要确认 netcdf 究竟来自于 EPEL 还是 RPMforge。</p>
<p>用来检查的命令如下:</p>
<ol style="list-style-type: decimal">
<li><p>查看当前系统中所使用的源 :</p>
<pre><code>yum repolist</code></pre></li>
<li><p>查看优先的 netcdf-devel 的版本以及来自哪个源 :</p>
<pre><code>yum info netcdf-devel</code></pre></li>
<li><p>查看 netcdf-devel 包依赖于哪些其他包 :</p>
<pre><code>yum deplist netcdf-devel</code></pre></li>
<li><p>查看当前系统中已安装的相关包 :</p>
<pre><code>rpm -qa | grep netcdf
rpm -qa | grep hdf5</code></pre></li>
</ol>
<p>通过以上四个方法确认 netcdf 以及 hdf5 均来自于 EPEL，则没问题。</p>
<p>如果确认无误，依然出现如上报错，一个可能的原因是自己曾经尝试编译过 netcdf，并禁用了 hdf5 相关功能，而删除 netcdf 时没有删除干净，或者怎样。</p>
<p>如果真的没招了，可以查看编译 GMT 时的 <code>build/CMakeFiles</code> 目录下的 <code>CMakeError.log</code> 和 <code>CMakeOutput.log</code> 这两个日志文件，寻找与 netcdf 相关的部分。</p>
<p>其实质是找到 netcdf 的动态链接库，并通过如下 C 代码</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netcdf.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></div><div class="line">&#123;</div><div class="line">    (<span class="keyword">void</span>)argv;</div><div class="line">    <span class="meta">#<span class="meta-keyword">ifndef</span> nc_def_var_deflate</span></div><div class="line">        <span class="keyword">return</span> ((<span class="keyword">int</span>*)(&amp;nc_def_var_deflate))[argc];</div><div class="line">    <span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line">        (<span class="keyword">void</span>)argc;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>检测动态链接库中是否定义了函数 <code>nc_def_var_deflate</code> 。</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[sphinx 生成中文 PDF]]></title>
      <url>http://seisman.info/chinese-support-for-sphinx.html</url>
      <content type="html"><![CDATA[<p><a href="http://sphinx-doc.org/" target="_blank" rel="external">sphinx</a> 是 Python 提供的文档生成工具，其可以将 rST 源文件 转换成网页、PDF 等多种格式。目前，sphinx 1.3.1 在生成中文 PDF 时有一堆问题，所以 需要做一些额外的处理才能解决。</p>
<p><a href="https://readthedocs.org" target="_blank" rel="external">readthedocs</a> 可以直接用于托管 sphinx 生成的网页文档， 由于 sphinx 不支持中文 PDF，所以 readthedocs 也不支持。readthedocs 的服务器是 Ubuntu， 具体版本未知，TeXLive 版本未知，但是肯定早于 TeXLive 2014。所以 readthedocs 上中文 支持就更是一个问题。因而在 readthedocs 网站上以及在本地，有两套不同的做法。</p>
<a id="more"></a>
<h2 id="修改-conf.py">修改 conf.py</h2>
<p>对 <code>conf.py</code> 修改如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">on_rtd = os.environ.get(<span class="string">'READTHEDOCS'</span>, <span class="keyword">None</span>) == <span class="string">'True'</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> on_rtd:</div><div class="line">    latex_elements = &#123;</div><div class="line">    <span class="comment"># The paper size ('letterpaper' or 'a4paper').</span></div><div class="line">    <span class="comment">#'papersize': 'letterpaper',</span></div><div class="line"></div><div class="line">    <span class="comment"># The font size ('10pt', '11pt' or '12pt').</span></div><div class="line">    <span class="comment">#'pointsize': '10pt',</span></div><div class="line"></div><div class="line">    <span class="comment"># Additional stuff for the LaTeX preamble.</span></div><div class="line">    <span class="string">'preamble'</span>: <span class="string">r'''</span></div><div class="line">    \hypersetup&#123;unicode=true&#125;</div><div class="line">    \usepackage&#123;CJKutf8&#125;</div><div class="line">    \DeclareUnicodeCharacter&#123;00A0&#125;&#123;\nobreakspace&#125;</div><div class="line">    \DeclareUnicodeCharacter&#123;2203&#125;&#123;\ensuremath&#123;\exists&#125;&#125;</div><div class="line">    \DeclareUnicodeCharacter&#123;2200&#125;&#123;\ensuremath&#123;\forall&#125;&#125;</div><div class="line">    \DeclareUnicodeCharacter&#123;2286&#125;&#123;\ensuremath&#123;\subseteq&#125;&#125;</div><div class="line">    \DeclareUnicodeCharacter&#123;2713&#125;&#123;x&#125;</div><div class="line">    \DeclareUnicodeCharacter&#123;27FA&#125;&#123;\ensuremath&#123;\Longleftrightarrow&#125;&#125;</div><div class="line">    \DeclareUnicodeCharacter&#123;221A&#125;&#123;\ensuremath&#123;\sqrt&#123;&#125;&#125;&#125;</div><div class="line">    \DeclareUnicodeCharacter&#123;221B&#125;&#123;\ensuremath&#123;\sqrt[3]&#123;&#125;&#125;&#125;</div><div class="line">    \DeclareUnicodeCharacter&#123;2295&#125;&#123;\ensuremath&#123;\oplus&#125;&#125;</div><div class="line">    \DeclareUnicodeCharacter&#123;2297&#125;&#123;\ensuremath&#123;\otimes&#125;&#125;</div><div class="line">    \begin&#123;CJK&#125;&#123;UTF8&#125;&#123;gbsn&#125;</div><div class="line">    \AtEndDocument&#123;\end&#123;CJK&#125;&#125;</div><div class="line">    ''',</div><div class="line">    &#125;</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    latex_elements = &#123;</div><div class="line">        <span class="string">'papersize'</span> : <span class="string">'a4paper'</span>,</div><div class="line">        <span class="string">'utf8extra'</span> : <span class="string">''</span>,</div><div class="line">        <span class="string">'inputenc'</span>  : <span class="string">''</span>,</div><div class="line">        <span class="string">'babel'</span>     : <span class="string">r'''\usepackage[english]&#123;babel&#125;'''</span>,</div><div class="line">        <span class="string">'preamble'</span> : <span class="string">r'''</span></div><div class="line">        \usepackage&#123;ctex&#125;</div><div class="line">        ''',</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>其中， <code>READTHEDOCS</code> 是 readthedocs 定义的环境变量，通过检测该环境变量来 判断是在 readthedocs 服务器上还是在本地。</p>
<p>在 readthedocs 服务器上，只能使用 <code>latexpdf</code> 编译，且只能使用其自带的中文字体。 在本地，如果安装了 TeXLive 2015，则可以使用 ctex 宏包，并用 <code>xelatex</code> 编译。</p>
<h2 id="修改-makefile">修改 Makefile</h2>
<p>对 Makefile 修改如下，这一修改仅对本地生效，不影响 readthedocs 上的使用：</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="section">xelatexpdf:</span></div><div class="line">    <span class="variable">$(SPHINXBUILD)</span> -b latex <span class="variable">$(ALLSPHINXOPTS)</span> <span class="variable">$(BUILDDIR)</span>/latex</div><div class="line">    @echo <span class="string">"Running LaTeX files through xelatex..."</span></div><div class="line">    sed -i s/pdflatex/xelatex/ <span class="variable">$(BUILDDIR)</span>/latex/Makefile</div><div class="line">    <span class="variable">$(MAKE)</span> -C <span class="variable">$(BUILDDIR)</span>/latex all-pdf</div><div class="line">    @echo <span class="string">"xelatex finished; the PDF files are in <span class="variable">$(BUILDDIR)</span>/latex."</span></div></pre></td></tr></table></figure>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="https://github.com/rtfd/readthedocs.org/issues/621" class="uri" target="_blank" rel="external">https://github.com/rtfd/readthedocs.org/issues/621</a></li>
<li><a href="https://github.com/JuliaCN/julia_zh_cn/blob/master/conf.py" class="uri" target="_blank" rel="external">https://github.com/JuliaCN/julia_zh_cn/blob/master/conf.py</a></li>
<li><a href="https://github.com/sphinx-doc/sphinx/issues/894" class="uri" target="_blank" rel="external">https://github.com/sphinx-doc/sphinx/issues/894</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> PDF </tag>
            
            <tag> LaTeX </tag>
            
            <tag> 中文 </tag>
            
            <tag> sphinx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用 xeCJK 解决中文问题的最小模板]]></title>
      <url>http://seisman.info/mini-template-for-xeCJK.html</url>
      <content type="html"><![CDATA[<p>LaTeX 的中文支持一直是个问题，11 年左右刚开始学习 LaTeX 的时候，那时的中文解决 办法是 CJK 宏包。到了 12 年或 13 年的时候，再接触 LaTeX 的时候，LaTeX 中文支持的最优 解决办法变成了 <code>xeLaTeX+xeCJK</code> ，这大概是目前为止最优的中文解决方案。</p>
<p>后来，CTEX 学会将 xeCJK 的功能进行打包，发布了 ctex 宏包，进一步简化了用 LaTeX 写中文文档的问题。</p>
<a id="more"></a>
<p>下面是利用 <code>xeLaTeX</code> 和 <code>xeCJK</code> 实现中文支持的最小模板:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">\documentclass&#123;article&#125;</div><div class="line">\usepackage&#123;xeCJK&#125;</div><div class="line">\begin&#123;document&#125;</div><div class="line">中文 English 混合示例。</div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure>
<p>相对于英文的最小 LaTeX 模板来说多了两句:</p>
<pre><code>\usepackage{xeCJK}</code></pre>
<p>xeCJK 会自动使用 TeXLive 自带的 Fandole 字体。想要该模板能够编译通过，需要将 TeXLive 自带的中文字体安装到系统中，最简单的办法是在 <code>~/.fonts</code> 目录下建一个软链接:</p>
<pre><code>ln -s /opt/texlive/2014/texmf-dist/fonts/opentype/public/fandol ~/.fonts/</code></pre>
<p>用如下命令编译:</p>
<pre><code>xelatex test.tex</code></pre>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 中文 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[计算某点离海岸线的距离]]></title>
      <url>http://seisman.info/calculate-distance-to-coast.html</url>
      <content type="html"><![CDATA[<p>要计算某个点到海岸线的距离，思路很简单，先获取离散的海岸线数据，然后计算该点到所有海岸线数据点的距离，取其中的最小值即可认为是海岸线的距离。</p>
<a id="more"></a>
<h2 id="获取海岸线数据">获取海岸线数据</h2>
<p>海岸线数据可以从 GMT 的 GSHHG 数据中提取，命令如下:</p>
<pre><code>gmt pscoast -Di -Rd -W -M &gt; coast.txt</code></pre>
<p>简单解释一下:</p>
<ul>
<li>GSHHG 包含了 5 种不同精度的数据，分别为 <code>f</code> 、 <code>h</code> 、 <code>i</code> 、 <code>l</code> 、 <code>c</code>，过高精度的数据包含了太多的细节、过低精度的数据丢失了太多细节。选择哪一种精度的数据需要仔细权衡。</li>
<li><code>-R</code> 限定了感兴趣的海岸线数据的范围</li>
<li><code>-W</code> 表示提取海岸线数据，还可以使用 <code>-I</code> 提取河流数据，使用 <code>-N</code> 提取国界数据</li>
<li><code>-M</code> 表示将数据以 ASCII 格式输出（GMT4 里是 <code>-m</code> ）</li>
</ul>
<p>该命令提取出的海岸线数据包含了全部 4 个 level 的数据，即海岸线数据、湖岸线数据、湖内岛数据以及湖内岛的内湖数据，如只需要 Level 1 即海岸线的数据，则需要使用 <code>gmtconvert</code> 对数据进行进一步处理:</p>
<pre><code>gmt convert coast.txt -S&quot;Level 1&quot; &gt; coast_1.txt</code></pre>
<p>该命令的 <code>-S&quot;Level 1&quot;</code> 表示仅提头段记录中包含字符 “Level 1” 的线段。</p>
<p>在 GMT4 中，该命令应该这样写:</p>
<pre><code>pscoast -Di -Rd -W -m &gt; coast.txt
gmtconvert coast.txt -m -S&quot;Level 1&quot; &gt; coast_1.txt</code></pre>
<h2 id="计算一点到海岸线的距离">计算一点到海岸线的距离</h2>
<p>计算一点到海岸线的距离，可以使用 <code>mapproject</code> 实现。例如要计算 <code>(240, 30)</code> 这个点到海岸线的距离，可以使用如下命令:</p>
<pre><code>$ echo 240 30 | gmt mapproject -Lcoast_1.txt
240      30    183529.043998     -118.367666133   29.159609369</code></pre>
<p>输出的 5 列数据为：要计算的点的经纬度、离海岸线的最小距离以及最小距离所对应的海岸线上的点。其中，最小距离的默认单位是 <code>m</code> 。也可以在 <code>-Lcoast_1.txt</code> 后加上不同的单位以指定最小距离的单位。比如:</p>
<pre><code>$ echo 240 30 | gmt mapproject -Lcoast_1.txt/k
240      30    183.529043998     -118.367666133   29.159609369</code></pre>
<p>的输出结果中第三列的单位就是 <code>km</code>。</p>
<p>完成了一个点的计算，多个点也没有什么难度。</p>
<h2 id="计算网格点到海岸线的距离">计算网格点到海岸线的距离</h2>
<p>要计算一个网格内所有点到海岸线的距离，也可以用上面的方法计算，当然有更简单的方式。</p>
<h3 id="grdmath">grdmath</h3>
<p>GMT 的 <code>grdmath</code> 命令可以对网格数据进行多种数学操作，其中之一就是计算点到海岸线的距离。</p>
<p>对于网格的每个点，计算该点到海岸线数据的所有点的距离，找出离海岸线最小距离，将该最小距离作为该网格点的 Z 值。</p>
<h3 id="grdmath-示例">grdmath 示例</h3>
<pre><code>$ gmt grdmath -R240/242/30/32 -I1 coast_1.txt LDIST -fg = dist.grd
$ gmt grd2xyz dist.grd
240 32  143.028015137
241 32  103.875091553
242 32  82.0870361328
240 31  249.026535034
241 31  206.842697144
242 31  138.674285889
240 30  183.548187256
241 30  111.494659424
242 30  92.4527893066</code></pre>
<p>说明：</p>
<ul>
<li>此处通过 <code>-R</code> 和 <code>-I</code> 选项临时生成了一个网格文件，也可以直接指定一个网格文件</li>
<li>参数格式为 <code>操作数 操作符 = 输出网格文件名</code> ，操作符 <code>LDIST</code> 需要一个操作数 <code>coast_1.txt</code> 。注意这里 <code>coast_1.txt</code> 的位置必须在 <code>LDIST</code> 之前。</li>
<li>默认情况下会计算网格点与线段之间的笛卡尔距离， <code>-fg</code> 选项表明输入数据为地理坐标，此时的输出为千米。</li>
<li>通过 <code>grd2xyz</code> 可以看到计算的结果，这里计算出了 9 个点与海岸线的距离，单位千米。</li>
</ul>
<h2 id="附录">附录</h2>
<p>关于计算一点到海岸线的距离，前面使用了 <code>mapproject</code> 命令来实现。当初写博文的时候没有找到此方法，因而介绍了一个更复杂的方法。虽然本方法很复杂，没有必要再介绍，但考虑到其他有一些有意思的细节，故而保留，仅供参考。</p>
<p>上面的例子中， <code>-R240/242/30/32 -I1</code> 指定的网格中包含了 9 个点，然后计算出了 9 个点到海岸线的距离。当只需要计算某个点到海岸线的距离时，理论上只要网格中只包含一个点就可以了。</p>
<p>想要构建一个只含一个点的网格，网格必须使用像素网格配准方式。</p>
<p>使用默认的网格线配准方式，网格中至少会有四个网格点:</p>
<pre><code>$ grdmath -R240/241/30/31 -I1 coast.txt LDIST -fg = dist.grd
$ grd2xyz dist.grd
240 31  249.291519165
241 31  207.351837158
240 30  183.434417725
241 30  111.675422668</code></pre>
<p>通过 <code>-F</code> 使用像素配准方式，则生成的网格中只有一个点:</p>
<pre><code>$ grdmath -R240/241/30/31 -I1 -F -fg coast_1.txt LDIST = dist.grd
$ grd2xyz dist.grd
240.5   30.5    184.780654907</code></pre>
<p>想要计算点 <code>(240.111, 30.222)</code> 到海岸线的距离:</p>
<pre><code>$ grdmath -R240.011/240.211/30.122/30.322 -I0.2 -F -fg coast_1.txt LDIST = dist.grd
$ grd2xyz dist.grd
240.111 30.222  188.54675293</code></pre>
<p>注意理解 <code>-R</code> 和 <code>-I</code> 是如何选取的！</p>
<p>在 GMT5 下命令如下:</p>
<pre><code>$ gmt grdmath -R240.011/240.211/30.122/30.322 -I0.2 -r -fg coast_1.txt LDIST = dist.grd
$ gmt grd2xyz dist.grd
240.111 30.222  188.537643433</code></pre>
<h2 id="参考">参考</h2>
<ul>
<li><a href="http://oceancolor.gsfc.nasa.gov/DOCS/DistFromCoast/" class="uri" target="_blank" rel="external">http://oceancolor.gsfc.nasa.gov/DOCS/DistFromCoast/</a></li>
</ul>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-02-01：初稿；</li>
<li>2015-02-27：使用 <code>gmtconvert</code> 提取指定 Level 的数据； <code>grdmath</code> 中应使用 <code>-fg</code> 选项才会计算得到笛卡尔距离；Thanks to Jiangbo；</li>
<li>2015-10-29：使用 <code>mapproject</code> 计算任意点到海岸线的距离；Thanks to Chuanxu Chen；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> 距离 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地球物理相关软件]]></title>
      <url>http://seisman.info/geo-software.html</url>
      <content type="html"><![CDATA[<h2 id="通用数据处理">通用数据处理</h2>
<ul>
<li><a href="http://www.iris.edu/ds/nodes/dmc/forms/sac/" target="_blank" rel="external">SAC</a>: 地震学数据处理的常用软件</li>
<li><a href="https://github.com/obspy/obspy/wiki" target="_blank" rel="external">ObsPy</a>: 基于 Python 的地震学数据获取、处理、绘图工具</li>
<li><a href="http://geoscience-community-codes.github.io/GISMO/" target="_blank" rel="external">GISMO</a>: 基于 Matlab 的地震学数据获取、处理、绘图工具</li>
<li><a href="https://github.com/jpjones76/SeisIO.jl" target="_blank" rel="external">SeisIO.jl</a>: 基于 Julia 的地震学数据获取、处理、绘图工具</li>
<li><a href="http://www.eas.slu.edu/eqc/eqccps.html" target="_blank" rel="external">CPS330</a>: GSAC, 理论地震图，接收函数，面波频散</li>
</ul>
<h2 id="数据格式转换">数据格式转换</h2>
<ul>
<li><a href="http://www.iris.edu/ds/nodes/dmc/forms/rdseed/" target="_blank" rel="external">rdseed</a>: SEED 格式转换为 SAC 等地震数据格式</li>
<li><a href="https://seiscode.iris.washington.edu/projects/mseed2sac" target="_blank" rel="external">mseed2sac</a>: 将 miniSEED 格式转换为 SAC 格式</li>
<li><a href="http://www.hinet.bosai.go.jp/REGS/manual/dlDialogue.php?r=win32tools" target="_blank" rel="external">win32tools</a>: Hi-net 提供的工具，用于将 WIN32 格式的数据转换为 SAC 格式</li>
<li><a href="https://seiscode.iris.washington.edu/projects/dataselect" target="_blank" rel="external">dataselect</a>: miniSEED 数据处理</li>
<li><a href="https://github.com/obspy/obspy/wiki" target="_blank" rel="external">ObsPy</a>: 基于 Python 的地震学数据获取、处理、绘图工具</li>
</ul>
<h2 id="数据获取工具">数据获取工具</h2>
<ul>
<li><a href="http://ds.iris.edu/ds/nodes/dmc/manuals/breq_fast/" target="_blank" rel="external">BREQ_FAST</a>: 通过发送邮件申请数据</li>
<li><a href="http://www.iris.edu/wilber3/find_event" target="_blank" rel="external">IRIS Wilber 3</a>: 通过网页界面下载单个地震事件的波形数据</li>
<li><a href="http://www.seis.sc.edu/sod" target="_blank" rel="external">SOD</a>: 用 Java 实现的地震数据下载工具</li>
<li><a href="https://github.com/obspy/obspy/wiki" target="_blank" rel="external">ObsPy</a>: 基于 Python 的地震学数据获取、处理、绘图工具</li>
<li><a href="http://service.iris.edu/" target="_blank" rel="external">IRIS DMC Web Services</a>: 通过网页服务申请数据</li>
<li><a href="https://seiscode.iris.washington.edu/projects/ws-fetch-scripts" target="_blank" rel="external">Web Service Fetch scripts</a>: 获取数据的Perl脚本</li>
<li><a href="http://ds.iris.edu/ds/nodes/dmc/software/downloads/jweed/" target="_blank" rel="external">jweed</a>: 用 Java 实现的 IRIS 数据申请客户端</li>
</ul>
<h2 id="绘图类">绘图类</h2>
<ul>
<li><a href="http://gmt.soest.hawaii.edu/" target="_blank" rel="external">GMT</a>: 地球物理方向绘制地图必备神器</li>
<li><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="external">pssac</a>: 利用 GMT 强大的绘图库直接绘制地震图</li>
<li><a href="https://github.com/obspy/obspy/wiki" target="_blank" rel="external">ObsPy</a>: 基于 Python 的地震学数据获取、处理、绘图工具</li>
<li><a href="http://www.isti2.com/JPlotResp/" target="_blank" rel="external">JPlotResp</a>: 绘制 RESP 仪器响应文件的振幅相位响应谱。可以直接联网查询某台网某台站某个时间的仪器响应，也可以直接处理本地的 RESP 文件。</li>
<li><a href="http://www.larskrieger.de/mopad/" target="_blank" rel="external">MoPad</a>: 地震矩分析和绘图软件，可以做地震矩的各种分解以及分析，绘制各种类型的震源球，可控性非常强，比 GMT 的 psmeca 命令要灵活，且可以与 GMT 联合使用</li>
<li><a href="https://docs.obspy.org/packages/autogen/obspy.imaging.scripts.mopad.html" target="_blank" rel="external">obspy-mopad</a>: ObsPy 中提供的另一个版本的 mopad 工具</li>
</ul>
<h2 id="走时计算射线追踪">走时计算/射线追踪</h2>
<ul>
<li><a href="http://www.seis.sc.edu/taup/" target="_blank" rel="external">TauP</a>: 强大的走时计算器，不过其功能可不仅仅只是计算走时这么简单。射线参数、射线路径、反射点、投射点都可以计算，支持自定义速度模型、支持不常见的震相。</li>
<li><a href="http://docs.obspy.org/packages/obspy.taup.html" target="_blank" rel="external">obspy.taup</a>: TauP 的 Python 版本</li>
<li><a href="http://pyrocko.org/" target="_blank" rel="external">Cake</a>: Python 写的走时计算工具，支持自定义速度模型，支持更复杂的震相路径。</li>
<li><a href="http://www-solid.eps.s.u-tokyo.ac.jp/~dsm/anisotime.html" target="_blank" rel="external">ANISOtime</a>: 横向各向同性球状对称模型下的射线走时工具。</li>
<li><a href="https://github.com/gozwei/pySeismicFMM" target="_blank" rel="external">pySeismicFMM</a>: Fast Marching Method 计算 3D 走时</li>
<li><a href="http://rses.anu.edu.au/seismology/soft/fmmcode/" target="_blank" rel="external">FM3D</a>: 3D Fast Marching Code</li>
</ul>
<h2 id="理论地震图">理论地震图</h2>
<h3 id="解析解">解析解</h3>
<ul>
<li><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="external">fk</a>: 频率 - 波数法，计算水平分层各向同性介质下理论地震图位移静态解和动态解</li>
<li><a href="http://www.gfz-potsdam.de/en/section/physics-of-earthquakes-and-volcanoes/data-products-services/downloads-software/" target="_blank" rel="external">QSEIS</a>: 层状粘弹介质下的理论地震图</li>
<li><a href="http://www.gfz-potsdam.de/en/section/physics-of-earthquakes-and-volcanoes/data-products-services/downloads-software/" target="_blank" rel="external">QSSP</a>: Normal modes 方法计算球形地球下的理论地震图</li>
<li><a href="https://github.com/geodynamics/mineos" target="_blank" rel="external">Mineos</a>: Normal modes 方法计算球对称非旋转地球模型下的合成地震图</li>
<li><a href="https://seiscode.iris.washington.edu/projects/yaseis" target="_blank" rel="external">yaseis</a>: 频率 - 波数法，球状分层介质下的理论地震图</li>
<li><a href="http://www.quest-itn.org/library/software/gemini-greens-function-of-the-earth-by-minor-integration" target="_blank" rel="external">GEMINI</a>:</li>
<li><a href="http://www-solid.eps.s.u-tokyo.ac.jp/~dsm/software/software.htm" target="_blank" rel="external">DSM</a>: Direct Solution Method (<a href="http://www-solid.eps.s.u-tokyo.ac.jp/~dsm/software/software/tish-1.9.0.tar.gz" target="_blank" rel="external">tish</a>, <a href="http://www-solid.eps.s.u-tokyo.ac.jp/~dsm/software/software/tipsv-1.8.0.tar.gz" target="_blank" rel="external">tipsv</a>, <a href="http://www-solid.eps.s.u-tokyo.ac.jp/~dsm/software/software/spcsac-v1.0.0.tar.gz" target="_blank" rel="external">spcsac</a>)</li>
</ul>
<h3 id="有限差分法">有限差分法</h3>
<ul>
<li><a href="http://svn.geophysik.uni-muenchen.de/trac/shaxi" target="_blank" rel="external">SHaxi</a>: 有限差分方法计算全球尺度高精度 SH 波场</li>
<li><a href="https://git.scc.kit.edu/GPIAG-Software/SOFI2D/" target="_blank" rel="external">SOFI2D</a>: 二维有限差分计算 (粘) 弹性介质下的 PSV 波场</li>
<li><a href="https://git.scc.kit.edu/GPIAG-Software/SOFI2D_sh" target="_blank" rel="external">SOFI2D-sh</a>: 二维有限差分计算 (粘) 弹性介质下的 SH 波场</li>
<li><a href="https://git.scc.kit.edu/GPIAG-Software/SOFI3D" target="_blank" rel="external">SOFI3D</a>: 三维有限差分计算 (粘) 弹性介质下的波场</li>
<li><a href="https://github.com/geodynamics/seismic_cpml" target="_blank" rel="external">SEISMIC_CPML</a>: 2D/3D 有限差分+CPML吸收边界</li>
<li><a href="https://github.com/geodynamics/sw4" target="_blank" rel="external">SW4</a>: 3D 有限差分</li>
<li><a href="https://github.com/takuto-maeda/OpenSWPC" target="_blank" rel="external">OpenSWPC</a>: 2D/3D 有限差分</li>
</ul>
<h3 id="谱元法">谱元法</h3>
<ul>
<li><a href="https://github.com/geodynamics/specfem1d" target="_blank" rel="external">SPECFEM1D</a>: 谱元法 1D</li>
<li><a href="https://github.com/geodynamics/specfem2d" target="_blank" rel="external">SPECFEM2D</a>: 谱元法 2D</li>
<li><a href="https://github.com/geodynamics/specfem3d" target="_blank" rel="external">SPECFEM3D</a>: 谱元法 3D(笛卡尔坐标系)</li>
<li><a href="https://github.com/geodynamics/specfem3d_globe" target="_blank" rel="external">SPECFEM3D Global</a>: 谱元法 3D(球坐标系)</li>
<li><a href="https://github.com/geodynamics/axisem" target="_blank" rel="external">AxiSEM</a>: 球层介质中的 3D 弹性、非弹性、各向异性、声波理论地震图</li>
<li><a href="http://instaseis.net/" target="_blank" rel="external">Instaseis</a>: 用 Python 写的，基于 AxiSEM 的地震图合成工具</li>
<li><a href="https://github.com/kuangdai/AxiSEM3D" target="_blank" rel="external">AxiSEM3D</a>:</li>
</ul>
<h2 id="特定研究类">特定研究类</h2>
<h3 id="层析成像">层析成像</h3>
<ul>
<li><a href="https://ds.iris.edu/ds/products/aswms/" target="_blank" rel="external">ASWMS</a>: Automated Surface-Wave Phase-Velocity Measuring System, Matlab</li>
</ul>
<h3 id="全波形反演">全波形反演</h3>
<ul>
<li><a href="https://seiscope2.osug.fr/TOY2DAC,82" target="_blank" rel="external">TOY2DAC</a>: 2D Acoustic frequency-domain Full Waveform modeling and inversion code.</li>
<li><a href="http://www.gmg.ruhr-uni-bochum.de/geophysik/seismology/aski.html" target="_blank" rel="external">ASKI</a>: modularized program suite for sensitivity analysis and iterative full waveform inversion</li>
<li><a href="https://github.com/JuliaInv/FWI.jl" target="_blank" rel="external">FWI.jl</a>: 2D/3D acoustic FWI in Julia</li>
<li><a href="https://git.scc.kit.edu/GPIAG-Software/IFOS2D" target="_blank" rel="external">IFOS2D</a>: 2D弹性波FWI</li>
<li><a href="https://git.scc.kit.edu/GPIAG-Software/IFOS3D" target="_blank" rel="external">IFOS3D</a>: 3D弹性波FWI</li>
<li><a href="https://github.com/daniel-koehn/DENISE-SH" target="_blank" rel="external">DENISE-SH</a>: 2D SH有限差分模拟及FWI</li>
<li><a href="https://github.com/daniel-koehn/DENISE-Black-Edition" target="_blank" rel="external">DENISE</a>: 2D PSV有限差分模拟及FWI</li>
<li><a href="http://www.cos.ethz.ch/software/ses3d.html" target="_blank" rel="external">SES3D</a>: 3D谱元法FWI</li>
<li><a href="http://www.lasif.net/" target="_blank" rel="external">LASIF</a>: 基于 Python 的大规模全波形反演框架，似乎是层析成像。</li>
<li><a href="https://github.com/yanhuay/seisDD" target="_blank" rel="external">seisDD</a>: Double-difference adjoint seismic tomography</li>
</ul>
<h3 id="震源机制">震源机制</h3>
<ul>
<li><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="external">gcap</a>: 通用 Cut and Paste 方法反演震源机制</li>
<li><a href="https://github.com/fabriziobernardi/pydmt" target="_blank" rel="external">pyTDMT</a>: 时间域震源机制反演的 Python 实现</li>
<li><a href="http://eost.u-strasbg.fr/wphase/" target="_blank" rel="external">WPhase</a>: W Phase 方法反演震源机制</li>
<li><a href="https://seiscode.iris.washington.edu/projects/focmec" target="_blank" rel="external">focmec</a>: 确定并绘制震源机制</li>
</ul>
<h3 id="震相拾取">震相拾取</h3>
<ul>
<li><a href="https://github.com/austinholland/PhasePApy" target="_blank" rel="external">PhasePApy</a>: Python 写的震相拾取软件包</li>
<li><a href="http://rses.anu.edu.au/seismology/soft/astack/index.html" target="_blank" rel="external">astack</a>: 自适应迭代以实现震相对齐</li>
<li><a href="http://web.gps.caltech.edu/~yucq/software.html" target="_blank" rel="external">CrazySeismic_Pick</a>: 多通道相关实现震相对齐</li>
</ul>
<h3 id="s波分裂">S波分裂</h3>
<ul>
<li><a href="http://splitting.gm.univ-montp2.fr/" target="_blank" rel="external">SplitLab</a>: 基于 Matlab 的 S 波分裂处理工具</li>
<li>[mutlisplit][]: S 波分裂处理工具</li>
<li><a href="http://www.geophysik.uni-frankfurt.de/64002762/Software" target="_blank" rel="external">SplitRacer</a>: S 波分裂处理工具</li>
</ul>
<h3 id="接收函数">接收函数</h3>
<ul>
<li><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="external">hk</a>: 用于接收函数研究的代码。</li>
<li><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="external">CCP</a>: 共转换点地震数据叠加，用于接收函数研究。</li>
<li><a href="https://github.com/trichter/rf" target="_blank" rel="external">rf</a>: 接收函数</li>
<li><a href="http://rses.anu.edu.au/~hrvoje/IRFFMv1.1.html" target="_blank" rel="external">IRFFM</a>: 带 GUI 的接收函数软件包</li>
<li><a href="http://web.gps.caltech.edu/~yucq/software.html" target="_blank" rel="external">CrazySeismic_Decon</a>: 基于Matlab的带GUI的接收函数软件包</li>
</ul>
<h3 id="噪声成像">噪声成像</h3>
<ul>
<li><a href="http://www.msnoise.org/" target="_blank" rel="external">MSNoise</a>: 利用地震背景噪声检测地下速度结构变化</li>
<li><a href="https://github.com/bgoutorbe/seismic-noise-tomography" target="_blank" rel="external">seismic-noise-tomography</a>: 噪声面波成像</li>
</ul>
<h2 id="数学处理类">数学处理类</h2>
<ul>
<li><a href="https://github.com/SHTOOLS/SHTOOLS" target="_blank" rel="external">SHTOOLS</a>: 实现球谐相关操作，包括变换、重建、旋转、谱分析等。</li>
</ul>
<h2 id="函数库">函数库</h2>
<ul>
<li><a href="https://seiscode.iris.washington.edu/projects/libmseed" target="_blank" rel="external">libmseed</a>: 用于读写 miniSEED 格式的 C 函数库</li>
</ul>
<h2 id="其他">其他</h2>
<ul>
<li><a href="http://www.seis.sc.edu/software/distaz/" target="_blank" rel="external">distaz</a>: 给定震中和台站经纬度，计算震中距、方位角和反方位角的经典代码。</li>
<li><a href="http://www.seismology.harvard.edu/research/DigitSeis.html" target="_blank" rel="external">DigitSeis</a>: 利用图像处理技术将模拟地震仪记录到的波形图片转换成数字信号（Matlab）</li>
<li><a href="https://github.com/geodynamics/citcoms" target="_blank" rel="external">CitcomS</a>: 求解地幔可压缩热动力学对流问题的有限元代码</li>
<li><a href="http://cpc.cs.qub.ac.uk/summaries/AFAT_v1_0.html" target="_blank" rel="external">AFAT</a>: 根据 Cijkl 计算各向异性介质不同方向的速度</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
            <tag> 理论地震图 </tag>
            
            <tag> SAC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[全球水深数据 GEBCO]]></title>
      <url>http://seisman.info/gebco-global-bathymetry-data.html</url>
      <content type="html"><![CDATA[<p>GEBCO 全称 General Bathymetric Chart of the Oceans，给出了全球海水深度数据。</p>
<ul>
<li>官方网站： <a href="http://www.gebco.net" class="uri" target="_blank" rel="external">http://www.gebco.net</a></li>
<li>数据精度：30 弧秒和 1 弧分。</li>
<li>数据格式：netCDF，可直接用于 GMT 绘图。</li>
<li>下载地址： <a href="http://www.bodc.ac.uk/data/online_delivery/gebco/" class="uri" target="_blank" rel="external">http://www.bodc.ac.uk/data/online_delivery/gebco/</a></li>
</ul>
<p>说明</p>
<ul>
<li>GEBCO 数据中包含了陆地高程和海水深度数据</li>
<li>陆地高程数据来自于 SRTM30 和 GTOPO30 等</li>
<li>海水深度数据来自于 Smith and Sandwell 的全球地形数据和 290 百万个海水深度探测数据</li>
<li>ETOPO1 与之类似，但不确定细节上有何区别。</li>
<li>GEBCO 数据需要注册方可下载</li>
<li>30 弧秒的数据大小为 1.1G</li>
<li>1 弧分的数据大小为 275M</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
            <tag> 数据 </tag>
            
            <tag> 地形 </tag>
            
            <tag> 网格 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[查看 IRIS 台站分布]]></title>
      <url>http://seisman.info/iris-station-distribution.html</url>
      <content type="html"><![CDATA[<p>IRIS 利用 Google Map 服务，提供了直观查看台站分布的方法。</p>
<p>主页： <a href="http://www.iris.edu/gmap/" class="uri" target="_blank" rel="external">http://www.iris.edu/gmap/</a></p>
<p>这个服务比较特别，不包含常见的按钮或选项。用户需要根据网站介绍的格式，创建自己需要的 URL，直接输入到浏览器中即可查看相关台站分布，并可以查看每个台站的具体信息。</p>
<p>基本格式为:</p>
<pre><code>http://www.iris.edu/gmap/[network]/[station]?key1=value1&amp;key2=value2</code></pre>
<p>其中中括号包围的项为可选项，问号后接 (key,value) 对。具体参见原网站。</p>
<a id="more"></a>
<p>下面是一些例子：</p>
<ol style="list-style-type: decimal">
<li><p>列出 II 台网的全部台站:</p>
<pre><code>http://www.iris.edu/gmap/?net=II</code></pre>
<p>其等效于:</p>
<pre><code>http://www.iris.edu/gmap/II</code></pre></li>
<li><p>列出 IU 台网的 COLA 台站:</p>
<pre><code>http://www.iris.edu/gmap/IU/COLA</code></pre></li>
<li><p>列出虚拟台网 _GSN:</p>
<pre><code>http://www.iris.edu/gmap/_GSN</code></pre></li>
<li><p>列出 TA 台网 2004 下半年的所有台站:</p>
<pre><code>http://www.iris.edu/gmap/TA?timewindow=2004/6/1-2004/12/31</code></pre></li>
<li><p>列出 _GSN 台网 1988 年工作的所有台站:</p>
<pre><code>http://www.iris.edu/gmap/_GSN?timewindow=1988-1988</code></pre></li>
<li><p>列出一定范围内的所有台站:</p>
<pre><code>http://www.iris.edu/gmap/?minlat=46&amp;maxlat=49&amp;minlon=-125&amp;maxlon=-117</code></pre></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> IRIS </tag>
            
            <tag> 台站 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IRIS FTP 数据下载脚本]]></title>
      <url>http://seisman.info/perl-script-for-downloading-iris-ftp-data.html</url>
      <content type="html"><![CDATA[<p>前文说到了 IRIS 官方给出的几种 FTP 数据下载方式，除此之外，还有很多方法。比如直接浏览器右键另存为，比如 Windows 下迅雷的下载链接自动识别，再比如 Firefox 浏览器 + 附加组件 “DownThemAll!”。这些工具其实和前文说的下载方法类似，都有各种各样的缺点。</p>
<a id="more"></a>
<p>下面的 Perl 脚本实现了 IRIS FTP 数据的下载，其思路如下：</p>
<ol style="list-style-type: decimal">
<li>登录 IRIS 的 ftp，获取 ftp 内的全部文件列表，保存到本地文件 <code>ftp.filelist</code> 中；</li>
<li>由于 IRIS ftp 里的数据默认会保存 7 天，且用户无删除权限，因而可能有些 ftp 中的数据已经下载了，所以在本地需要有一个已经下载的数据的列表 <code>local.filelist</code> ；</li>
<li>读取 <code>ftp.filelist</code> 和 <code>local.filelist</code> 的内容，检查 <code>ftp.filelist</code> 中的文件是否在 <code>local.filelist</code> 中，若在则不下载，若不在则下载。</li>
<li>所有文件下载完成后，则意味着 <code>ftp.filelist</code> 中的全部文件都已在本地，更新 <code>local.filelist</code> 。</li>
<li>重复步骤 1-3，若 <code>ftp.filelist</code> 与 <code>local.filelist</code> 不同则意味着下载过程中有新数据到达或者某些数据下载失败，继续下载（这一步其实可以手动重复执行该脚本，而不需要在脚本内部进行循环）。</li>
</ol>
<p>脚本的一些特性：</p>
<ul>
<li>已下载的数据可以移动到其他文件夹，这些数据不会重复下载；（需要重复下载时可手动修改 <code>local.filelist</code> ）</li>
<li>FTP 中所有不在 <code>local.filelist</code> 中的文件都会被下载；</li>
<li>若 <code>local.filelist</code> 为空，则 ftp 中所有数据都会被下载；</li>
<li>若 <code>local.filelist</code> 包含了 7 天以前的数据下载信息，这些数据已经在 FTP 中被删除，这种情况脚本可以处理，不需要删除 <code>local.filelist</code> ；</li>
<li>检测本地数据的大小与 ftp 中数据的大小是否相等，保证了数据的完整性；若不相等，则不将文件名写入 <code>local.filelist</code> 。</li>
<li>当脚本或网络由于外部因素出现中断导致数据不完整时，借助于 wget 断点续传功能，可以直接重新运行该脚本，而不做任何特殊处理。</li>
</ul>
<p><a href="https://gist.github.com/seisman/2ccefac15c4cd3239382" target="_blank" rel="external">irisFetch.pl</a></p>
<p>代码预览：</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env perl</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#  Perl script to fetch seed data form IRIS FTP</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#  Author:  SeisMan @ seisman.info</span></div><div class="line"><span class="comment">#  Date:    05/16/2013</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#  Modules:</span></div><div class="line"><span class="comment">#   1. Net::FTP     #  It is already installed for most Linux OS</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#  Description:</span></div><div class="line"><span class="comment">#   1. $passwd is your email address</span></div><div class="line"><span class="comment">#   2. $cmd and $option is tool for downloading</span></div><div class="line"><span class="comment">#       $cmd = "wget";  $option = "-c";</span></div><div class="line"><span class="comment">#   3. ftp.filelist contains all the data in the ftp (less than 7 days).</span></div><div class="line"><span class="comment">#   4. local.filelist contains all the file you have already download,</span></div><div class="line"><span class="comment">#      file in ftp.filelist but not in local.filelist will be downloaded,</span></div><div class="line"><span class="comment">#      so do not delete local.filelist.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#  Revision History:</span></div><div class="line"><span class="comment">#   05/16/2013  SeisMan    Initial Coding</span></div><div class="line"><span class="comment">#   01/16/2014  SeisMan    Modify to a serial script</span></div><div class="line"><span class="comment">#</span></div><div class="line"></div><div class="line"><span class="keyword">use</span> strict;</div><div class="line"><span class="keyword">use</span> warnings;</div><div class="line"><span class="keyword">use</span> Net::FTP;</div><div class="line"></div><div class="line"><span class="comment">############# Personal Infomation #############</span></div><div class="line"><span class="keyword">my</span> $user = <span class="string">"XXXXXXXX"</span>;</div><div class="line"><span class="keyword">my</span> $passwd = <span class="string">'xxxx@xxxxxxxxxx'</span>;</div><div class="line"></div><div class="line"><span class="comment">#############################################################</span></div><div class="line"><span class="comment">## DO NOT MODIFY BELOW UNLESS YOU KNOW WHAT YOU ARE DOING! ##</span></div><div class="line"><span class="comment">#############################################################</span></div><div class="line"><span class="keyword">my</span> $server = <span class="string">"ftp.iris.washington.edu"</span>;</div><div class="line"><span class="keyword">my</span> $login = <span class="string">"anonymous"</span>;</div><div class="line"><span class="keyword">my</span> $dir = <span class="string">"pub/userdata"</span>;</div><div class="line"></div><div class="line"><span class="comment"># download tools</span></div><div class="line"><span class="keyword">my</span> $cmd = <span class="string">"wget"</span>;</div><div class="line"><span class="keyword">my</span> $option = <span class="string">"-c"</span>;</div><div class="line"></div><div class="line"><span class="comment"># get filelist of ftp</span></div><div class="line"><span class="keyword">print</span> STDERR <span class="string">"Fetching filelist from $server...\n"</span>;</div><div class="line">&amp;ftp_list($server, $login, $passwd, $dir, $user);</div><div class="line"></div><div class="line"><span class="comment"># lists</span></div><div class="line"><span class="keyword">my</span> @ftp_list    = ();   <span class="comment"># all the files in ftp</span></div><div class="line"><span class="keyword">my</span> @local_list  = ();   <span class="comment"># files already downloaded</span></div><div class="line"><span class="keyword">my</span> @finish_list = ();   <span class="comment"># files already downloaded</span></div><div class="line">                        <span class="comment">#  + files downloaded successfully in this run.</span></div><div class="line"></div><div class="line"><span class="comment"># read ftp filelist</span></div><div class="line"><span class="keyword">open</span> FTP, <span class="string">"&lt;ftp.filelist"</span> <span class="keyword">or</span> <span class="keyword">die</span> <span class="string">"Can't open ftp.filelist! \n"</span>;</div><div class="line">@ftp_list = &lt;FTP&gt;;</div><div class="line"><span class="keyword">close</span> FTP;</div><div class="line"></div><div class="line"><span class="comment"># read local filefilst</span></div><div class="line"><span class="keyword">if</span> (-e<span class="string">"local.filelist"</span>) &#123;</div><div class="line">    <span class="keyword">open</span> LOCAL, <span class="string">"&lt;local.filelist"</span> <span class="keyword">or</span> <span class="keyword">die</span> <span class="string">"Can't open local.filelist\n"</span>;</div><div class="line">        @local_list = &lt;LOCAL&gt;;</div><div class="line">        <span class="keyword">chomp</span> @local_list;</div><div class="line">    <span class="keyword">close</span> LOCAL;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">############################ start downloading ##############################</span></div><div class="line"><span class="keyword">foreach</span> (@ftp_list) &#123;</div><div class="line">    <span class="keyword">my</span> ($ftp_file, $ftp_size) = <span class="keyword">split</span> <span class="regexp">/\s+/</span>, $_;</div><div class="line"></div><div class="line">    <span class="comment"># determine $ftp_file downloaded or not</span></div><div class="line">    <span class="keyword">my</span> $in = <span class="number">0</span>;</div><div class="line">    <span class="keyword">foreach</span> (@local_list) &#123;</div><div class="line">        <span class="keyword">chomp</span>;</div><div class="line">        <span class="keyword">if</span> ($_ =~ $ftp_file) &#123;</div><div class="line">            $in = <span class="number">1</span>;</div><div class="line">            <span class="keyword">last</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> ($in==<span class="number">1</span>) &#123;  <span class="comment"># already downloaded</span></div><div class="line">        <span class="keyword">push</span> @finish_list, $ftp_file;</div><div class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment"># need to be downloaded</span></div><div class="line">        <span class="keyword">my</span> $err = <span class="keyword">system</span> <span class="string">"$cmd $option $server/$dir/$user/$ftp_file"</span>;</div><div class="line">        <span class="comment"># err = 0 means succeed in downloading</span></div><div class="line">        <span class="comment"># err = 1 means downloading error</span></div><div class="line">        <span class="comment"># err = 2 means interrupt by user</span></div><div class="line">        <span class="keyword">push</span> @finish_list, $ftp_file <span class="keyword">if</span> $err==<span class="number">0</span> &amp;&amp; -<span class="keyword">s</span> $ftp_file == $ftp_size;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">########################## end downloading ##################################</span></div><div class="line"></div><div class="line"><span class="comment"># update local.filelist</span></div><div class="line"><span class="keyword">open</span> OUT, <span class="string">"&gt; local.filelist"</span> <span class="keyword">or</span> <span class="keyword">die</span> <span class="string">"Can't open local.filelist\n"</span>;</div><div class="line"><span class="keyword">foreach</span> (@finish_list) &#123;</div><div class="line">    <span class="keyword">print</span> OUT <span class="string">"$_\n"</span> <span class="keyword">if</span> /seed/;</div><div class="line">&#125;</div><div class="line"><span class="keyword">close</span> OUT;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">sub</span> <span class="title">ftp_list</span>() </span>&#123;</div><div class="line">    <span class="keyword">my</span> ($server, $login, $passwd, $dir, $user) = @_;</div><div class="line"></div><div class="line">    <span class="keyword">my</span> $ftp = Net::FTP-&gt;new(</div><div class="line">        <span class="string">Host    =&gt;</span>   $server,</div><div class="line">        <span class="string">Debug   =&gt;</span>   <span class="number">0</span>,</div><div class="line">    ) <span class="keyword">or</span> <span class="keyword">die</span> <span class="string">"Can't connect to $server\n"</span>;</div><div class="line"></div><div class="line">    $ftp-&gt;login($login,$passwd);</div><div class="line">    $ftp-&gt;cwd(<span class="string">"$dir/$user"</span>);</div><div class="line">    <span class="keyword">my</span> @files = $ftp-&gt;dir();</div><div class="line">    $ftp-&gt;quit();</div><div class="line"></div><div class="line">    <span class="keyword">open</span> OUT, <span class="string">"&gt; ftp.filelist"</span>;</div><div class="line">    <span class="keyword">foreach</span> (@files) &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="regexp">/seed$/</span>)&#123;</div><div class="line">            <span class="keyword">my</span> @line = <span class="keyword">split</span>;</div><div class="line">            <span class="keyword">print</span> OUT <span class="string">"$line[8] $line[4]\n"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">close</span> OUT;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>一些说明：</p>
<ul>
<li>用户只需要修改 <code>$user</code> 和 <code>$passwd</code> 即可使用，其中 <code>$passwd</code> 为邮箱；</li>
<li>该脚本为串行版本，并行和多线程版本暂不公开；</li>
<li>该脚本经过测试，但不对其任何特性做任何保证；由于使用该脚本造成的任何损失或损害，由用户自己负责；</li>
<li>任何疑问、评论、Bug 报告，可以在当前页面留言，或邮件联系 <a href="mailto:seisman.info@gmail.com" target="_blank" rel="external">seisman.info@gmail.com</a>；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> breq_fast </tag>
            
            <tag> IRIS </tag>
            
            <tag> Perl </tag>
            
            <tag> 数据 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IRIS FTP 数据下载的几个方法]]></title>
      <url>http://seisman.info/download-data-from-iris-ftp.html</url>
      <content type="html"><![CDATA[<p>从 IRIS 申请地震数据，有些工具会将准备好的数据放在 ftp 中，供用户下载。</p>
<p>FTP 地址格式如下： <code>ftp://ftp.iris.washington.edu/pub/userdata/USERNAME</code>，其中 <code>USERNAME</code> 因人而异。</p>
<a id="more"></a>
<h2 id="下载方式">下载方式</h2>
<p>官方提供了三种数据下载方式：</p>
<h3 id="登录-ftp-下载">登录 FTP 下载</h3>
<pre><code>$ ftp ftp.iris.washington.edu
Name (iris:joe): anonymous # 匿名登录
Password: JoeSeismologist@email.net # 密码随意，建议填写邮件地址
ftp&gt; cd pub/userdata
ftp&gt; ls -f
ftp&gt; cd Joe_Seismologist # 进入自己的目录
ftp&gt; ls -l
ftp&gt; binary # 二进制传输
ftp&gt; mget * # 下载所有文件
ftp&gt; quit</code></pre>
<h3 id="wget-下载全部文件">wget 下载全部文件</h3>
<pre><code>wget -P Directory -m -nd -np -r -c ftp://ftp.iris.washington.edu/pub/userdata/USERNAME/</code></pre>
<p>其中</p>
<ul>
<li><code>Directory</code> 为要保存的文件路径，默认为当前目录；</li>
<li><code>-m</code> 等效于 <code>-r -N -l inf --no-remove-listing</code> ，其中 <code>-r</code> 表示对文件夹进行递归， <code>-N</code> 表示只下载比本地文件新的文件； <code>-l</code> 指定递归深度， <code>inf</code> 表示无穷递归；</li>
<li><code>-nd</code> 表示不在本地重建目录结构，这意味着无论 FTP 中的目录结构有多复杂，所有文件都保存到本地的一个目录中；</li>
<li><code>-np</code> 表示不遍历父目录；</li>
<li><code>-r</code> 表示递归下载；</li>
<li><code>-c</code> 表示支持断点续传；</li>
</ul>
<h3 id="wget-下载单个或多个文件">wget 下载单个或多个文件</h3>
<pre><code>wget -P Directory -m -nd -np -r -c -A &quot;FileName&quot; ftp://ftp.iris.washington.edu/pub/userdata/USERNAME/</code></pre>
<p>其中 <code>-A</code> 表示只下载 “FileName” 指定的文件。FileName 可以表示后缀也可以表示模式，当 FileName 中只包含英文字母时，则表示后缀，比如 FileName 为 seed，则表示下载所有以 seed 为后缀的文件。</p>
<p>当 FileName 中包含通配符 <code>* ? []</code> 时，FileName 表示模式，只下载文件名符合该模式的文件，比如 FileName 为 <code>2010*.seed</code>，则表示只下载所有文件名匹配 <code>2010*.seed</code> 的文件。</p>
<h2 id="缺点">缺点</h2>
<p>在大批量数据的情况下，上面三种方法都有一些缺点。</p>
<ol style="list-style-type: decimal">
<li>FTP 方法，使用 ftp 自带的 mget 命令进行下载，不支持断点续传，难以指定要下载哪些文件。</li>
<li>wget 下载全部数据，若 FTP 中的数据已存在于当前目录，则不会再次下载。这要求下载好的数据不能从当前目录中移除。一般来说数据下载和数据处理是同步进行的，这样就要求在下载目录中和数据处理目录中存有两份相同的数据。更严重的是，IRIS 的 FTP 数据可以保留 7 天，今天申请的数据与 3 天前申请将会下载到同一目录中，不利用用户对 SEED 文件进行整理。</li>
<li>wget 下载指定数据，如果每次申请的数据是有规律的，比如先申请 2004 年数据，申请 -&gt; 等待 -&gt; 下载，再申请 2005 年数据，这样可以使用通配符来指定下载数据。若数据申请没有类似规律，则会非常麻烦。理论上，使用 BREQ_FAST 申请数据时，可以为数据指定 LABEL，则 SEED 文件名为 LABEL.xxxx.seed，其中 xxxx 为 “随机数”，因而用户在申请时是无法完全知道 seed 文件的全名的，又因为 wget 不支持 <code>wget http://example.com/20100101.*.seed</code> 这样的语法，因而对于数据申请不规律的情况，第三种方法也是很有问题的。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> breq_fast </tag>
            
            <tag> IRIS </tag>
            
            <tag> 数据 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[计算某日是一年中的第几天]]></title>
      <url>http://seisman.info/calculate-jday.html</url>
      <content type="html"><![CDATA[<p>两个子程序， <code>ymd2doy</code> 用于从年月日计算该日为当年的第几天， <code>doy2ymd</code> 用于根据年份以及 该年的第几天来确定月和日。</p>
<a id="more"></a>
<p><code>ymd2doy</code> 的代码很粗暴，直接定义了 leap 和 noleap 数组，简单粗暴，忘了该代码片段的来源了。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> noleap[<span class="number">12</span>] = &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">59</span>, <span class="number">90</span>, <span class="number">120</span>, <span class="number">151</span>, <span class="number">181</span>, <span class="number">212</span>, <span class="number">243</span>, <span class="number">273</span>, <span class="number">304</span>, <span class="number">334</span>&#125;;</div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span>   leap[<span class="number">12</span>] = &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">60</span>, <span class="number">91</span>, <span class="number">121</span>, <span class="number">152</span>, <span class="number">182</span>, <span class="number">213</span>, <span class="number">244</span>, <span class="number">274</span>, <span class="number">305</span>, <span class="number">335</span>&#125;;</div><div class="line"></div><div class="line"><span class="comment">/* convert month and day to day of year */</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">ymd2doy</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> ((year%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; year%<span class="number">100</span>!=<span class="number">0</span>) || (year%<span class="number">400</span>==<span class="number">0</span>))</div><div class="line">        <span class="keyword">return</span> leap[month<span class="number">-1</span>] + day;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="keyword">return</span> noleap[month<span class="number">-1</span>] + day;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* convert day of year to month and day */</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">doy2ymd</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> doy, <span class="keyword">int</span> *month, <span class="keyword">int</span> *day)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> *days_since_start;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> ((year%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; year%<span class="number">100</span>!=<span class="number">0</span>) || (year%<span class="number">400</span>==<span class="number">0</span>))</div><div class="line">        days_since_start = leap;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        days_since_start = noleap;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">11</span>; i++)</div><div class="line">        <span class="keyword">if</span> (doy &lt; days_since_start[i+<span class="number">1</span>]) <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">if</span> (i==<span class="number">10</span> &amp;&amp; doy&gt; days_since_start[<span class="number">11</span>]) i++;</div><div class="line"></div><div class="line">    *month = i+<span class="number">1</span>;</div><div class="line">    *day = doy - days_since_start[i];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>下面是另一个版本：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> days_in_month[] = &#123;<span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">ymd2doy</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">int</span> doy = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;month<span class="number">-1</span>; i++) &#123;</div><div class="line">        doy += days_in_month[i];</div><div class="line">        <span class="keyword">if</span>(i==<span class="number">1</span> &amp;&amp; ISLEAP(year)) doy++;</div><div class="line">    &#125;</div><div class="line">    doy += day;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> doy;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">doy2ymd</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> doy, <span class="keyword">int</span> *month, <span class="keyword">int</span> *day)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i, dim, leap;</div><div class="line"></div><div class="line">    leap = ISLEAP(year);</div><div class="line">    *day = doy;</div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">12</span>; i++) &#123;</div><div class="line">        dim = days_in_month[i];</div><div class="line">        <span class="keyword">if</span>(leap &amp;&amp; i==<span class="number">1</span>) dim++;</div><div class="line">        <span class="keyword">if</span>(*day &lt;= dim) <span class="keyword">break</span>;</div><div class="line">        *day -= dim;</div><div class="line">    &#125;</div><div class="line">    *month = i + <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-01-18：初稿；</li>
<li>2014-08-23：将 Perl 版修改为 C 版，并加入了 <code>doy2ymd</code>；</li>
<li>2014-08-25：新增了另一个版本的代码；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C </tag>
            
            <tag> 时间 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[freqlimits 的选取]]></title>
      <url>http://seisman.info/how-to-choose-freqlimits.html</url>
      <content type="html"><![CDATA[<p>真实的地面运动，其频谱范围是非常广泛的，从 0 Hz 到几千 Hz 甚至更高。</p>
<p>下文全部假定采样间隔为 T=0.01s。</p>
<p>根据奈奎斯特采样定理，采样频率为 f=1/T=100 Hz，相应的 Nyquist 采样频率为 f’=f/2=50 Hz。即当采样间隔为 T=0.01 s 时，频率低于 50 Hz 的信号会被正确采样 并可以重建原信号，而频率高于 50 Hz 的信号则会与频率对于 50 Hz 的信号发生混叠。 因而，在模拟信号转换为数字信号之前，必须要使用一个低通模拟滤波器或其他数字滤波手段。</p>
<p>无论怎样，信号在经过采样之后，信号中高于 50Hz 的部分必须被削弱，因而仪器响应的 振幅谱在接近 50 Hz 时迅速下降为 0 或者非常小的值。</p>
<p>去除仪器响应，实际上就是频率域的除法，直接做除法会在大于 50 Hz 时出现除以 0 或小值的情况。因而就需要使用 freqlimits。</p>
<p>freqlimits 有四个参数，f1、f2、f3、f4，满足 <code>f1&lt;f2&lt;f3&lt;f4</code> ，其中 f4 必须 小于或等于 50Hz，对于其他参数没有过多要求。</p>
<p>一般而言，f2 到 f3 之间的范围应尽量宽。</p>
<p>参考：</p>
<ul>
<li><a href="http://www.eas.slu.edu/eqc/eqc_cps/Questions/qa0001.html" class="uri" target="_blank" rel="external">http://www.eas.slu.edu/eqc/eqc_cps/Questions/qa0001.html</a></li>
<li><a href="http://www.eas.slu.edu/eqc/eqc_cps/Questions/qa0002.html" class="uri" target="_blank" rel="external">http://www.eas.slu.edu/eqc/eqc_cps/Questions/qa0002.html</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 仪器响应 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[全球地震目录 PDE]]></title>
      <url>http://seisman.info/global-earthquake-catalog-pde.html</url>
      <content type="html"><![CDATA[<h2 id="简介">简介</h2>
<p>PDE，是 USGS 的 NEIC 组织发布的全球地震目录，全称 Preliminary Determination of Epicenters。之所以称为 Preliminary，是因为一般认为 International Seismological Centre 发布的地震目录是终极版。</p>
<p>主页： <a href="http://earthquake.usgs.gov/research/data/pde.php" class="uri" target="_blank" rel="external">http://earthquake.usgs.gov/research/data/pde.php</a></p>
<a id="more"></a>
<h2 id="目录">目录</h2>
<p>一个完整的 PDE 目录包含了三个部分：daily PDE、weekly PDE 以及 monthly PDE。</p>
<h3 id="daily-pde">Daily PDE</h3>
<p>又称为 QED(Quick Epicenters Determinations) 或 PDE-Q，包含了最近六周的地震事件，每日更新。一段时间以后，Daily PDE 中的地震事件会被删除，然后该事件会被添加到 Weekly PDE 中。</p>
<h3 id="weekly-pde">Weekly PDE</h3>
<p>又称为 PDE-W，一般含有 6 周以前到几个月以前的地震事件，每年 52 个文件，每个文件包含 7 天的数据（最后一个文件包含 8 或 9 天数据）。Daily PDE 中的事件经过修正之后会加入到 Weekly PDE 中，Weekly PDE 中的事件在添加了一些注释信息后会从 PDE-W 中删除，并添加到 Monthly PDE 中。</p>
<h3 id="monthly-pde">Monthly PDE</h3>
<p>PDE 地震目录的终极版。</p>
<h2 id="文件格式">文件格式</h2>
<p>三种文件格式：mchedr、ehdf、isf。</p>
<h3 id="格式说明">格式说明</h3>
<ul>
<li>mchedr： <a href="ftp://hazards.cr.usgs.gov/weekly/mchedr.txt" class="uri" target="_blank" rel="external">ftp://hazards.cr.usgs.gov/weekly/mchedr.txt</a></li>
<li>ehdf： <a href="ftp://hazards.cr.usgs.gov/weekly/ehdf.txt" class="uri" target="_blank" rel="external">ftp://hazards.cr.usgs.gov/weekly/ehdf.txt</a></li>
<li>isf: <a href="ftp://colossus.iris.washington.edu/pub/ISF/isf_ext.pdf" class="uri" target="_blank" rel="external">ftp://colossus.iris.washington.edu/pub/ISF/isf_ext.pdf</a></li>
</ul>
<h3 id="简单说明">简单说明</h3>
<p>ehdf 格式，一个事件一行记录，包含了发震时刻、震源深度、震级以及其他少量信息，一般情况下已经够用。</p>
<p>mchedr 格式，一个事件多行记录，除包含了 ehdf 格式的信息之外，还包含了地震宏观观测、震相和振幅信息，适合有特殊需求的人使用。</p>
<p>isf 格式主要是用来与其他机构的地震目录进行数据交换用的，一般用不到。</p>
<h2 id="链接">链接</h2>
<ul>
<li>Monthly PDE： <a href="ftp://hazards.cr.usgs.gov/pde/" class="uri" target="_blank" rel="external">ftp://hazards.cr.usgs.gov/pde/</a></li>
<li>Weekly PDE： <a href="ftp://hazards.cr.usgs.gov/weekly/" class="uri" target="_blank" rel="external">ftp://hazards.cr.usgs.gov/weekly/</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 地震目录 </tag>
            
            <tag> 震源机制解 </tag>
            
            <tag> 震级 </tag>
            
            <tag> USGS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[全球数字高程数据：ASTER GDEM]]></title>
      <url>http://seisman.info/aster-gdem.html</url>
      <content type="html"><![CDATA[<h2 id="简介">简介</h2>
<p>ASTER GDEM，即先进星载热发射和反射辐射仪全球数字高程模型，与 SRTM 一样为数字高程 DEM， 其全球空间分辨率为 30 米。该数据是根据 NASA 的新一代对地观测卫星 Terra 的详尽观测结果 制作完成的。其数据覆盖范围为北纬 83° 到南纬 83° 之间的所有陆地区域，达到了地球陆地表面的 99%。号称是 “迄今最完整的全球地形数据”。</p>
<p>数据下载地址：</p>
<ol>
<li><a href="http://reverb.echo.nasa.gov/reverb/" target="_blank" rel="external">NASA Reverb</a></li>
<li><a href="http://gdem.ersdac.jspacesystems.or.jp" target="_blank" rel="external">LP DAAC Global Data Explorer</a></li>
</ol>
<a id="more"></a>
<h2 id="基本信息">基本信息</h2>
<p>空间分辨率：1 弧度秒 （约 30 米）</p>
<p>精度：垂直精度 20 米，水平精度 30 米</p>
<p>更多信息： <a href="http://www.gscloud.cn/userfiles/file/gdem3.pdf" class="uri" target="_blank" rel="external">http://www.gscloud.cn/userfiles/file/gdem3.pdf</a></p>
<h2 id="其他信息">其他信息</h2>
<ul>
<li>网站需要注册，即可免费下载数据；</li>
<li>点击 “Search” 即可进入数据选择界面；</li>
<li>数据被划分为 1 度 *1 度的区块，每个区块文件名以区块左下角的经纬度值来命名；</li>
<li>数据选择界面有四种方式用来选择区块，界面的设计不太习惯，注意看英文；</li>
<li>数据可以单独下载，也可以批量下载；批量下载貌似需要处理一段时间；</li>
<li>下载的文件为 zip 压缩文件，包含了两个文件：dem 和 num，二者均为 GeoTiff 格式；</li>
<li>dem 数据即为数字高程数据；</li>
<li>num 数据也称为 QA 文件，即质量评估文件，其包含了每一点的高程数据的来源等信息，一般用不到；</li>
</ul>
<h2 id="格式转换">格式转换</h2>
<p>使用 GDAL 提供的工具将其转换为 GMT 可识别的 netCDF 格式:</p>
<pre><code>gdal_translate -of GMT ASTGTM2_N36E111_dem.tif ASTGTM2_N36E111_dem.nc</code></pre>
<p>关于 GDAL，见 <a href="/convert-geotiff-to-gmt.html">GeoTiff 格式转 GMT netCDF 格式</a> 一文。</p>
<h2 id="与-srtm-的区别">与 SRTM 的区别</h2>
<ul>
<li>SRTM 数据的纬度覆盖范围是 [-60,60]，ASTER GDEM 数据的纬度覆盖范围为 [-83,83]；</li>
<li>SRTM 的空间分辨率一般为 90m，只有美国境内存在空间分辨率为 30m 的数据；ASTER GDEM 的空间分辨率为 30m；</li>
</ul>
<h2 id="数据合并">数据合并</h2>
<p>可以使用 GMT 自带的 <code>grdpaster</code> 命令将两个相邻的网格文件合并起来。</p>
<ul>
<li>GMT 4.5.13 的 <code>grdpaste</code> 有问题，会出现 “Grids do not share command edge.” 的错误；</li>
<li>GMT 5.1.2 的 <code>grdpaste</code> 没有问题；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 格式转换 </tag>
            
            <tag> GMT </tag>
            
            <tag> 数据 </tag>
            
            <tag> 地形 </tag>
            
            <tag> 高程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GeoTiff 格式转 GMT netCDF 格式]]></title>
      <url>http://seisman.info/convert-geotiff-to-gmt.html</url>
      <content type="html"><![CDATA[<p><a href="http://www.gdal.org/" target="_blank" rel="external">GDAL</a> 提供了不少小工具，其中， <code>gdal_translate</code> 可用于网格数据的格式转换。</p>
<a id="more"></a>
<p>GDAL 的安装方法如下：</p>
<ol style="list-style-type: decimal">
<li><p>Ubuntu/Debian 下:</p>
<pre><code>sudo apt-get install gdal-bin</code></pre></li>
<li><p>CentOS/Fedora 下:</p>
<pre><code>sudo yum install gdal</code></pre></li>
<li><p>Windows 下，到 <a href="http://www.gisinternals.com/" class="uri" target="_blank" rel="external">http://www.gisinternals.com/</a> 下载安装包，安装后命令位于 <code>C:\Program Files (x86)\GDAL\gdal_translate.exe</code>。如果偶尔用一次，直接用 命令的完整路径即可；如果经常使用，可以将 <code>C:\Program Files (x86)\GDAL\</code> 添加到环境变量 PATH 中</p></li>
</ol>
<p>下面的命令可以将 GeoTiff 格式的数据转换为 GMT 可识别的 netCDF 格式:</p>
<pre><code>gdal_translate -of GMT srtm_56_05.tif srtm_56_05.nc</code></pre>
<p><code>gdal_translate</code> 的语法如下:</p>
<pre><code>Usage: gdal_translate [--help-general] [--long-usage]
       [-ot {Byte/Int16/UInt16/UInt32/Int32/Float32/Float64/
             CInt16/CInt32/CFloat32/CFloat64}] [-strict]
       [-of format] [-b band] [-mask band] [-expand {gray|rgb|rgba}]
       [-outsize xsize[%] ysize[%]]
       [-unscale] [-scale[_bn] [src_min src_max [dst_min dst_max]]]* [-exponent[_bn] exp_val]*
       [-srcwin xoff yoff xsize ysize] [-projwin ulx uly lrx lry] [-epo] [-eco]
       [-a_srs srs_def] [-a_ullr ulx uly lrx lry] [-a_nodata value]
       [-gcp pixel line easting northing [elevation]]*
       [-mo&quot;META-TAG=VALUE&quot;]* [-q] [-sds]
       [-co&quot;NAME=VALUE&quot;]* [-stats] [-norat]
       src_dataset dst_dataset</code></pre>
<p><code>-of</code> 后接要转换的数据格式，使用 <code>gdal_translate --long-usage</code> 可以看到，支持的格式如下:</p>
<pre><code>VRT: Virtual Raster
GTiff: GeoTIFF
NITF: National Imagery Transmission Format
HFA: Erdas Imagine Images (.img)
ELAS: ELAS
AAIGrid: Arc/Info ASCII Grid
DTED: DTED Elevation Raster
PNG: Portable Network Graphics
JPEG: JPEG JFIF
MEM: In Memory Raster
GIF: Graphics Interchange Format (.gif)
FITS: Flexible Image Transport System
XPM: X11 PixMap Format
BMP: MS Windows Device Independent Bitmap
PCIDSK: PCIDSK Database File
PCRaster: PCRaster Raster File
ILWIS: ILWIS Raster Map
SGI: SGI Image File Format 1.0
SRTMHGT: SRTMHGT File Format
Leveller: Leveller heightfield
Terragen: Terragen heightfield
GMT: GMT NetCDF Grid Format
netCDF: Network Common Data Format
HDF4Image: HDF4 Dataset
ERS: ERMapper .ers Labelled
JPEG2000: JPEG-2000 part 1 (ISO/IEC 15444-1)
FIT: FIT Image
RMF: Raster Matrix Format
RST: Idrisi Raster A.1
INGR: Intergraph Raster
GSAG: Golden Software ASCII Grid (.grd)
GSBG: Golden Software Binary Grid (.grd)
R: R Object Data Store
PNM: Portable Pixmap Format (netpbm)
ENVI: ENVI .hdr Labelled
EHdr: ESRI .hdr Labelled
PAux: PCI .aux Labelled
MFF: Vexcel MFF Raster
MFF2: Vexcel MFF2 (HKV) Raster
BT: VTP .bt (Binary Terrain) 1.3 Format
IDA: Image Data and Analysis
USGSDEM: USGS Optional ASCII DEM (and CDED)
ADRG: ARC Digitized Raster Graphics
BLX: Magellan topo (.blx)
Rasterlite: Rasterlite
SAGA: SAGA GIS Binary Grid (.sdat)</code></pre>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 格式转换 </tag>
            
            <tag> GMT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地震波形数据格式]]></title>
      <url>http://seisman.info/iris-data-formats.html</url>
      <content type="html"><![CDATA[<p>地震数据的格式，大概分为两种：一种是以归档和交换为目的的格式，比如 SEED， 这种格式要求一个文件中包含足够多的数据信息，如果可能的话，进行数据压缩， 以减少数据传输量和数据存储空间；另一种是以数据处理为目的的格式，比如 SAC， 这种格式一般只包含单个台站单个分量或多分量的数据。这里简介一下 IRIS 提供的 以归档和交换为目的的数据格式。</p>
<a id="more"></a>
<h2 id="seed">SEED</h2>
<p>全称是 The Standard for the Exchange of Earthquake Data，其设计的目的是为 了数据交换和归档，因而不适宜直接数据处理，一般使用 rdseed 将 seed 格式转换为其他数据格式。</p>
<p>一个完整的 SEED 数据包含了时间序列以及台站的相关信息。完整的 SEED 数据又可以 分解为两个部分：只包含时间序列的 miniSEED 格式和只包含台站信息的 Dataless SEED 格式。 完整的 SEED 格式的说可以参考 SEED Reference Manual。</p>
<h2 id="miniseed">miniSEED</h2>
<p>miniSEED 格式是 SEED 格式的一个子集，其只包含时间序列和极少量的其他信息。</p>
<p>一个连续的时间序列在 SEED 格式中被分为若干等长的数据段，这样做的目的还不清楚， 也许是出于数据实时传递的考虑。对于实时数据流，段长度为 512 byte，对于归档数据 段长度为 4096 byte。</p>
<p><a href="https://seiscode.iris.washington.edu/projects/libmseed" target="_blank" rel="external">libmseed</a> 是一个比较友好的函数库，可以用于读写 miniSEED 文件。</p>
<p>miniSEED 数据可以通过 BREQ_FAST 获取，其邮箱地址为：miniseed@iris.washington.edu。</p>
<h2 id="dataless-seed">Dataless SEED</h2>
<p>dataless SEED 中只包含台站的坐标以及仪器响应信息，而不包含任何时间序列。</p>
<p>为什么要将台站信息保存到单独的文件中？因为台站位置以及仪器响应等信息， 在相当长一段时间内（1 年的量级）是保持不变的，当大量申请 SEED 数据时，数据中的 台站信息部分大量重复。由于 dataless SEED 中记录了台站信息的变化历史，因而在 大量数据的情况下，将台站信息单独存放更加经济。</p>
<p>获取 dataless SEED 数据的几种方法：</p>
<ul>
<li>在线申请： <a href="http://www.iris.edu/data/DatalessRequest.htm" class="uri" target="_blank" rel="external">http://www.iris.edu/data/DatalessRequest.htm</a></li>
<li>使用 BREQ_FAST 格式发送邮件到 <code>dataless@iris.washington.edu</code></li>
<li>从 <a href="http://www.iris.edu/bud_stuff/bud/bud_start.pl?BUDDIR=/budnas/virtualnets/ALL" target="_blank" rel="external">BUD</a> 申请</li>
<li>直接从 IRIS 的 <a href="http://www.iris.edu/pub/RESPONSES/DATALESS_SEEDS/" target="_blank" rel="external">FTP</a> 下载</li>
</ul>
<h2 id="stationxml">StationXML</h2>
<p>与 dataless SEED 类似，保存台站信息。详细信息在 <a href="http://www.fdsn.org/xml/station/" target="_blank" rel="external">这里</a>。</p>
<h2 id="simple-ascii">Simple ASCII</h2>
<p>ASCII 格式，占用硬盘空间，不常用。<a href="http://www.iris.edu/dms/nodes/dmc/data/formats/simple-ascii/" target="_blank" rel="external">格式说明</a>。</p>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据 </tag>
            
            <tag> 格式 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CPS330 : Computer Programs in Seismology]]></title>
      <url>http://seisman.info/cps330-intro.html</url>
      <content type="html"><![CDATA[<p>CPS 全称 Computer Programs in Seismology，是圣路易斯大学地震中心开发并维护的 一款地震学软件包，其主要关注地震波在地壳和上地幔介质中的传播和解释。</p>
<p>主页： <a href="http://www.eas.slu.edu/eqc/eqccps.html" class="uri" target="_blank" rel="external">http://www.eas.slu.edu/eqc/eqccps.html</a></p>
<a id="more"></a>
<p>最新版本：3.30</p>
<p>更新日期：2013-11-08</p>
<p>软件包中包含了完整的 <a href="http://www.eas.slu.edu/eqc/eqc_cps/CPS/CPS330.html" target="_blank" rel="external">说明文档</a>，即使不使用该软件，文档中的一些内容还是有参考价值的。</p>
<p>软件包的源码可以在 <a href="http://www.eas.slu.edu/eqc/eqc_cps/CPS/cpslisc.html" target="_blank" rel="external">这里</a> 申请，第一次下载的时候可以申请一下，以后其实可以从 <a href="ftp://ftp.eas.slu.edu/pub/rbh/PROGRAMS.330" target="_blank" rel="external">FTP</a> 直接下载。</p>
<p>软件包还在不断 <a href="http://www.eas.slu.edu/eqc/eqc_cps/cpsbug.html" target="_blank" rel="external">更新</a> 中。官方给了不少 <a href="http://www.eas.slu.edu/eqc/eqc_cps/TUTORIAL/" target="_blank" rel="external">教程</a>，不仅仅教授如何使用软件，同时也介绍了很多地震学的基础知识，同时还有不少用户的问题以及开发者的<a href="http://www.eas.slu.edu/eqc/eqc_cps/Questions/" target="_blank" rel="external">回答</a>。另外官方也会有一些不错的<a href="http://www.eas.slu.edu/eqc/eqc_cps/workshop.html" target="_blank" rel="external">Notes</a> 值得一看。</p>
<p>软件包包含了如下代码：</p>
<ol style="list-style-type: decimal">
<li>合成地震图代码（主要是平层介质）</li>
</ol>
<ul>
<li>广义射线法；</li>
<li>波数积分法；</li>
<li>模态叠加法；</li>
<li>渐进射线理论；</li>
</ul>
<ol start="2" style="list-style-type: decimal">
<li>地壳结构研究</li>
</ol>
<ul>
<li>面波频散；</li>
<li>远震 P 波接收函数；</li>
<li>面波频散和接收函数联合反演；</li>
</ul>
<ol start="3" style="list-style-type: decimal">
<li>区域地震及远震震源反演</li>
</ol>
<ul>
<li>震源深度；</li>
<li>震源机制解；</li>
<li>地震矩；</li>
</ul>
<ol start="4" style="list-style-type: decimal">
<li>GSAC</li>
</ol>
<p>GSAC 可以认为是 SAC 的重新实现，作者给了一些需要重写 SAC 的理由。</p>
<ol start="5" style="list-style-type: decimal">
<li>CALPLOT</li>
</ol>
<p>为了实现代码的易移植性，CPS 自带了 CALPLOT 绘图包。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 震源机制解 </tag>
            
            <tag> 理论地震图 </tag>
            
            <tag> 接收函数 </tag>
            
            <tag> 参考模型 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[全球地形起伏数据：SRTM30_PLUS]]></title>
      <url>http://seisman.info/srtm30-plus.html</url>
      <content type="html"><![CDATA[<ul>
<li>主页：http://topex.ucsd.edu/WWW_html/srtm30_plus.html</li>
<li>精度：30 弧秒（约 1km）</li>
<li>版本：V11（20141129）</li>
</ul>
<a id="more"></a>
<h2 id="数据说明">数据说明</h2>
<ul>
<li>整个数据被分为 33 个文件，与 GTOPO30 相同；</li>
<li>同时也提供了单个包含全部地形数据的二进制文件；</li>
<li>提供了 1 分和 2 分精度的 netCDF 格式网格文件；</li>
<li>大部分陆地区域使用 SRTM30 中的陆地高程数据；</li>
<li>SRTM 在高纬度陆地区域无数据，则使用 GTOPO30 数据；</li>
<li>纬度 [-81,81] 范围内的海底地形数据来自于 Smith 和 Sandwell 的全球 1 分数据；</li>
<li>更高精度的数据来自于 <a href="http://ocean-ridge.ldeo.columbia.edu/general/html/home.html" target="_blank" rel="external">LDEO Ridge Multibeam Synthesis Project</a>、 <a href="http://www.jamstec.go.jp/cruisedata/e/" target="_blank" rel="external">JAMSTEC Data Site for Research Cruises</a> 和 <a href="http://www.ngdc.noaa.gov/mgg/coastal/coastal.html" target="_blank" rel="external">NGDC Coastal Relief Model</a>。</li>
<li>两极地区的数据来自于 <a href="http://www.ngdc.noaa.gov/mgg/bathymetry/arctic/arctic.html" target="_blank" rel="external">International Bathymetric Chart of the Oceans</a>。</li>
</ul>
<p>其他信息：</p>
<ol style="list-style-type: decimal">
<li><a href="ftp://topex.ucsd.edu/pub/srtm30_plus/README.V11.txt" target="_blank" rel="external">说明文件</a></li>
<li><a href="ftp://topex.ucsd.edu/pub/srtm30_plus/SRTM30_PLUS.kmz" target="_blank" rel="external">Google KMZ 文件</a></li>
<li><a href="ftp://topex.ucsd.edu/pub/srtm30_plus/srtm30/" target="_blank" rel="external">srtm30 格式</a></li>
</ol>
<h2 id="数据的使用">数据的使用</h2>
<h3 id="xyz-格式">XYZ 格式</h3>
<p>下载： <a href="http://topex.ucsd.edu/cgi-bin/get_srtm30.cgi" target="_blank" rel="external">ASCII XYZ 格式</a></p>
<p>比如下载的经度 [5,7]，纬度[5,7] 范围内的数据，可使用如下 GMT5 命令转换:</p>
<pre><code>gmt xyz2grd data.xyz -Gdata.nc -R5/7/5/7 -I30s/30s -r -V</code></pre>
<h3 id="topo30-格式">topo30 格式</h3>
<p><a href="ftp://topex.ucsd.edu/pub/srtm30_plus/topo30/topo30" target="_blank" rel="external">二进制格式</a> <a href="ftp://topex.ucsd.edu/pub/srtm30_plus/topo30/topo30.grd" target="_blank" rel="external">netCDF 格式</a></p>
<p>数据有 1.7GB，直接下载 netCDF 即可使用。</p>
<p>若是下载了二进制格式的，可以向 <code>grdraser.info</code> 中添加如下语句:</p>
<pre><code>44 &quot;SRTM30_PLUS&quot;                &quot;m&quot;     -R0/360/-90/90          -I0.5m          PG i 1           0    -9999      srtm30_plus B</code></pre>
<p>未测试，同时不建议这样使用。</p>
<h3 id="srtm30-格式">srtm30 格式</h3>
<p>SRTM30_PLUS 遵循了 <a href="2013-08-11_global-digital-elevation-model-gtopo30.rst">GTOPO30</a> 的数据处理方法，其将全球分为 33 个区块。GTOPO30 仅包含了陆地的地形数据，而 SRTM30_PLUS 则包含了陆地地形和海洋深度数据，因而 SRTM30_PLUS 完全可以替代 GTOPO30 数据。</p>
<p>SRTM30_PLUS 的二进制格式的使用方法与 GTOPO30 相同，不再多说。</p>
<p><a href="ftp://topex.ucsd.edu/pub/srtm30_plus/srtm30/data/" target="_blank" rel="external">二进制格式</a> <a href="ftp://topex.ucsd.edu/pub/srtm30_plus/srtm30/grd/" target="_blank" rel="external">netCDF 格式</a></p>
<p>SRTM30_PLUS 同时提供了 33 个区块的 netCDF 格式的网格文件，可以直接用于 GMT 绘图。</p>
<p>从二进制到 netCDF 格式的转换，使用了 <a href="ftp://topex.ucsd.edu/pub/srtm30_plus/srtm30/grd/bin2grd" target="_blank" rel="external">bin2grd 脚本</a>。</p>
<h3 id="topo1-和-topo2">topo1 和 topo2</h3>
<p>SRTM30_PLUS 同时提供了 1 分和 2 分精度的数据，这个数据应该与 ETOPO1 和 ETOPO2 类似。直接用 ETOPO 就好。</p>
<p><a href="ftp://topex.ucsd.edu/pub/srtm30_plus/topo1_topo2/topo1.grd" target="_blank" rel="external">topo1</a> <a href="ftp://topex.ucsd.edu/pub/srtm30_plus/topo1_topo2/topo2.grd" target="_blank" rel="external">topo2</a></p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-12-31：初稿；</li>
<li>2015-04-07：更新版本，增加了对不同格式的说明；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
            <tag> 地形 </tag>
            
            <tag> 网格 </tag>
            
            <tag> 高程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[脚本中调用 SAC 时不显示版本信息]]></title>
      <url>http://seisman.info/sac-display-copyright.html</url>
      <content type="html"><![CDATA[<p>在终端使用 SAC 时默认会出现版本信息，如下:</p>
<pre><code>$ sac
SEISMIC ANALYSIS CODE [11/11/2013 (Version 101.6a)]
Copyright 1995 Regents of the University of California

SAC&gt;</code></pre>
<p>若在 SAC 宏文件或者 bash、perl 脚本中多次调用 SAC 命令的话，则会重复出现版本信息，严重干扰了宏文件或脚本的输出，对于用户来说是很糟糕的体验。</p>
<p>版本信息的显示由环境变量 <code>SAC_DISPLAY_COPYRIGHT</code> 来控制，其可以取值为 0 或 1，其中 1 代表显示版本信息（默认值），0 代表不显示版本信息。</p>
<p>在 Bash 脚本中，可以这样写:</p>
<pre><code>SAC_DISPLAY_COPYRIGHT=0</code></pre>
<p>在 Perl 脚本中，可以这样写:</p>
<pre><code>$ENV{SAC_DISPLAY_COPYRIGHT} = 0 ;</code></pre>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SAC技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CCP1.0 编译]]></title>
      <url>http://seisman.info/install-ccp.html</url>
      <content type="html"><![CDATA[<p>Prof. Lupei Zhu 最近又在网上公开了两个程序包，CCP 和 CAP。</p>
<p>CCP，即 Common-Conversion-Point，用于共转换点地震数据的叠加，这个程序主要与 <a href="/compilation-of-hk.html">hk1.3</a> 一起使用，用于接收函数的研究。</p>
<a id="more"></a>
<p>安装方法以及一些修改与 hk1.3 类似：</p>
<h2 id="下载与解压">下载与解压</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ wget http://www.eas.slu.edu/People/LZhu/downloads/ccp1.0.tar</div><div class="line">$ tar -xvf ccp1.0.tar</div><div class="line">$ <span class="built_in">cd</span> ccp</div><div class="line">$ make clean</div></pre></td></tr></table></figure>
<h2 id="修改-makefile">修改 Makefile</h2>
<p>在 Makefile 中加入如下两行，定义变量 <code>GMT_INC</code> 和 <code>GMT_LIB</code> ：</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">GMT_INC = -I/opt/GMT/<span class="keyword">include</span></div><div class="line">GMT_LIBS = -L/opt/GMT/lib -lgmt -lpsl -lnetcdf -lm -s</div></pre></td></tr></table></figure>
<h2 id="编译">编译</h2>
<pre><code>$ make</code></pre>
<h2 id="bug-及其解决办法">BUG 及其解决办法</h2>
<p>在按照 CCP 包里的说明文档执行程序 3Dslice 时，会出现如下信息及错误:</p>
<pre><code>interpolation order = 1
GMT Warning: scale_factor should not be 0. Reset to 1.
段错误 (核心已转储)</code></pre>
<p>这个错误是由于 3Dslice 中调用 <code>GMT_write_grd</code> 导致的。具体原因尚不清楚，可能是 由于 GMT 不同版本之间该函数的定义有变化导致的。</p>
<p>整个程序的作用在于从一个 3D 的网格文件中提取一个切片，然后将该切片上的数据写到 2D 网格文件中， 调用 <code>GMT_write_grd</code> 的目的就是将 2D 的网格数据以 netCDF 格式写入到文件中。</p>
<p>因而，解决这个问题的思路有三个：</p>
<ol style="list-style-type: decimal">
<li>读 GMT 源码，了解 <code>GMT_write_grd</code> 这个函数，找到可能出错的原因</li>
<li>尝试安装稍老版本的 GMT4，比如 GMT 4.5.5，也许可以用</li>
<li>在 3Dslice 源码的最后，删除对 <code>GMT_write_grd</code> 的调用，自己写代码，直接 输出 XYZ 数据。然后在外部调用 <code>xyz2grd</code> 生成 netCDF 即可</li>
</ol>
<p>推荐使用方法 3。当然，如果有人用方法 1 解决了问题，可以告诉我。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 编译 </tag>
            
            <tag> 接收函数 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[中国行政区划数据下载]]></title>
      <url>http://seisman.info/china-administrative-areas-data.html</url>
      <content type="html"><![CDATA[<h2 id="gadm-数据库">GADM 数据库</h2>
<p>GADM，是一个全球行政区划数据库。包括了几乎全部国家和地区的行政区划界线数据。</p>
<p>主页： <a href="http://www.gadm.org/" class="uri" target="_blank" rel="external">http://www.gadm.org/</a></p>
<a id="more"></a>
<h3 id="下载数据">下载数据</h3>
<p>下载地址： <a href="http://www.gadm.org/country" class="uri" target="_blank" rel="external">http://www.gadm.org/country</a></p>
<p>GADM 提供的数据格式有 6 种：ESRI file geodatabase、Shapefile、Geopackage(SpatiaLite)、R(SpatialPolygonsDataFrame)、Google Earth .kmz 和 ESRI personal geodatabase。这里，数据格式应选择 shapefile。</p>
<p>在 GADM 中，country 的定义为 “any entity with an ISO country code”。关于 ISO country code，可以参考 <a href="http://zh.wikipedia.org/wiki/ISO_3166-1" target="_blank" rel="external">维基百科</a>。因而 想要下载完整的中国数据，实际上需要四个文件：China、Hong Kong、Macao、Taiwan。</p>
<p>也可以在 <a href="http://www.gadm.org/version2" class="uri" target="_blank" rel="external">http://www.gadm.org/version2</a> 下载全球的行政区划数据，但非常不推荐。一方面是数据量偏大，另一方面是全球区划数据保存到一个文件中，难以整理。不如麻烦一点，需要哪个国家下哪个 国家。</p>
<h3 id="解压数据">解压数据</h3>
<p>以 china 数据为例</p>
<pre><code>unzip CHN_adm_shp.zip -d CHN_adm</code></pre>
<p>解压后得到一堆文件，其中 <code>CHN_adm0.shp</code>、<code>CHN_adm1.shp</code>、<code>CHN_adm2.shp</code>、 <code>CHN_adm3.shp</code> 为实际需要的 shapefile 数据。0、1、2、3 为第零、一、二、三级行政区划界线。对于 china 数据，基本相当于中国大陆地区的边界、省界、市界和区县界。如果是 Hong Kong 的数据，0 依然是边界，但是 1 理解为省界显然不合适，总之就是更低一级的行政区划界线。</p>
<h3 id="格式转换">格式转换</h3>
<p>GMT 不能识别 shapefile 格式。需要使用 gdal 的 <code>ogr2ogr</code> 命令将 shapefile 格式转换为 GMT 可识别的格式。如果系统里找不到 <code>ogr2ogr</code> 命令，则说明 gdal 没有安装。Ubuntu 下的包 名是 <code>gdal-bin</code> ，CentOS 下的是 <code>gdal</code>。Windows 用户则需要到 gdal 官网下载安装。 另外，Windows 用户也可以用 ArcGIS 等软件实现格式的转换。</p>
<p>具体的转换命令是从网上找到的，<code>CHN_adm0</code> 为要生成的数据的文件名前缀，但是为什么要出现两次，表示很不解。</p>
<pre><code>ogr2ogr -f GMT -nln CHN_adm0 CHN_adm0 CHN_adm0.shp
ogr2ogr -f GMT -nln CHN_adm1 CHN_adm1 CHN_adm1.shp
ogr2ogr -f GMT -nln CHN_adm2 CHN_adm2 CHN_adm2.shp
ogr2ogr -f GMT -nln CHN_adm3 CHN_adm3 CHN_adm3.shp</code></pre>
<p>对于 Hong Kong、Macao、Taiwan 的数据做类似操作，最终生成了一堆以 gmt 结尾的文件。共计 12 个，如下：</p>
<pre><code>CHN_adm0.gmt  CHN_adm2.gmt  HKG_adm0.gmt  MAC_adm0.gmt  MAC_adm2.gmt  TWN_adm1.gmt
CHN_adm1.gmt  CHN_adm3.gmt  HKG_adm1.gmt  MAC_adm1.gmt  TWN_adm0.gmt  TWN_adm2.gmt</code></pre>
<h2 id="绘图测试">绘图测试</h2>
<p>PS1：数据为多段数据，在 GMT4 中需要使用 <code>-m</code> 选项，而 GMT5 已经可以自动处理多段数据，所以不需要使用 <code>-m</code> 选项。</p>
<p>PS2：数据中有领土纠纷的部分不符合中国政府的立场，笔者也不赞同。虽然有问题的部分不能在正规期刊上发表，但是没有问题的部分还是可以使用的。欢迎读者告诉我符合中国政府政策的数据。</p>
<h3 id="中国全图">中国全图</h3>
<p>绘制中国全图需要全部的 0 级数据。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=72/136/15/54</div><div class="line">J=M15c</div><div class="line">PS=china.ps</div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K -U &gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> CHN_adm0.gmt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> HKG_adm0.gmt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> MAC_adm0.gmt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> TWN_adm0.gmt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>代码运行过程中 GMT 会出现如下的警告 (或错误？)</p>
<pre><code>psxy: Bad OGR/GMT: @D record has more items than declared by @N</code></pre>
<p>猜测是 <code>ogr2ogr</code> 转换的问题。在我的系统环境该警告不影响绘图效果，但评论中 <span class="citation">@vv</span> 指出在他的系统环境下会导致图形无法绘制。</p>
<p>效果图（缺了南海的九段线数据）：</p>
<div class="figure">
<img src="/images/2013112301.jpg">

</div>
<h3 id="级行政区划">1 级行政区划</h3>
<p>与上面的代码几乎一样，1 级数据中包含了 0 级数据，所以直接绘制 1 级数据即可。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">R=72/136/15/54</div><div class="line">J=M15c</div><div class="line">PS=china.ps</div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K -U &gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> CHN_adm1.gmt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> HKG_adm1.gmt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> MAC_adm1.gmt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> TWN_adm1.gmt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>效果图：</p>
<div class="figure">
<img src="/images/2013112302.jpg">

</div>
<p>在上一篇博文《<a href="/usage-of-dcw-data.html">GMT 中 DCW 数据的使用</a>》中利用 GMT 自带的 DCW 数据也生成了类似的图，如下图。查看全图，对比一下会发现，两张图的细节方面还是有些区别的， 本文的数据绘制的似乎包含了更多的细节（主要是小的岛屿）。这个就得根据需求去选择了，当然也有 可能两个都是有问题的。</p>
<div class="figure">
<img src="/images/2013112303.jpg">

</div>
<h3 id="级行政区划-1">2 级行政区划</h3>
<p>转换出来的 2 级数据中包含了全国所有的市级边界，用编辑器打开查看内容就会发现，每条线段都有 完整的注释，很容易从众多线段中提取出自己想要的部分。以安徽省为例，将与安徽有关的线段数据保存 到文件 <code>Anhui_adm2.gmt</code> 中：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">R=114/120/29/35</div><div class="line">J=M10c</div><div class="line">PS=anhui.ps</div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K -U &gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> Anhui_adm2.gmt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>上面的脚本有一个很不方便的地方：想要画一个省的 2 级数据，每次都要从 CHN_adm2.gmt 中手动提取该省的数据信息。下面的例子可以避免这种手动提取的过程，主要通过 DCW 数据和 psclip 命令，使用全国 2 级数据（CHN_adm2.gmt），但是只绘制安徽省的 2 级数据。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">R=114/120/29/35</div><div class="line">J=M10c</div><div class="line">PS=anhui.ps</div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K -U &gt; <span class="variable">$PS</span></div><div class="line">gmt pscoast -FCN.34 -M &gt; Anhui_bnd.gmt</div><div class="line">gmt psclip -J<span class="variable">$J</span> -R<span class="variable">$R</span> Anhui_bnd.gmt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> CHN_adm2.gmt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psclip -C -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>脚本利用 pscoast 命令，将安徽省（代码为 34）的省界数据导出到文件 Anhui_bnd.gmt 中，然后利用该文件进行 clip，psxy 绘图时虽然使用的是全国的 2 级数据 CHN_adm2.gmt，但是只有安徽省内的部分会被绘制出来，最后还需要再次调用 psclip 以结束 clip。</p>
<p>上面的这个脚本生成了一个中间文件 Anhui_bnd.gmt，有强迫症的人是无法忍受这个的，因而上面的代码利用管道可以进一步简化为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">R=114/120/29/35</div><div class="line">J=M10c</div><div class="line">PS=anhui.ps</div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K -U &gt; <span class="variable">$PS</span></div><div class="line">gmt pscoast -FCN.34 -M | gmt psclip -J<span class="variable">$J</span> -R<span class="variable">$R</span> -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> CHN_adm2.gmt -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psclip -C -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>上面三个脚本的最终结果基本是一致的，效果图如下：</p>
<p>注：三个脚本的成图效果是有差的，但是目前没有体现出来，在下一段 “3 级行政区划” 中，可以更明显地看出区别。</p>
<div class="figure">
<img src="/images/2013112304.jpg">

</div>
<h3 id="级行政区划-2">3 级行政区划</h3>
<p>这里还是以安徽省为例，实际上只用 3 级数据即可，这里同时用了 2 级数据和 3 级数据，并且用不同的粗细和颜色来区分。需要注意，由于 3 级数据中包含了 2 级数据，所以下面的例子先画了 3 级数据，再用 2 级数据覆盖。如果画的顺序反了，效果就会差很多。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">R=114.8/120/29.3/36</div><div class="line">J=M14c</div><div class="line">PS=anhui.ps</div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K -U &gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> CHN_adm3.gmt -W0.5p,gray -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> CHN_adm2.gmt -W1p -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>效果图如下：</p>
<div class="figure">
<img src="/images/2013112305.jpg">

</div>
<p>下面的脚本利用了前面提到的 psclip 的方法：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">R=114.8/120/29.3/36</div><div class="line">J=M14c</div><div class="line">PS=anhui.ps</div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K -U &gt; <span class="variable">$PS</span></div><div class="line">gmt pscoast -FCN.34 -M | gmt psclip -J<span class="variable">$J</span> -R<span class="variable">$R</span> -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> CHN_adm3.gmt -W0.5p,gray -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> CHN_adm2.gmt -W1p -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psclip -C -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>效果图如下：</p>
<div class="figure">
<img src="/images/2013112306.jpg">

</div>
<p>将这两张图对比一下，容易发现，省界的部分线段明显变细了，这算是 clip 的一个缺点，使用省界数据进行 clip，同时又要绘制省界数据，如何判断省界数据点是否在 clip 区域内部是个问题。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-11-23：初稿；</li>
<li>2013-11-28：绘制 2 级和 3 级边界时，利用 clip 的方法以减少人工操作。Thanks to <span class="citation">@yangtze</span>。</li>
<li>2013-12-05：删除了数据包中的冗余隐藏文件，重新打包，提供多种格式下载。</li>
<li>2014-01-19：不推荐下载全球行政区划数据；</li>
<li>2015-04-11：存在个别 IP 恶意下载数据，导致我流量异常高，因而删除其他格式的数据压缩包，仅留下 7z 格式的，若仍出现流量异常，则删除该数据；</li>
<li>2015-05-01：流量依然异常，猜测是搜索引擎会对齐定时抓取导致的；虽然已经在七牛限制了文件的非本站访问，但似乎对压缩文件无效。故删除该数据，有需要的可以自己去转换格式；</li>
<li>2016-04-13：王亮添加了 GADM 数据库新增的 Macou 1、2 级数据，并修正了部分理解和表述；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 格式转换 </tag>
            
            <tag> GMT </tag>
            
            <tag> 数据 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[利用 DCW 数据进行区域涂色]]></title>
      <url>http://seisman.info/gmt-map-coloring.html</url>
      <content type="html"><![CDATA[<p>关于 DCW 数据，前面两篇博文已经介绍了很多，这个是一个更具体的实例 —– 区域涂色。</p>
<p>问题描述：绘制中国地图，包括国界和省界，并对每个省份填充不同的颜色。</p>
<p>根据著名的 <a href="http://zh.wikipedia.org/wiki/%E5%9B%9B%E8%89%B2%E5%AE%9A%E7%90%86" target="_blank" rel="external">四色定理</a>：任意一个无飞地的地图都可以用四种颜色染色，使得没有两个相邻国家染的颜色相同。</p>
<p>如果真的要求最多只用四色填图，这个问题还真麻烦，这里不强求，只要求相邻省份的颜色不同即可。</p>
<a id="more"></a>
<p>代码如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=70/150/10/60</div><div class="line">J=M25c</div><div class="line">B=10</div><div class="line">PS=china.ps</div><div class="line"></div><div class="line"><span class="comment"># 打开 GMT</span></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 对每个省份进行循环</span></div><div class="line"><span class="keyword">for</span> code <span class="keyword">in</span> 11 12 13 14 15 21 22 23 31 32 33 34 35 36 37 41 42 43 44 45 46 50 51 52 53 54 61 62 63 64 65 71 91 92;</div><div class="line"><span class="keyword">do</span></div><div class="line">   <span class="comment"># 随机生成 RGB 颜色</span></div><div class="line">   <span class="built_in">declare</span> -i red=<span class="variable">$RANDOM</span>*256/32768</div><div class="line">   <span class="built_in">declare</span> -i green=<span class="variable">$RANDOM</span>*256/32768</div><div class="line">   <span class="built_in">declare</span> -i blue=<span class="variable">$RANDOM</span>*256/32768</div><div class="line">   <span class="comment"># 绘图并涂色</span></div><div class="line">   gmt pscoast -R<span class="variable">$R</span> -J<span class="variable">$J</span> -FCN.<span class="variable">$code</span>+p1p+g<span class="variable">$red</span>/<span class="variable">$green</span>/<span class="variable">$blue</span> -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="keyword">done</span></div><div class="line"><span class="comment"># 关闭 GMT</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>分析一下代码：</p>
<p>由于一个 pscoast 命令中最多只能用一次 <code>-F</code> 选项，因而需要对不同省份进行循环，即 11-19 行。 14-16 行是生成随机 RGB 颜色，<code>$RANDOM</code> 是 Bash 的一个内置变量，每次调用随机生成 0-32767 之间的任意整数，这里做了简单的映射，使得结果为 0-255。 <code>declare -i</code> 声明变量为整型，使得映射正确。</p>
<p>由于是随机生成颜色，所以每次运行结果都不一样，这样也不错哈。</p>
<p>结果如下图（好像有些省份的颜色比较接近）：</p>
<div class="figure">
<img src="/images/2013112201.jpg">

</div>
<p>顺便改一下代码，生成一下动画，下面的代码有意思的点有几个：</p>
<ul>
<li>采用增量绘图，每次绘制一个省份之后将未关闭的 <code>$PS</code> 复制一份，命名为 <code>$code.ps</code>，然后将 <code>$code.ps</code> 文件正常关闭；即 L15-L16；</li>
<li>展示了如何利用 <code>convert</code> 命令将多个 jpg 文件转换为一个 gif 文件；这里使用了通配符 <code>*.jpg</code>，所以正确的给动画的每一帧取名很重要，这决定了每一张 jpg 在 gif 中的顺序；<code>delay</code> 设置了每帧之间的时间延迟，<code>loop</code> 设置了 gif 循环播放；</li>
<li><code>psconvert</code> 在转换时将 DPI 设置为 100，以减少最终生成的 gif 的尺寸，也有人喜欢压缩成 avi 视频格式；</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=70/150/10/60</div><div class="line">J=M25c</div><div class="line">B=10</div><div class="line">PS=china.ps</div><div class="line"></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K -Xc -Yc &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> code <span class="keyword">in</span> 11 12 13 14 15 21 22 23 31 32 33 34 35 36 37 41 42 43 44 45 46 50 51 52 53 54 61 62 63 64 65 71 91 92;</div><div class="line"><span class="keyword">do</span></div><div class="line">   <span class="built_in">declare</span> -i red=<span class="variable">$RANDOM</span>*256/32768</div><div class="line">   <span class="built_in">declare</span> -i green=<span class="variable">$RANDOM</span>*256/32768</div><div class="line">   <span class="built_in">declare</span> -i blue=<span class="variable">$RANDOM</span>*256/32768</div><div class="line">   gmt pscoast -R<span class="variable">$R</span> -J<span class="variable">$J</span> -FCN.<span class="variable">$code</span>+p1p+g<span class="variable">$red</span>/<span class="variable">$green</span>/<span class="variable">$blue</span> -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">   cp <span class="variable">$PS</span> <span class="variable">$code</span>.ps</div><div class="line">   gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$code</span>.ps</div><div class="line"><span class="keyword">done</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">gmt psconvert -P -E100 *.ps</div><div class="line">convert -delay 30 -loop 0 *.jpg china.gif</div></pre></td></tr></table></figure>
<p>由于生成 PDF 时，不支持导入 GIF 文件，故而就不再给出动态效果图了。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> 图像 </tag>
            
            <tag> 动画 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 中 DCW 数据的使用]]></title>
      <url>http://seisman.info/usage-of-dcw-data.html</url>
      <content type="html"><![CDATA[<p>问题描述：想要绘制一个中国地图，区域范围为 <code>-R70/140/15/55</code> 。</p>
<a id="more"></a>
<h2 id="代码-1">代码 1</h2>
<p>GMT4 中可以使用 pscoast 命令的 <code>-N</code> 选项绘制国界，代码如下:</p>
<pre><code>pscoast -R70/140/15/55 -JM15c -B10 -N1/0.25p,blue -U &gt; china.ps</code></pre>
<p>效果图如下：</p>
<div class="figure">
<img src="/images/2013112101.jpg">

</div>
<p>这里的国界其实指的是陆地部分国家与国家之间的界限。显然这样的图不能用。</p>
<h2 id="代码-2">代码 2</h2>
<p>还是用 GMT4，加上海岸线，代码如下:</p>
<pre><code>pscoast -R70/140/15/55 -JM15c -B10 -N1/0.25p,blue -W1/0.3p,black -U &gt; china.ps</code></pre>
<p>效果如下：</p>
<div class="figure">
<img src="/images/2013112102.jpg">

</div>
<p>为了凸显海岸线与国界的区别，这里分别用了两种颜色。如果把二者调成一种颜色，粗细也相同，这样看上去也比较符合要求了，但是显得有点不伦不类了，当然有时候就是要这个效果。</p>
<p>下面用 GMT5 的 DCW 数据来画图。</p>
<h2 id="pscoast">pscoast</h2>
<p>GMT5 的语法相对于 GMT4 有了不少变化，这里只说与 DCW 有关的 <code>-F</code> 选项，有关 DCW 数据的信息看上一篇博文。</p>
<pre><code>-Fcode1,code2,...[+l|L][+gfill][+ppen][+r|R[incs]]</code></pre>
<ul>
<li>想要绘制某个或某些国家的边界，可以使用 <code>code1,code2,...</code> 来选定，其中每个 code 代表不同的国家 2 位代码，用逗号分隔。</li>
<li>如果想要选择某个国家的某个省的边界，则 code 应该为 <code>country.state</code> 的格式，比如 <code>US.TX</code> 代表美国的 Texas 州。</li>
<li>如果想要选定整个大洲，则需要在洲代码 <strong>前</strong> 加上等于号，比如 <code>code</code> 为 <code>=AF</code> 则表示选择整个非洲的数据；</li>
<li>追加 <strong>+l</strong> 会列出国家名以及国家代码，不提取数据或绘图。（没试出效果）</li>
<li>追加 <strong>+L</strong> 会列出州 / 省名，以及代码；</li>
<li>追加 <strong>+r</strong> 会计算当前选择的边界数据的范围，并返回该范围；还可以加入 xinc/yinc 或者 winc/einc/sinc/ninc 来指定 - B 选项；（没理解）</li>
<li>追加 <strong>+R</strong> 会计算当前选择的边界数据的范围，并向外扩展 incs 的范围；（没理解）</li>
<li>追加 <strong>+p</strong><em>pen </em> 指定边界的线条属性；</li>
<li>追加 <strong>+g</strong><em>fill </em> 指定填充属性；</li>
<li>一条命令中只能出现一次 <code>-F</code> 选项，如有特殊需求，需多次调用 pscoast；</li>
<li>还有一些更复杂的规则，有些乱。。</li>
</ul>
<h2 id="例-1">例 1</h2>
<p>绘制 - R70/150/10/60 范围内的全部亚洲国家的边界:</p>
<pre><code>gmt pscoast -R70/150/10/60 -JM20c -B10 -F=AS -U &gt; asia.ps</code></pre>
<div class="figure">
<img src="/images/2013112103.jpg">

</div>
<h2 id="例-2">例 2</h2>
<p>绘制中国边界（不含台湾、香港、澳门）:</p>
<pre><code>gmt pscoast -B10 -R70/150/10/60 -JM20c -FCN -U &gt; china.ps</code></pre>
<div class="figure">
<img src="/images/2013112104.jpg">

</div>
<h2 id="例-3">例 3</h2>
<p>绘制内蒙古，并修改边界和填充颜色:</p>
<pre><code>gmt pscoast -B10 -R70/150/10/60 -JM20c -FCN.15+p1p,blue+gred -U &gt; state.ps</code></pre>
<div class="figure">
<img src="/images/2013112105.jpg">

</div>
<h2 id="例-4">例 4</h2>
<p>导出中国内蒙古的边界数据:</p>
<pre><code>gmt pscoast -FCN.15 -M -V &gt; neimenggu.dat</code></pre>
<p>这里只需要使用 <code>-M</code> 选项即可。</p>
<h2 id="例-5">例 5</h2>
<p>这个例子算是一个相对比较完整的中国地图，包含了必要的省界信息。距离出版可能还需要九段线数据，具体不讨论。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=70/150/15/55</div><div class="line">J=M20c</div><div class="line">B=10</div><div class="line">PS=china.ps</div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K -U &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> code <span class="keyword">in</span> 11 12 13 14 15 21 22 23 31 32 33 34 35 36 37 41 42 43 44 45 46 50 51 52 53 54 61 62 63 64 65 71 91 92;</div><div class="line"><span class="keyword">do</span></div><div class="line">    gmt pscoast -B10 -R<span class="variable">$R</span> -J<span class="variable">$J</span> -FCN.<span class="variable">$code</span> -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"><span class="keyword">done</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<div class="figure">
<img src="/images/2013112106.jpg">

</div>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> GMT </tag>
            
            <tag> 数据 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT5 的 DCW 数据简介]]></title>
      <url>http://seisman.info/introduction-to-dcw-gmt5.html</url>
      <content type="html"><![CDATA[<h2 id="dcw">DCW</h2>
<p>DCW，全称 Digital Chart of the World，是一个内容广泛的数字地图，2006 年免费公开，但是其数据实际上从 1992 年起就没有再更新过。</p>
<p>DCW 数据被分为 2094 个区块，基本上一个区块代表 5 度 ×5 度的区域。DCW 数据中包含了国界、公路、铁路等等。</p>
<p>详细信息参考维基百科词条：<a href="http://en.wikipedia.org/wiki/Digital_Chart_of_the_World" target="_blank" rel="external">Digital Chart of the World</a></p>
<a id="more"></a>
<h2 id="dcw-gmt">DCW-GMT</h2>
<p>DCW-GMT 算是 DCW 的升级版，其特点在于：</p>
<ul>
<li>包含全球各国国界；</li>
<li>包含部分国家的省界（目前只有 8 个比较大的国家，包括中国）；</li>
<li>数据格式为 netCDF-4，可以直接在 GMT 中使用，也容易从中提取所需的边界数据；</li>
<li>数据应该是比较新的，且有人维护，因而发现问题可以报告 Bug；</li>
</ul>
<p>主页： <a href="http://www.soest.hawaii.edu/wessel/dcw/" class="uri" target="_blank" rel="external">http://www.soest.hawaii.edu/wessel/dcw/</a></p>
<h2 id="为什么又是国界">为什么又是国界？</h2>
<p>在 GMT4 中，可以用 <code>pscoast</code> 的 <code>-N1</code> 选项来绘制国界， <code>-N2</code> 选项来绘制省界（仅美国、加拿大等国）。</p>
<p>这样绘制的国界有什么问题呢？比如，设定绘图区域为中国，然后使用 <code>pscoast -N1</code> 加入国界，得到的结果里将不仅仅是中国的国界，还有俄罗斯、日本、印度等的国界。即 GSHHG 的国界数据是完全的，但是并不能区分每段数据属于哪个国家。所以网上有一堆文章在研究 GMT 中怎么只绘制中国的边界。</p>
<p>DCW-GMT 是为了解决这个问题而存在的，当你想绘制中国国界时，得到的就是干干净净的中国国界，而没有其他国家的国界的干扰。</p>
<h2 id="dcw-gmt-详情">DCW-GMT 详情</h2>
<p>下载安装什么的在博文《<a href="/install-gmt5-under-linux.html">GMT5.1.0 在 Linux 下的安装</a>》中已经说过了，不再多说。</p>
<p>DCW-GMT 包含了如下文件：</p>
<pre><code>.
├── COPYING.LESSERv3
├── COPYINGv3
├── dcw-countries.txt
├── dcw-gmt.nc
├── dcw-states.txt
├── LICENSE.TXT
└── README.TXT</code></pre>
<p>真正有用的文件包括 <code>dcw-countries.txt</code>、<code>dcw-gmt.nc</code>、<code>dcw-states.txt</code>。其中 dcw-gmt.nc 是 netCDF 格式的数据，其他两个 txt 文件为辅助文档。</p>
<h3 id="dcw-contries">dcw-contries</h3>
<p>文件格式为 <code>大洲代码 国家代码 国家名</code> ，代码均为两位字符。</p>
<p>大洲代码包括 AF(非洲)、AN(南极洲)、AS(亚洲)、EU(欧洲)、OC(大洋洲)、NA(北美洲) 和 SA(南美洲)。</p>
<p>国家代码就更多了，比如中国是 CN。准确来说，不是国家代码，而是国家和 / 或地区代码，比如 China、Hong Kong、Macao 和 Taiwan 分别有不同的国家代码。</p>
<p>这个文件是 GMT 绘制国界时需要查找的文件，同时也是用户绘图边界时需要参考的文件。该文件共计 250 个国家或地区。文件内容大致如下：</p>
<pre><code>AS BH Bahrain
AS BN Brunei
AS BT Bhutan
AS CN China
AS CX Christmas Island
AS GE Georgia
AS HK Hong Kong
AS HM Heard Island and McDonald Islands
AS ID Indonesia
AS IL Israel
AS IN India</code></pre>
<h3 id="dcw-states">dcw-states</h3>
<p>文件格式为 <code>国家代码 省代码 省名</code>。国家代码为两位，与 dcw-contries.txt 中对应，省代码则比较乱了，用的时候再查。中国的省代码居然是数字，不知道为什么这么安排。</p>
<p>目前有 AR(阿根廷)、AU(澳大利亚)、BR(巴西)、CA(加拿大)、US(美国)、CN(中国)、IN(印度)、RU(俄罗斯) 共计八个国家的省 / 州界数据。</p>
<p>只关心中国的数据，包括全部 34 个省级行政区域，包括 23 个省，5 个自治区，4 个直辖市，以及香港，澳门 2 个特别行政区。（台湾在里面，不然又该引起争端了）。</p>
<pre><code>CN 11 Beijing
CN 50 Chongqing
CN 31 Shanghai
CN 12 Tianjin
CN 34 Anhui
CN 35 Fujian
CN 62 Gansu
CN 44 Guangdong
CN 52 Guizhou
CN 46 Hainan
CN 13 Hebei
CN 23 Heilongjiang
CN 41 Henan
CN 42 Hubei
CN 43 Hunan
CN 32 Jiangsu
CN 36 Jiangxi
CN 22 Jilin
CN 21 Liaoning
CN 63 Qinghai
CN 61 Shaanxi
CN 37 Shandong
CN 14 Shanxi
CN 51 Sichuan
CN 71 Taiwan
CN 53 Yunnan
CN 33 Zhejiang
CN 45 Guangxi
CN 15 Nei Mongol
CN 64 Ningxia
CN 65 Xinjiang
CN 54 Xizang
CN 91 Xianggang (Hong Kong)
CN 92 Aomen (Macao)</code></pre>
<h2 id="如何使用-dcw-数据">如何使用 DCW 数据？</h2>
<p>GMT5 中，可以通过 <code>pscoast</code> 命令的 <code>-F</code> 选项调用 DCW 数据来绘制国界和省界，具体的下一篇再说。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[自定义 GMT 的 Logo]]></title>
      <url>http://seisman.info/customized-gmt-logo.html</url>
      <content type="html"><![CDATA[<h2 id="这篇博文想干什么">这篇博文想干什么？</h2>
<p>GMT 中使用 <code>-U</code> 选项可以给图加一个时间戳，如下图左图所示。</p>
<p>这篇博文的目的就是把左边的时间戳变成右边的时间戳。黑底白字的部分，我称之为 Logo。</p>
<div class="figure">
<img src="/images/2013111901.jpg">

</div>
<p>当初想要自定义 logo，是因为看到了 <a href="http://www.hinet.bosai.go.jp/" target="_blank" rel="external">Hi-net</a> 首页的地图中有自定义 logo 为 <code>Hi-net NIED</code> 觉得挺有意思，对于某些机构来说，加上一个个性化的 logo 应该也算是一种需求。</p>
<a id="more"></a>
<h2 id="理解原理">理解原理</h2>
<p>本文的内容基于 GMT5.1.0。写完本文之后，我因为没有自定义 logo 的需求了，所以本文在一段时间内应该不会再更新。不过本文介绍的方法应该可以很容易应用到更新版的 GMT5 以及之前的 GMT4 中。</p>
<h3 id="gmt_timestamp">gmt_timestamp</h3>
<h4 id="函数定义">函数定义</h4>
<p>以下代码来自于 <code>GMT-5.1.0/src/gmt_plot.c</code> ：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">gmt_timestamp</span> <span class="params">(struct GMT_CTRL *GMT, struct PSL_CTRL *PSL, <span class="keyword">double</span> x, <span class="keyword">double</span> y, <span class="keyword">unsigned</span> <span class="keyword">int</span> justify, <span class="keyword">char</span> *U_label)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">/* x, y = location of the time stamp box</span></div><div class="line">    * justify indicates the corner of the box that (x,y) refers to, see below</div><div class="line">    * U_label = label to be plotted to the right of the box</div><div class="line">    *</div><div class="line">    *   9        10       11</div><div class="line">    *   |------------------|</div><div class="line">    *   5         6        7</div><div class="line">    *   |------------------|</div><div class="line">    *   1         2        3</div><div class="line">    */</div><div class="line"></div><div class="line">    <span class="keyword">time_t</span> right_now;</div><div class="line">    <span class="keyword">char</span> label[GMT_LEN256] = &#123;<span class="string">""</span>&#125;, text[GMT_LEN256] = &#123;<span class="string">""</span>&#125;;</div><div class="line">    <span class="keyword">double</span> dim[<span class="number">3</span>] = &#123;<span class="number">0.365</span>, <span class="number">0.15</span>, <span class="number">0.032</span>&#125;;   <span class="comment">/* Predefined dimensions in inches */</span></div><div class="line">    <span class="keyword">double</span> unset_rgb[<span class="number">4</span>] = &#123;<span class="number">-1.0</span>, <span class="number">-1.0</span>, <span class="number">-1.0</span>, <span class="number">0.0</span>&#125;;</div><div class="line"></div><div class="line">    <span class="comment">/* Plot time string in format defined by format_time_stamp */</span></div><div class="line"></div><div class="line">    right_now = time ((<span class="keyword">time_t</span> *)<span class="number">0</span>);</div><div class="line">    strftime (text, <span class="keyword">sizeof</span>(text), GMT-&gt;current.setting.format_time_stamp, localtime (&amp;right_now));</div><div class="line">    <span class="built_in">sprintf</span> (label,<span class="string">"  %s  "</span>, text);</div><div class="line"></div><div class="line">    PSL_command (PSL,<span class="string">"%% Begin GMT time-stamp\nV\n"</span>);</div><div class="line">    PSL_setorigin (PSL, x, y, <span class="number">0.0</span>, PSL_FWD);</div><div class="line">    PSL_setlinewidth (PSL, <span class="number">0.25</span>);</div><div class="line">    PSL_setfont (PSL, GMT-&gt;current.setting.font_logo.id);</div><div class="line">    PSL_defunits (PSL,<span class="string">"PSL_g_w"</span>, dim[<span class="number">0</span>]);  <span class="comment">/* Size of the black [GMT] box */</span></div><div class="line">    PSL_defunits (PSL,<span class="string">"PSL_g_h"</span>, dim[<span class="number">1</span>]);</div><div class="line">    PSL_deftextdim (PSL,<span class="string">"PSL_b"</span>, <span class="number">8.0</span>, label);  <span class="comment">/* Size of the white [timestamp] box (use only length) */</span></div><div class="line"></div><div class="line">    <span class="comment">/* When justification is not BL (justify == 1), add some PostScript code to move to the</span></div><div class="line">    location where the lower left corner of the time stamp box is to be drawn */</div><div class="line"></div><div class="line">    <span class="keyword">switch</span> ((justify + <span class="number">3</span>) % <span class="number">4</span>) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>: <span class="comment">/* Center */</span></div><div class="line">            PSL_command (PSL,<span class="string">"PSL_g_w PSL_b_w add 2 div neg 0 T\n"</span>); <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="number">2</span>: <span class="comment">/* Right justify */</span></div><div class="line">            PSL_command (PSL,<span class="string">"PSL_g_w PSL_b_w add neg 0 T\n"</span>); <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">switch</span> (justify / <span class="number">4</span>) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>: <span class="comment">/* Middle */</span></div><div class="line">            PSL_command (PSL,<span class="string">"0 PSL_g_h 2 div neg T\n"</span>); <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="number">2</span>: <span class="comment">/* Top justify */</span></div><div class="line">            PSL_command (PSL,<span class="string">"0 PSL_g_h neg T\n"</span>); <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/* Now draw black box with GMT logo, and white box with time stamp */</span></div><div class="line"></div><div class="line">    PSL_setfill (PSL, GMT-&gt;current.setting.map_default_pen.rgb, <span class="literal">true</span>);</div><div class="line">    PSL_plotsymbol (PSL, <span class="number">0.5</span>*dim[<span class="number">0</span>], <span class="number">0.5</span>*dim[<span class="number">1</span>], dim, PSL_RECT);</div><div class="line">    PSL_plotcolorimage (PSL, <span class="number">0.0</span>, <span class="number">0.0</span>, dim[<span class="number">0</span>], dim[<span class="number">1</span>], PSL_BL, GMT_glyph, <span class="number">220</span>, <span class="number">90</span>, <span class="number">1</span>);</div><div class="line">    PSL_setfill (PSL, GMT-&gt;PSL-&gt;init.page_rgb, <span class="literal">true</span>);</div><div class="line">    PSL_command (PSL,<span class="string">"PSL_g_h PSL_b_w PSL_g_w 0 Sb\n"</span>);</div><div class="line">    PSL_plottext (PSL, dim[<span class="number">0</span>], dim[<span class="number">2</span>], <span class="number">8.0</span>, label, <span class="number">0.0</span>, <span class="number">1</span>, <span class="number">0</span>);</div><div class="line"></div><div class="line">    <span class="comment">/* Optionally, add additional label to the right of the box */</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> (U_label &amp;&amp; U_label[<span class="number">0</span>]) &#123;</div><div class="line">        <span class="built_in">sprintf</span> (label,<span class="string">"   %s"</span>, U_label);</div><div class="line">        PSL_plottext (PSL, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">-7.0</span>, label, <span class="number">0.0</span>, <span class="number">1</span>, <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    PSL_command (PSL,<span class="string">"U\n%% End GMT time-stamp\n"</span>);</div><div class="line"></div><div class="line">    <span class="comment">/* Reset fill style to empty and no outline and reset linewidth */</span></div><div class="line">    PSL_setfill (PSL, unset_rgb, <span class="literal">false</span>);</div><div class="line">    PSL-&gt;current.linewidth = <span class="number">-1.0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="源码说明">源码说明</h4>
<ul>
<li>L16：定义数组 dim，其中 <code>dim[0]</code> 代表时间戳黑色部分的宽度， <code>dim[1]</code> 代表黑色部分的高度， <code>dim[2]</code> 没有用；其单位为英寸；</li>
<li>L25：开始向 PS 文件中写入代码；</li>
<li>L26-L31：一些设置；</li>
<li>L51：设置填充色为黑色；</li>
<li>L52：绘制矩形；</li>
<li>L53：将 <code>GMT_glyph</code> 写入矩形中；这个是重点！</li>
<li>L54-L56：写入时间；</li>
<li>L60-L63：写入 command 或者 label；</li>
<li>L65：结束；</li>
</ul>
<h3 id="gmt_glyph">GMT_glyph</h3>
<p><code>GMT_glyph</code> 的定义位于 <code>gmt_plot.c</code> 中：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* Get bitmapped 600 dpi GMT glyph for timestamp.  The glyph is a 90 x 220 pixel 1-bit image</span></div><div class="line">   and it is here represented as ceil (220 / 8) * 90 = 2520 bytes */</div><div class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> GMT_glyph[<span class="number">2520</span>]=&#123;</div><div class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</div><div class="line">……</div><div class="line"><span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>其解释表明，GMT 的 logo 是个 dpi=600 的位图，位图像素为 220×90，即 dim[0]=220/600=0.366=&gt; 0.365 inch，dim[1]=90/600=0.15 inch。</p>
<p>位图为 1-bit 图，即黑白图，0 表示白色，1 表示黑色。由于 GMT 的一些内部设置，实际上这里 0 表示黑色，1 表示白色。每个 char 型为 8bit，即一个 char 可以用于存储 8 个像素的信息，比如 0x0f 的二进制表示为 00001111，即表示这 8 个点中，前四个为黑色，后四个为白色。</p>
<p>因而想要修改 GMT 位图的核心是创建一个 <code>GMT_glyph</code> 数组！</p>
<h3 id="psl_plotcolorimage">PSL_plotcolorimage</h3>
<p><code>PSL_plotcolorimage</code> 的函数声明如下，取自 <code>GMT5.1.0/src/pslib.c</code> ：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">PSL_plotcolorimage</span> <span class="params">(struct PSL_CTRL *PSL, <span class="keyword">double</span> x, <span class="keyword">double</span> y, <span class="keyword">double</span> xsize, <span class="keyword">double</span> ysize, <span class="keyword">int</span> justify, <span class="keyword">unsigned</span> <span class="keyword">char</span> *buffer, <span class="keyword">int</span> nx, <span class="keyword">int</span> ny, <span class="keyword">int</span> nbits)</span></span>;</div><div class="line"><span class="comment">/* Plots a 24-bit color image in Grayscale, RGB or CMYK mode.</span></div><div class="line"> * When the number of unique colors does not exceed PSL_MAX_COLORS, the routine will index</div><div class="line"> * 24-bit RGB images and then attempt to reduce the depth of the indexed image to 1, 2 or 4 bits.</div><div class="line"> *</div><div class="line"> * x, y     : lower left position of image in plot units</div><div class="line"> * xsize, ysize : image size in units (if 0, adjust to keep the original aspect ratio)</div><div class="line"> * justify  : indicates what corner x,y refers to (see graphic below)</div><div class="line"> * buffer   : contains the bytes for the image</div><div class="line"> * nx, ny   : pixel dimension</div><div class="line"> * nbits    : number of bits per pixel (1, 2, 4, 8, 24)</div><div class="line"> *</div><div class="line"> * Special cases:</div><div class="line"> * nx &lt;0   : 8- or 24-bit image contains a color mask (first 1 or 3 bytes)</div><div class="line"> * nbits &lt;0    :"Hardware" interpolation requested</div><div class="line"> *</div><div class="line"> *   9       10      11</div><div class="line"> *   |----------------|</div><div class="line"> *   5    &lt;image&gt;     7</div><div class="line"> *   |----------------|</div><div class="line"> *   1       2        3</div><div class="line"> */</div></pre></td></tr></table></figure>
<p>从函数参数的解释中可以看出，nbits 代表了一个像素所需要的位数，nbits 可以取 1、2、4、8、24；buffer 即数组 <code>GMT_glyph</code>；</p>
<h2 id="具体步骤">具体步骤</h2>
<h3 id="建立位图文件">建立位图文件</h3>
<p>直接利用 GIMP 创建位图文件。</p>
<p>打开 GIMP，“文件 -&gt; 新建”，设置宽度 “520”，高度 “90”，分辨率 “600”，色彩空间为灰色，填充前景色。</p>
<div class="figure">
<img src="/images/2013111902.jpg">

</div>
<p>输入文件，字体 “STIXGeneral Bold Italic”，大小为 “95”，居中，上下留白 2 像素，左右留白 12 像素；</p>
<div class="figure">
<img src="/images/2013111903.jpg">

</div>
<p>保存为 Sun Raster 格式，文件名为 raster.im8，提示需要导出，数据格式选择 ** 标准 **。</p>
<h3 id="将-sun-raster-文件转换为-xbm-格式">将 Sun Raster 文件转换为 xbm 格式</h3>
<p>xbm 格式类似于 C 语言的格式，也就是 <code>GMT_glyph</code> 数组所需要的。</p>
<ol style="list-style-type: decimal">
<li>执行 <code>raster2xbm</code>，(代码在这里 <a href="http://seisman.qiniudn.com/downloads/raster2xbm.tar.gz" target="_blank" rel="external">下载</a>)，将输出保存到 <code>gmt_plot.c</code> 中的 char 数组 <code>GMT_glyph</code> 中。</li>
<li>将 <code>unsigned char GMT_glyph[2520]</code> 改成 <code>unsigned char GMT_glyph[46800]</code> ，其中 46800=520*90；</li>
<li>gmt_timestamp 中 <code>double dim[3] = {0.365, 0.15, 0.032};</code> 改成 <code>double dim[3] = {0.867, 0.15, 0.032};</code></li>
<li>gmt_timestamp 中 <code>PSL_plotcolorimage (PSL, 0.0, 0.0, dim[0], dim[1], PSL_BL, GMT_glyph, 220, 90, 1);</code> 改成 <code>PSL_plotcolorimage (PSL, 0.0, 0.0, dim[0], dim[1], PSL_BL, GMT_glyph, 520, 90, 8);</code></li>
</ol>
<h3 id="重新编译-gmt">重新编译 GMT</h3>
<p>修改完代码后，需要重新编译 GMT。理论上，上面所做的改动仅会影响到 - U 选项，而不会影响到其他选项的功能。</p>
<h2 id="一些说明">一些说明</h2>
<ul>
<li>这里改变的 Logo 的宽度而没有改变 Logo 的高度，主要是因为 Logo 与后面的时间戳共用一个高度，修改高度之后可能很多东西都要改，这样比较麻烦；</li>
<li>GMT 原始的 Logo 为黑白 1-bit 图，精度稍显不够，因而这里使用 8-bit 灰度图；当然也可以使用彩色图；</li>
<li>GIMP 可以直接保存为 xbm 格式的 1-bit 图，之所以不使用，一方面是因为 1-bit 精度不够，另一方面是 GIMP 保存的 xbm 格式的数据的字节序与本机的字节序不同，导致 Logo 相邻两列或四列的数据相互交换位置。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> 图像 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Perl 如何找出两个数组的交集、并集]]></title>
      <url>http://seisman.info/find-intersection-and-difference-of-two-arrays.html</url>
      <content type="html"><![CDATA[<p>本文整理自 <a href="http://perldoc.perl.org/perlfaq4.html#How-do-I-compute-the-difference-of-two-arrays%3f-How-do-I-compute-the-intersection-of-two-arrays%3f" target="_blank" rel="external">perlfaq4</a>：</p>
<p>Q：如何计算两个数组的差异、交集以及并集？</p>
<p>A：使用 Hash。</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">my</span> (@union, @intersection, @difference);</div><div class="line"><span class="keyword">my</span> %count = ();</div><div class="line"><span class="keyword">foreach</span> <span class="keyword">my</span> $element (@array1, @array2) &#123;</div><div class="line">    $count&#123;$element&#125;++;</div><div class="line">&#125;</div><div class="line"><span class="keyword">foreach</span> <span class="keyword">my</span> $element (<span class="keyword">keys</span> %count) &#123;</div><div class="line">    <span class="keyword">push</span> @union, $element;</div><div class="line">    <span class="keyword">push</span> @&#123;$count&#123;$element&#125; &gt; <span class="number">1</span> ? \@intersection : \@difference &#125;, $element;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最终得到 <code>@union</code> 为两个数组的并集， <code>@intersection</code> 为两个数组的交集， <code>@difference</code> 为所有只在一个数组中出现的元素。</p>
<p>PS：这个方法要求每个数组内部元素不相同！</p>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Perl </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SAC 容易忽略的一个陷阱]]></title>
      <url>http://seisman.info/traps-of-sac.html</url>
      <content type="html"><![CDATA[<p>事情大概是这样的：当前文件夹下有很多个 SAC 文件（约 700 个，没有超过 SAC 一次只能处理 1000 个数据的限制），需要对 SAC 文件进行简单的滤波处理，然后保存。</p>
<a id="more"></a>
<p>PS：SAC 版本为 101.5c。</p>
<p>在 Perl 脚本中调用 SAC，一开始是这样写的：</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env perl</span></div><div class="line"><span class="keyword">use</span> warnings;</div><div class="line"><span class="keyword">use</span> strict;</div><div class="line"></div><div class="line"><span class="keyword">my</span> @sacfiles = <span class="keyword">glob</span> <span class="string">"N.*.U"</span>;</div><div class="line"></div><div class="line"><span class="keyword">open</span>(SAC,<span class="string">"| sac"</span>);</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"r @sacfiles \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"rmean; rtr; taper \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"bp c 1 3 n 2 p 1 \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"w over \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"quit \n"</span>;</div><div class="line"><span class="keyword">close</span>(SAC);</div></pre></td></tr></table></figure>
<p>第 5 行通过 <code>glob</code> 通配当前目录下的所有文件名符合 <code>N.*.U</code> 的文件。第 7-13 行，打开 SAC 进行数据处理，然后关闭 SAC。</p>
<p>这个脚本看似没有问题，但是经过比对就会发现，只有部分数据被正确地滤波了，所以 <strong>这个脚本是错误的！</strong></p>
<p>为了验证究竟是哪里的问题，将上面的脚本修改一下，如下：</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env perl</span></div><div class="line"><span class="keyword">use</span> warnings;</div><div class="line"><span class="keyword">use</span> strict;</div><div class="line"></div><div class="line"><span class="keyword">my</span> @sacfiles = <span class="keyword">glob</span> <span class="string">"N.*.U"</span>;</div><div class="line"></div><div class="line"><span class="keyword">open</span>(SAC,<span class="string">"| sac"</span>);</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"echo on errors warnings output commands macros processed \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"r @sacfiles \n"</span>;</div><div class="line"><span class="keyword">print</span> <span class="string">"read @sacfiles \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"rmean; rtr; taper \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"bp c 1 3 n 2 p 1 \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"w over \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"quit \n"</span>;</div><div class="line"><span class="keyword">close</span>(SAC);</div></pre></td></tr></table></figure>
<p>脚本的第 8 行 <code>echo</code> 是 SAC 的一个命令，这个命令将显示全部 “错误、警告、输出、命令、宏、 处理后的命令”，因而可以用来监视 SAC 究竟做了什么。第 10 行 <code>print &quot;read @sacfiles \n&quot;;</code> 用于验证 Perl 传递给 SAC 的究竟是什么， 这里使用 <code>read</code> 而不是 <code>r</code> 是为了区分 Perl 的输出和 SAC 的输出。</p>
<p>终端显示结果如下:</p>
<pre><code>read N.AGMH.U N.AGWH.U N.AHIH.U N.AIOH.U N.AIRH.U N.AJSH.U N.AKIH.U
N.AKNH.U N.AKSH.U N.AMAH.U N.AMNH.U N.AMZH.U N.ANIH.U N.ANJH.U N.ANNH.U
N.ANSH.U N.AOMH.U N.ARIH.U N.ARKH.U N.ASAH.U N.ASBH.U N.ASHH.U N.ASKH.U
N.ASNH.U N.ASRH.U N.ASSH.U N.ASUH.U N.ASVH.U N.ATDH.U N.ATGH.U N.ATKH.U
N.ATMH.U N.AWNH.U N.AYEH.U N.AYKH.U N.AYWH.U N.BEEH.U N.BEWH.U N.BFEH.U
N.BFNH.U N.BFWH.U N.BHRH.U N.BKEH.U N.BKWH.U N.BREH.U N.BRWH.U N.BSEH.U
N.BTOH.U N.BZNH.U N.CBAH.U N.CCNH.U N.CH2H.U N.CHKH.U N.CHNH.U N.CHZH.U
N.CKRH.U N.CRNH.U N.CTSH.U N.CZEH.U N.DGOH.U N.DMOH.U N.DWAH.U N.EBTH.U
N.EDSH.U N.EIHH.U N.FBRH.U N.FCHH.U N.FGNH.U N.FGSH.U N.FGTH.U N.FJEH.U
N.FJIH.U N.FJOH.U N.FKCH.U N.FKRH.U N.FKSH.U N.FKUH.U N.FMIH.U N.FRKH.U
N.FRNH.U N.FSTH.U N.FSWH.U N.FUTH.U N.GEIH.U N.GENH.U N.GHKH.U N.GJOH.U
N.GKSH.U N.GNOH.U N.GOTH.U N.GR2H.U N.GSIH.U N.GZNH.U N.HAGH.U N.HASH.U
N.HAZH.U N.HBAH.U N.HBTH.U N.HDKH.U N.HGAH.U N.HGIH.U N.HH2H.U N.HHEH.U
N.HHIH.U N.HHNH.U N.HHRH.U N.HIKH.U N.HIMH.U N.HINH.U N.HIRH.U N.HISH.U
N.HIYH.U N.HKBH.U N.HKSH.U N.HKTH.U N.HMAH.U N.HMMH.U N.HMNH.U N.HMSH.U
N.HMTH.U N.HNBH.U N.HNKH.U N.HNOH.U N.HNRH.U N.HNSH.U N.HNZH.U N.HOBH.U
N.HOCH.U N.HOFH.U N.HOJH.U N.HONH.U N.HOSH.U N.HOTH.U N.HOUH.U N.HRDH.U
N.HRKH.U N.HRMH.U N.HRNH.U N.HRSH.U N.HRYH.U N.HSEH.U N.HSFH.U N.HSKH.U
N.HSMH.U N.HTAH.U N.HTBH.U N.HTKH.U N.HWSH.U N.HYGH.U N.HYKH.U N.HYNH.U
N.HYOH.U N.HYSH.U N.IAMH.U N.ICEH.U N.ICHH.U N.ICWH.U N.IGWH.U N.IHEH.U
N.IICH.U N.IKIH.U N.IKKH.U N.IKNH.U N.IKSH.U N.IKTH.U N.IKWH.U N.IMIH.U
N.IMRH.U N.INAH.U N.INEH.U N.INHH.U N.INMH.U N.INOH.U N.INSH.U N.INWH.U
N.ISGH.U N.ISSH.U N.ITDH.U N.ITHH.U N.IWAH.U N.IWEH.U N.IWNH.U N.IWSH.U
N.IWTH.U N.IWWH.U N.IWZH.U N.IZMH.U N.IZSH.U N.IZUH.U N.JHKH.U N.JNSH.U
N.JUOH.U N.KACH.U N.KADH.U N.KAHH.U N.KAIH.U N.KAKH.U N.KAMH.U N.KANH.U
N.KASH.U N.KAWH.U N.KAYH.U N.KDIH.U N.KGIH.U N.KGNH.U N.KGRH.U N.KGSH.U
N.KHEH.U N.KHKH.U N.KHOH.U N.KHUH.U N.KHYH.U N.KIBH.U N.KIDH.U N.KIGH.U
N.KIKH.U N.KIWH.U N.KIYH.U N.KIZH.U N.KJNH.U N.KJSH.U N.KKAH.U N.KKCH.U
N.KKEH.U N.KKGH.U N.KKIH.U N.KKWH.U N.KKYH.U N.KMAH.U N.KMBH.U N.KMDH.U
N.KMEH.U N.KMGH.U N.KMHH.U N.KMIH.U N.KMKH.U N.KMMH.U N.KMNH.U N.KMOH.U
N.KMWH.U N.KMYH.U N.KNBH.U N.KNEH.U N.KNGH.U N.KNHH.U N.KNIH.U N.KNNH.U
N.KNSH.U N.KNZH.U N.KOKH.U N.KORH.U N.KOSH.U N.KOTH.U N.KRHH.U N.KRIH.U
N.KRMH.U N.KRTH.U N.KRYH.U N.KSAH.U N.KSBH.U N.KSGH.U N.KSIH.U N.KSMH.U
N.KSOH.U N.KT2H.U N.KTDH.U N.KTGH.U N.KTMH.U N.KTNH.U N.KTRH.U N.KTWH.U
N.KUCH.U N.KUMH.U N.KURH.U N.KWAH.U N.KWBH.U N.KWHH.U N.KWKH.U N.KWMH.U
N.KWNH.U N.KWSH.U N.KWTH.U N.KWZH.U N.KYAH.U N.KYDH.U N.KYEH.U N.KYMH.U
N.KYOH.U N.KYSH.U N.KYWH.U N.KZMH.U N.KZNH.U N.MABH.U N.MAKH.U N.MASH.U
N.MBEH.U N.MBUH.U N.MBWH.U N.MCTH.U N.MGMH.U N.MGWH.U N.MHRH.U N.MHSH.U
N.MICH.U N.MIEH.U N.MIGH.U N.MIHH.U N.MIKH.U N.MINH.U N.MISH.U N.MITH.U
N.MIZH.U N.MJNH.U N.MJSH.U N.MKGH.U N.MKIH.U N.MKJH.U N.MKMH.U N.MKOH.U
N.MKRH.U N.MKWH.U N.MMBH.U N.MMKH.U N.MMOH.U N.MMRH.U N.MMTH.U N.MNAH.U
N.MNEH.U N.MNKH.U N.MNMH.U N.MNOH.U N.MOKH.U N.MORH.U N.MOTH.U N.MRMH.U
N.MROH.U N.MRRH.U N.MRUH.U N.MS2H.U N.MSAH.U N.MSFH.U N.MSIH.U N.MSNH.U
N.MSTH.U N.MTDH.U N.MTKH.U N.MTMH.U N.MTOH.U N.MTYH.U N.MUIH.U N.MURH.U
N.MYJH.U N.MYKH.U N.MYMH.U N.MZEH.U N.MZKH.U N.NAGH.U N.NANH.U N.NAWH.U
N.NAZH.U N.NCNH.U N.NCPH.U N.NDGH.U N.NEOH.U N.NFRH.U N.NGIH.U N.NGKH.U
N.NGOH.U N.NGRH.U N.NGSH.U N.NGTH.U N.NGUH.U N.NGWH.U N.NHEH.U N.NHJH.U
N.NHWH.U N.NITH.U N.NJMH.U N.NKEH.U N.NKMH.U N.NKNH.U N.NKOH.U N.NKTH.U
N.NKWH.U N.NMEH.U N.NMKH.U N.NMNH.U N.NMTH.U N.NNMH.U N.NOBH.U N.NRAH.U
N.NRKH.U N.NRTH.U N.NS2H.U N.NSBH.U N.NSEH.U N.NSHH.U N.NSMH.U N.NSNH.U
N.NSSH.U N.NSTH.U N.NTBH.U N.NTGH.U N.NTHH.U N.NUKH.U N.NUMH.U N.NWAH.U
N.NYAH.U N.NYOH.U N.NYRH.U N.NZWH.U N.OBMH.U N.ODTH.U N.ODWH.U N.OGCH.U
N.OGNH.U N.OGOH.U N.OHAH.U N.OHCH.U N.OHRH.U N.OHTH.U N.OIWH.U N.OKCH.U
N.OKEH.U N.OKMH.U N.OKYH.U N.OKZH.U N.OM2H.U N.OMMH.U N.OMRH.U N.ONDH.U
N.ONIH.U N.ONPH.U N.OOCH.U N.OOKH.U N.OOMH.U N.OOTH.U N.OOZH.U N.OPEH.U
N.OPWH.U N.OREH.U N.ORWH.U N.OSUH.U N.OTAH.U N.OTOH.U N.OTUH.U N.OTWH.U
N.OUMH.U N.OWNH.U N.OWSH.U N.OYMH.U N.RBSH.U N.RKBH.U N.RKSH.U N.RNKH.U
N.RZTH.U N.SADH.U N.SAIH.U N.SAKH.U N.SAMH.U N.SATH.U N.SBAH.U N.SBKH.U
N.SBNH.U N.SBSH.U N.SCNH.U N.SCSH.U N.SDAH.U N.SDMH.U N.SDWH.U N.SENH.U
N.SETH.U N.SFNH.U N.SFSH.U N.SGOH.U N.SGRH.U N.SGUH.U N.SGWH.U N.SHGH.U
N.SHJH.U N.SHKH.U N.SHMH.U N.SHZH.U N.SIKH.U N.SINH.U N.SISH.U N.SJOH.U
N.SKGH.U N.SKIH.U N.SKNH.U N.SKSH.U N.SKUH.U N.SKWH.U N.SMAH.U N.SMGH.U
N.SMMH.U N.SMNH.U N.SMPH.U N.SMSH.U N.SMTH.U N.SNDH.U N.SNIH.U N.SNNH.U
N.SNSH.U N.SNTH.U N.SNWH.U N.SOIH.U N.SOJH.U N.SONH.U N.SOSH.U N.SRIH.U
N.SRMH.U N.SROH.U N.SRUH.U N.SRWH.U N.SSKH.U N.SSMH.U N.SSRH.U N.SSSH.U
N.SSTH.U N.SSWH.U N.SSYH.U N.ST1H.U N.ST2H.U N.ST3H.U N.ST4H.U N.ST5H.U
N.ST6H.U N.STDH.U N.STKH.U N.STNH.U N.STRH.U N.STSH.U N.SUGH.U N.SUKH.U
N.SUZH.U N.SWEH.U N.SWWH.U N.SYKH.U N.SYNH.U N.SYOH.U N.SYSH.U N.SYTH.U
N.SZGH.U N.SZJH.U N.SZKH.U N.SZNH.U N.SZUH.U N.SZWH.U N.TAGH.U N.TAJH.U
N.TAKH.U N.TAMH.U N.TARH.U N.TAYH.U N.TBEH.U N.TBRH.U N.TBTH.U N.TBYH.U
N.TCKH.U N.TDEH.U N.TDMH.U N.TDOH.U N.TGIH.U N.TGKH.U N.TGOH.U N.TGUH.U
N.THGH.U N.THNH.U N.THTH.U N.TISH.U N.TJOH.U N.TJRH.U N.TKBH.U N.TKEH.U
N.TKGH.U N.TKHH.U N.TKIH.U N.TKJH.U N.TKKH.U N.TKNH.U N.TKRH.U N.TKSH.U
N.TKTH.U N.TKUH.U N.TKWH.U N.TMAH.U N.TMGH.U N.TMNH.U N.TMOH.U N.TMYH.U
N.TNEH.U N.TNMH.U N.TOBH.U N.TOGH.U N.TOHH.U N.TOIH.U N.TOKH.U N.TOMH.U
N.TOUH.U N.TOWH.U N.TOYH.U N.TREH.U N.TRGH.U N.TRIH.U N.TROH.U N.TRSH.U
N.TRUH.U N.TRWH.U N.TSKH.U N.TSMH.U N.TSOH.U N.TSRH.U N.TSSH.U N.TSTH.U
N.TSUH.U N.TSYH.U N.TT2H.U N.TTAH.U N.TTKH.U N.TTNH.U N.TU2H.U N.TUMH.U
N.TUNH.U N.TUSH.U N.TWAH.U N.TWEH.U N.TWWH.U N.TY2H.U N.TYEH.U N.TYHH.U
N.TYMH.U N.TYOH.U N.TYRH.U N.TYTH.U N.TYUH.U N.TZWH.U N.UBEH.U N.UCNH.U
N.UCUH.U N.UJEH.U N.UKHH.U N.UMEH.U N.UMIH.U N.UMWH.U N.UMYH.U N.UNNH.U
N.UNSH.U N.UOZH.U N.URSH.U N.USDH.U N.UUMH.U N.UWAH.U N.UWEH.U N.WATH.U
N.WKMH.U N.WKYH.U N.WNEH.U N.WNNH.U N.WNWH.U N.WSMH.U N.YABH.U N.YBKH.U
N.YBNH.U N.YBRH.U N.YFTH.U N.YGDH.U N.YGNH.U N.YGTH.U N.YHBH.U N.YITH.U
N.YJMH.U N.YKHH.U N.YKIH.U N.YKWH.U N.YM2H.U N.YMAH.U N.YMDH.U N.YMGH.U
N.YMIH.U N.YMMH.U N.YMSH.U N.YMTH.U N.YNDH.U N.YNTH.U N.YNZH.U N.YOKH.U
N.YOTH.U N.YROH.U N.YSDH.U N.YSHH.U N.YSKH.U N.YTOH.U N.YUBH.U N.YUZH.U
N.YWTH.U N.YZEH.U N.YZWH.U

r N.AGMH.U N.AGWH.U N.AHIH.U N.AIOH.U N.AIRH.U N.AJSH.U N.AKIH.U
N.AKNH.U N.AKSH.U N.AMAH.U N.AMNH.U N.AMZH.U N.ANIH.U N.ANJH.U N.ANNH.U
N.ANSH.U N.AOMH.U N.ARIH.U N.ARKH.U N.ASAH.U N.ASBH.U N.ASHH.U N.ASKH.U
N.ASNH.U N.ASRH.U N.ASSH.U N.ASUH.U N.ASVH.U N.ATDH.U N.ATGH.U N.ATKH.U
N.ATMH.U N.AWNH.U N.AYEH.U N.AYKH.U N.AYWH.U N.BEEH.U N.BEWH.U N.BFEH.U
N.BFNH.U N.BFWH.U N.BHRH.U N.BKEH.U N.BKWH.U N.BREH.U N.BRWH.U N.BSEH.U
N.BTOH.U N.BZNH.U N.CBAH.U N.CCNH.U N.CH2H.U N.CHKH.U N.CHNH.U N.CHZH.U
N.CKRH.U N.CRNH.U N.CTSH.U N.CZEH.U N.DGOH.U N.DMOH.U N.DWAH.U N.EBTH.U
N.EDSH.U N.EIHH.U N.FBRH.U N.FCHH.U N.FGNH.U N.FGSH.U N.FGTH.U N.FJEH.U
N.FJIH.U N.FJOH.U N.FKCH.U N.FKRH.U N.FKSH.U N.FKUH.U N.FMIH.U N.FRKH.U
N.FRNH.U N.FSTH.U N.FSWH.U N.FUTH.U N.GEIH.U N.GENH.U N.GHKH.U N.GJOH.U
N.GKSH.U N.GNOH.U N.GOTH.U N.GR2H.U N.GSIH.U N.GZNH.U N.HAGH.U N.HASH.U
N.HAZH.U N.HBAH.U N.HBTH.U N.HDKH.U N.HGAH.U N.HGIH.U N.HH2H.U N.HHEH.U
N.HHIH.U N.HHNH.U N.HHRH.U N.HIKH.U N.HIMH.U N.HINH.U N.HIRH.U N.HISH.U
rmean; rtr; taper
bp c 1 3 n 2 p 1
w over
quit</code></pre>
<p>可以看到：第 1 行是 Perl 的输出，也就是 Perl 的 print 语句传递给 SAC 句柄的内容，其 正确的传递了 700 多个文件的文件名。第 3 行之后为 SAC 的输出，可以看到第 3 行的内容与 第 1 行内容类似，但是明显短了非常多。这意味着 <strong>部分内容在由 Perl 传递给 SAC 之后丢失了</strong>。</p>
<p>可以比较容易地发现，SAC 显示的 <code>read</code> 语句长度为 1002 字符，大概就是 1000 字符，所以猜测是 SAC 在读取命令行的内容时，其字符串数组的长度限制在 1000 字符，进而导致 Perl 传递进来 700 多个文件名，实际上 SAC 只处理了 120 个（120 个文件名基本是 1000 字符）。</p>
<p>查看 SAC 源码可以发现，SAC 中用字符数组 <code>kline[MCMSG+1]</code> 来处理命令行输入，其中 <code>MCMSG</code> 的值为 1001，即 <code>kline</code> 的有效长度仅仅是 1001，加上的 1 是为了处理 C 语言的 <code>'\0'</code> 。</p>
<p>由于 SAC 的确处理了前 1000 个字符，即前 120 个文件，所以整个过程都不会报错！所以这个 Bug 很难察觉！</p>
<p>几个可以避免该问题的 Perl 脚本：</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env perl</span></div><div class="line"><span class="keyword">use</span> warnings;</div><div class="line"><span class="keyword">use</span> strict;</div><div class="line"></div><div class="line"><span class="keyword">open</span>(SAC,<span class="string">"| sac"</span>);</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"r N.*.U \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"rmean; rtr; taper \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"bp c 1 3 n 2 p 1 \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"w over \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"quit \n"</span>;</div><div class="line"><span class="keyword">close</span>(SAC);</div></pre></td></tr></table></figure>
<p>这个脚本没有问题，因为这里的通配符 <code>N.*.U</code> 是由 SAC 去解释而不是由 Bash 去解释，所以 SAC 接收到的命令行长度只有不到 10 个字符。但是这个脚本不够通用，因为有些时候需要处理的文件无法用通配符表示，比如要处理所有震中距在 10 到 30 度以内的文件。</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env perl</span></div><div class="line"><span class="keyword">use</span> warnings;</div><div class="line"><span class="keyword">use</span> strict;</div><div class="line"></div><div class="line"><span class="keyword">my</span> @sacfiles = <span class="keyword">glob</span> <span class="string">"N.*.U"</span>;</div><div class="line"></div><div class="line"><span class="keyword">open</span>(SAC,<span class="string">"| sac"</span>);</div><div class="line"><span class="keyword">foreach</span> (@sacfiles)&#123;</div><div class="line">   <span class="keyword">print</span> SAC <span class="string">"r $_ \n"</span>;</div><div class="line">   <span class="keyword">print</span> SAC <span class="string">"rmean; rtr; taper \n"</span>;</div><div class="line">   <span class="keyword">print</span> SAC <span class="string">"bp c 1 3 n 2 p 1 \n"</span>;</div><div class="line">   <span class="keyword">print</span> SAC <span class="string">"w over \n"</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"quit \n"</span>;</div><div class="line"><span class="keyword">close</span>(SAC);</div></pre></td></tr></table></figure>
<p>这个脚本还是继续使用 Perl 的 <code>glob</code>，然后使用 <code>foreach</code> 循环，每次只处理一个文件， 也不会出现问题，速度相对上一个版本可能会慢一些，不过有时候可能就需要这样做。</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env perl</span></div><div class="line"><span class="keyword">use</span> warnings;</div><div class="line"><span class="keyword">use</span> strict;</div><div class="line"></div><div class="line"><span class="keyword">my</span> @sacfiles = <span class="keyword">glob</span> <span class="string">"N.*.U"</span>;</div><div class="line"></div><div class="line"><span class="keyword">open</span>(SAC,<span class="string">"| sac"</span>);</div><div class="line"><span class="keyword">foreach</span> (@sacfiles)&#123;</div><div class="line">   <span class="keyword">print</span> SAC <span class="string">"r more $_ \n"</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"rmean; rtr; taper \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"bp c 1 3 n 2 p 1 \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"w over \n"</span>;</div><div class="line"><span class="keyword">print</span> SAC <span class="string">"quit \n"</span>;</div><div class="line"><span class="keyword">close</span>(SAC);</div></pre></td></tr></table></figure>
<p>该脚本使用 <code>foreach</code> 循环，不断读入更多的文件，然后一次性进行数据处理，相对于上一个脚本而言，速度要快很多。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-11-17：初稿；</li>
<li>2014-04-18：根据 SAC 源码确认了 SAC 能处理的命令行长度为 1000 字符；</li>
<li>2014-05-19：增加了第三个可以避免该问题的脚本；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SAC技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[判断字节序的多种方法]]></title>
      <url>http://seisman.info/linux-endian.html</url>
      <content type="html"><![CDATA[<p>本文整理自： <a href="http://serverfault.com/questions/163487/" class="uri" target="_blank" rel="external">http://serverfault.com/questions/163487/</a></p>
<p>直接查看系统文件:</p>
<pre><code>lscpu | grep -i byte</code></pre>
<a id="more"></a>
<p>Bash 版:</p>
<pre><code>echo -n I | od -to2 | head -n1 | cut -f2 -d&quot; &quot; | cut -c6</code></pre>
<p>若输出为 1 则为 Little Endian，若输出为 0 则为 Big Endian。</p>
<p>为了适应不同操作系统的需求，还有其他各种变种</p>
<pre><code>echo I | tr -d [:space:] | od -to2 | head -n1 | awk &#39;{print $2}&#39; | cut -c6

echo -n I | od -to2 | awk &#39;{print substr($2,6,1); exit}&#39;

echo -n I | hexdump -o | awk &#39;{print substr($2,6,1); exit}&#39;</code></pre>
<p>Python 一行命令版</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -c <span class="string">"import sys;print(0 if sys.byteorder=='big'else 1)"</span></div></pre></td></tr></table></figure>
<p>Python 脚本版</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack</div><div class="line"><span class="keyword">if</span> pack(<span class="string">'@h'</span>, <span class="number">1</span>) == pack(<span class="string">'&lt;h'</span>, <span class="number">1</span>):</div><div class="line">    <span class="keyword">print</span> <span class="string">"Little Endian"</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="keyword">print</span> <span class="string">"Big Endian"</span></div></pre></td></tr></table></figure>
<p>Jython 脚本版</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> java.lang <span class="keyword">import</span> System</div><div class="line"><span class="keyword">for</span> property, value <span class="keyword">in</span> dict(System.getProperties()).items():</div><div class="line">    <span class="keyword">if</span> property.endswith(<span class="string">'cpu.endian'</span>):</div><div class="line">        <span class="keyword">return</span> value</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> endian </tag>
            
            <tag> Bash </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT5 的图层透明效果]]></title>
      <url>http://seisman.info/gmt5-transparency.html</url>
      <content type="html"><![CDATA[<p>设置图层的透明度，大概是 GMT5 新增的绘图功能中最大的一个亮点。</p>
<a id="more"></a>
<h2 id="t-选项">-t 选项</h2>
<p><code>-t</code> 是一个 GMT5 通用选项，用于设置图层透明度，其用法很简单。 <code>-t&lt;trans&gt;</code> ，其中 <code>&lt;trans&gt;</code> 可以取 0-100 的值，0 代表完全不透明，100 代表完全透明。需要注意的是 PS 是不支持透明特性的，透明的效果只能在 PDF 中看到。</p>
<h2 id="一个例子">一个例子</h2>
<p>这个脚本严格遵循 GMT5 的语法。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=g</div><div class="line">J=H20c</div><div class="line">PS=trans.ps</div><div class="line"></div><div class="line"><span class="comment"># 打开 GMT5</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -K -UBL/0/0 &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制海岸线</span></div><div class="line">gmt pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Bpx60 -W1/0.2p -N1 -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># 绘制第一个不透明矩形框</span></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -W1p -L -Gred -K -O &lt;&lt;EOF&gt;&gt; <span class="variable">$PS</span></div><div class="line">100 -20</div><div class="line">100 20</div><div class="line">140 20</div><div class="line">140 -20</div><div class="line">EOF</div><div class="line"></div><div class="line"><span class="comment"># 绘制第二个透明矩形框</span></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -W1p -L -Gred -t60 -K -O &lt;&lt;EOF&gt;&gt; <span class="variable">$PS</span></div><div class="line">280 -20</div><div class="line">280 20</div><div class="line">320 20</div><div class="line">320 -20</div><div class="line">EOF</div><div class="line"></div><div class="line"><span class="comment"># 关闭 GMT</span></div><div class="line">gmt psxy -R<span class="variable">$R</span> -J<span class="variable">$J</span> -T -O &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<h2 id="转换为其他格式">转换为其他格式</h2>
<p>PS 格式不支持透明，所以在 PS 文件中看不到任何透明效果。</p>
<p><code>psconvert</code> 可以将 PS 文件转换为 bmp、eps、pdf、png、jpeg、ppm、tif 格式，但是只有 PDF 格式中可以看到透明效果。</p>
<pre><code>gmt psconvert -A -P -Tf trans.ps</code></pre>
<p>如果想要其他格式怎么办？再用 <code>convert</code> 将 PDF 转换为其他格式即可:</p>
<pre><code>convert -density 300 trans.pdf trans.jpg</code></pre>
<p>注意：</p>
<ul>
<li>是两步走，先用 <code>psconvert</code> 将 PS 转换为 PDF，再用 <code>convert</code> 将 PDF 转换为其他格式。</li>
<li>直接用 <code>convert</code> 将 PS 转换为其他任何格式（包括 PDF），都没有透明效果。</li>
</ul>
<h2 id="效果图">效果图</h2>
<div class="figure">
<img src="/images/2013111001.jpg">

</div>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT4 与 GMT5 双版本共存]]></title>
      <url>http://seisman.info/multiple-versions-of-gmt.html</url>
      <content type="html"><![CDATA[<p>随着 GMT5 的发布，GMT 目前存在两个大版本：GMT4 和 GMT5。</p>
<p>GMT4 会继续维护更新直到 GMT6 的发布，但只修订 bug，不会再增加新功能。GMT5 在 GMT4 的基础上重新整理了代码，并加入了不少新功能，语法也与 GMT4 不兼容，因而，GMT5 相对来说 bug 可能会更多一些。</p>
<p>对于 GMT 新手来说，建议直接学习 GMT5；对于 GMT 老手来说，可以继续使用 GMT4，也可以开始逐渐使用 GMT5。</p>
<a id="more"></a>
<p>一些旧脚本可能是用 GMT4 的命令与语法写的，在 GMT5 下直接运行可能会有问题。把旧脚本从 GMT4 语法改成 GMT5 语法比较麻烦且没有必要。因而最好的方式是，在系统中同时安装 GMT4 和 GMT5，旧脚本使用 GMT4 的语法，新脚本使用 GMT5 的语法。</p>
<p>GMT 官方提供了两种方法，可以实现多版本 GMT 的切换。但这两种方法，要么需要对绘图脚本做额外修改，要么需要在每次执行脚本前做额外操作，因而比较麻烦，不推荐使用。有兴趣的可以自己看官方文档。</p>
<p>下面介绍的方法可以在不需要额外修改的情况下，指定脚本使用 GMT4 还是 GMT5。</p>
<!--more-->
<h2 id="安装-gmt4-和-gmt5">安装 GMT4 和 GMT5</h2>
<p>首先，当前系统需要安装 GMT4 和 GMT5 两个版本，然后，需要将两个版本的路径都添加到 PATH 中。</p>
<p>Linux 用户可以向 <code>~/.bashrc</code> 中加入如下语句：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># GMT 4</span></div><div class="line"><span class="built_in">export</span> GMT4_HOME=/opt/GMT-4.5.11</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;GMT4_HOME&#125;</span>/bin:<span class="variable">$PATH</span></div><div class="line"></div><div class="line"><span class="comment"># GMT 5</span></div><div class="line"><span class="built_in">export</span> GMT5_HOME=/opt/GMT-5.1.0</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;GMT5_HOME&#125;</span>/bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure>
<p>Windows 用户类似，也要把两个版本的 bin 目录的路径加到 PATH 中。</p>
<h2 id="gmt5-的命令格式">GMT5 的命令格式</h2>
<p>严格的说，GMT5 中只有一个可执行文件： <code>gmt</code> ，所有的命令都应以 <code>gmt</code> 开头，命令格式如下:</p>
<pre><code>gmt module -Axxx -Bxxx</code></pre>
<p>GMT4 中的所有命令在 GMT5 中都作为命令 <code>gmt</code> 的一个模块来调用。比如 GMT4 的 <code>pscoast</code> 命令在 GMT5 中应该使用 <code>gmt pscoast</code> 来调用。</p>
<p>在使用 GMT5 时，应严格按照 <code>gmt module</code> 这样的格式调用。这样，随便打开一个脚本，看到 <code>pscoast</code> 就知道是 GMT4 的语法，看到 <code>gmt pscoast</code> 就知道是 GMT5 语法。</p>
<h2 id="删除软链接">删除软链接</h2>
<p>GMT5 为了兼容 GMT4 的语法，在 bin 目录下建立了一堆指向 <code>gmt</code> 的软链接。进入 GMT5 的 bin 目录，其中 <code>gmt</code> 为可执行文件， <code>gmt-config</code> 、<code>gmt_shell_functions.sh</code> 、 <code>gmtswitch</code> 、 <code>isogmt</code> 为 Bash 脚本，其余都是指向可执行文件 <code>gmt</code> 的符号链接，把这些直接删除。</p>
<p>最简单的删除符号链接的办法是在安装 GMT 的时候就不生成这些符号链接。在编译 GMT5 之前，修改 <code>cmake/ConfigUser.cmake</code> 时，其中有一行:</p>
<pre><code>#set (GMT_INSTALL_MODULE_LINKS FALSE)</code></pre>
<p>将该行前的 <code>#</code> 去掉，即设置 <code>GMT_INSTALL_MODULE_LINKS=FALSE</code>，则在安装过程中就不会创建符号链接了。</p>
<p>如果安装的过程中创建了符号链接，可以使用如下命令将这些符号链接删除:</p>
<pre><code>$ cd /opt/GMT-5.1.0/bin/
# 建立临时目录，需要 Root 权限
$ sudo mkdir temp
$ sudo mv gmt gmt-config gmtlogo gmt_shell_functions.sh gmtswitch isogmt temp/
$ sudo rm * # 删除除 temp 目录之外的全部符号链接
rm: 无法删除 &quot;temp&quot;: 是一个目录
# 将 temp 目录下的文件复制回 bin 下
$ sudo mv temp/* .
# 删除 temp 目录
$ sudo rmdir temp/</code></pre>
<p>对于 Windows 用户，bin 目录下会有很多文件，可以将该目录下的所有文件按照大小排序，所有大小为 6 KB 的都是 “符号链接”，直接选中删除就好。</p>
<h2 id="不兼容模式">不兼容模式</h2>
<p>GMT5 提供了兼容模式，可以部分兼容 GMT4 的语法，但推荐使用不兼容模式。原因如下：</p>
<ol style="list-style-type: decimal">
<li>通常来说，兼容模式有更多的 bug；</li>
<li>GMT5 并不能完全兼容 GMT4，因而有些用法在一个命令下是有效的，在另一个命令下却是无效的；</li>
<li>使用兼容模式，可能到导致一个命令中既有 GMT4 语法也有 GMT5 语法，调试变得困难；</li>
<li>使用不兼容模式，有助于用户熟悉 GMT5 语法；</li>
</ol>
<p>要让 GMT5 不再兼容 GMT4，只需要将 <code>GMT5/share/conf/gmt.conf</code> 中的:</p>
<pre><code>GMT_COMPATIBILITY = 4</code></pre>
<p>改成:</p>
<pre><code>GMT_COMPATIBILITY = 5</code></pre>
<h2 id="测试一下">测试一下</h2>
<p>终端输入 <code>psxy -</code> 会看到命令的版本是 GMT 4.5.xx。</p>
<p>终端输入 <code>gmt psxy -</code> 会看到命令版本为 GMT 5.1.xx。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-11-09：初稿；</li>
<li>2015-06-07：重整文章布局；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 4.5.15 在 Linux 下的安装]]></title>
      <url>http://seisman.info/install-gmt4-under-linux.html</url>
      <content type="html"><![CDATA[<h2 id="说明">说明</h2>
<p>本文介绍如何在 Linux 下编译 GMT4 的最新版本：GMT 4.5.15。</p>
<p>很多 Linux 发行版的源中带有 GMT 软件包，但是版本一般较老，因而这里假定想要自己编译 GMT4 的读者，下载和编译的都是 GMT4 的最新版本，因而本文会随着 GMT4 新版本的发行而不断作出修改。</p>
<a id="more"></a>
<h2 id="下载">下载</h2>
<ul>
<li>官方 ftp：<a href="ftp://ftp.soest.hawaii.edu/gmt" class="uri" target="_blank" rel="external">ftp://ftp.soest.hawaii.edu/gmt</a></li>
<li>国内镜像：<a href="http://mirrors.ustc.edu.cn/gmt/" class="uri" target="_blank" rel="external">http://mirrors.ustc.edu.cn/gmt/</a></li>
</ul>
<p>需要下载的包包括：</p>
<ul>
<li><a href="http://mirrors.ustc.edu.cn/gmt/gmt-4.5.15-src.tar.bz2" target="_blank" rel="external">gmt-4.5.15-src.tar.bz2</a></li>
<li><a href="http://mirrors.ustc.edu.cn/gmt/gshhg-gmt-2.3.6.tar.gz" target="_blank" rel="external">gshhg-gmt-2.3.6.tar.gz</a></li>
</ul>
<p>注：GMT 中的 <code>triangulate</code> 命令有两个不同的源码，其中一个遵循 GPL 协议，另一个不遵循 GPL 协议。GMT 的 src 包中包含了前者。若有特殊需求，需要使用后者源码的功能，可以下载 <a href="http://mirrors.ustc.edu.cn/gmt/gmt-4.5.15-non-gpl-src.tar.bz2" target="_blank" rel="external">gmt-4.5.15-non-gpl-src.tar.bz2</a> ，并将解压后的 triangulate 源码覆盖 <code>gmt-4.5.15-src.tar.bz2</code> 中的相应源码。</p>
<p>下载完成后，可以用 <code>md5sum</code> 检查压缩文件的 md5 值，以保证该文件是完整且未被篡改的:</p>
<pre><code>$  md5sum gmt-4.5.15-src.tar.bz2 gshhg-gmt-2.3.6.tar.gz
9572138a0105a210638038171617daae  gmt-4.5.15-src.tar.bz2
108fd757939d3e5f8eaf385e185d6d14  gshhg-gmt-2.3.6.tar.gz</code></pre>
<h2 id="依赖关系">依赖关系</h2>
<h3 id="基础依赖包">基础依赖包</h3>
<p>编译 GMT 时需要一些开发工具（ <code>gcc</code> 、 <code>g++</code> 和 <code>make</code> ）以及底层的库文件 <code>libc.so</code> 和 <code>libm.so</code> 。</p>
<p>对于 Ubuntu/Debian:</p>
<pre><code>sudo apt-get update
sudo apt-get install gcc g++ make libc6</code></pre>
<p>对于 CentOS/RHEL/Fedora:</p>
<pre><code>sudo yum install gcc gcc-c++ make glibc</code></pre>
<h3 id="netcdf-库">netCDF 库</h3>
<p>GMT4 主要依赖于 netCDF4，可以直接使用 Linux 发行版官方源中提供的 netCDF 包。除了 netCDF 之外，建议还安装 gdal 包。虽然 GMT 不依赖于 gdal，但 gdal 可以轻松地将其他数据格式转换为 GMT 可识别的格式。</p>
<p>对于 Ubuntu/Debian:</p>
<pre><code>sudo apt-get update
sudo apt-get install libnetcdf-dev libgdal-dev python-gdal</code></pre>
<p>备注： <code>libgdal-dev</code> 在某些版本的 Ubuntu 下叫 <code>libgdal1-dev</code></p>
<p>对于 RHEL/CentOS/Fedora:</p>
<pre><code>sudo yum install netcdf netcdf-devel gdal gdal-devel gdal-python</code></pre>
<p>注意：</p>
<ol style="list-style-type: decimal">
<li>一定不要试图自己手动编译 netCDF。如果在阅读本文之前曾经手动编译过，一定要将原来手动编译生成的文件删除干净。通常可以使用 <code>locate netcdf</code> 找到 <code>/usr/local</code> 目录下的与 netCDF 相关的文件，直接删除即可。</li>
<li>CentOS 和 RHEL 的官方源中没有 netCDF，需要首先添加 EPEL 源再安装 netCDF；Fedora 官方源中自带 netCDF；</li>
</ol>
<h3 id="x-相关库">X 相关库</h3>
<p>GMT4 中的 <code>xgridedit</code> 命令是一个很简易的带 GUI 的网格文件编辑器，其依赖于一堆图形界面相关库文件:</p>
<pre><code>libICE.so   libSM.so   libX11.so  libXaw.so
libXext.so  libXmu.so  libXt.so</code></pre>
<p>对于 Ubuntu/Debian:</p>
<pre><code>sudo apt-get update
sudo apt-get install libxaw7-dev
sudo apt-get install libice-dev libsm-dev libx11-dev
sudo apt-get install libxext-dev libxmu-dev libxt-dev</code></pre>
<p>对于 CentOS/RHEL/Fedora:</p>
<pre><code>sudo yum install libXaw-devel
sudo yum install libICE-devel libSM-devel libX11-devel
sudo yum install libXext-devel libXmu-devel libXt-devel</code></pre>
<h2 id="安装-gmt">安装 GMT</h2>
<h3 id="编译-gmt-源码">编译 GMT 源码</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ tar -xvf gmt-4.5.15-src.tar.bz2</div><div class="line">$ <span class="built_in">cd</span> gmt-4.5.15</div><div class="line">$ ./configure --prefix=/opt/GMT-4.5.15</div><div class="line">$ make</div><div class="line">$ sudo make install-all       <span class="comment"># 注意：这里是 install-all 不是 install</span></div></pre></td></tr></table></figure>
<p>其中 <code>--prefix</code> 指定了 GMT 安装路径，你可以指定为其他路径，但要注意后面其他步骤要与这里的路径统一。</p>
<h3 id="安装海岸线数据">安装海岸线数据</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ../</div><div class="line">$ tar -xvf gshhg-gmt-2.3.6.tar.gz</div><div class="line">$ sudo mv gshhg-gmt-2.3.6 /opt/GMT-4.5.15/share/coast</div></pre></td></tr></table></figure>
<h3 id="修改环境变量">修改环境变量</h3>
<p>向 <code>~/.bashrc</code> 中加入 GMT4 的环境变量，并使环境变量生效：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="string">'export GMT4HOME=/opt/GMT-4.5.15'</span> &gt;&gt; ~/.bashrc</div><div class="line">$ <span class="built_in">echo</span> <span class="string">'export PATH=$&#123;GMT4HOME&#125;/bin:$PATH'</span>&gt;&gt; ~/.bashrc</div><div class="line">$ <span class="built_in">echo</span> <span class="string">'export LD_LIBRARY_PATH=$&#123;LD_LIBRARY_PATH&#125;:$&#123;GMT4HOME&#125;/lib64'</span>&gt;&gt; ~/.bashrc</div><div class="line">$ <span class="built_in">exec</span> <span class="variable">$SHELL</span> <span class="_">-l</span></div></pre></td></tr></table></figure>
<p>说明：</p>
<ul>
<li>第一个命令向 <code>~/.bashrc</code> 中添加环境变量 <code>GMT4HOME</code></li>
<li>第二个命令修改 <code>~/.bashrc</code> ，将 GMT4 的 bin 目录加入到 <code>PATH</code> 中</li>
<li>第三个命令将 GMT4 的 lib 目录加入到动态链接库路径中，若为 32 位系统，则为 <code>lib</code> ；64 位系统则为 <code>lib64</code></li>
<li>第四个命令是重新载入 bash，相当于 <code>source ~/.bashrc</code></li>
</ul>
<h2 id="命令测试">命令测试</h2>
<p>在终端键入 <code>psxy -</code> ，若出现如下输出，则安装成功:</p>
<pre><code>$ psxy -
psxy 4.5.15 [64-bit] - Plot lines, polygons, and symbols on maps</code></pre>
<h2 id="个人笔记">个人笔记</h2>
<ol style="list-style-type: decimal">
<li><p>查看 GMT 需要哪些动态链接库:</p>
<pre><code>$ cd /opt/GMT-4.5.15/bin
$ readelf -d * | grep &#39;Shared library&#39; | sort -u</code></pre></li>
<li>Ubuntu 下查找哪个软件包提供某个特定库文件： <a href="http://packages.ubuntu.com/" class="uri" target="_blank" rel="external">http://packages.ubuntu.com/</a></li>
<li><p>CentOS 下查找哪个软件包提供某个特定库文件： <code>yum provides libICE.so.6</code></p></li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-11-07：针对 GMT 4.5.11 发布初稿</li>
<li>2014-03-02：针对 GMT 4.5.12 进行更新</li>
<li>2014-03-08：<code>make install</code>-&gt;<code>make install-all</code></li>
<li>2014-07-10：更新 gshhg 为 2.3.1 版；GMT4 不依赖 <code>gdal</code></li>
<li>2014-09-14：更新 gshhg 为 2.3.2 版</li>
<li>2014-09-26：Ubuntu 下 <code>libxaw-dev</code> 应为 <code>libxaw7-dev</code></li>
<li>2014-10-14：修正了若干细节</li>
<li>2014-11-04：修改环境变量 <code>LD_LIBRARY_PATH</code></li>
<li>2015-01-01：更新至 GMT 4.5.13</li>
<li>2015-09-06：推荐安装 GDAL 的 Python 绑定（内含 <code>gdal_merge.py</code> ）</li>
<li>2015-09-18：下载后检查压缩文件的 md5 值</li>
<li>2015-10-11：重新整理了软件的依赖关系</li>
<li>2015-11-01：更新至 GMT 4.5.14</li>
<li>2016-10-07：更新至 GMT 4.5.14 和 GSHHG 2.3.6</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> GMT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 5.1.2 在 Linux 下的安装]]></title>
      <url>http://seisman.info/install-gmt5-under-linux.html</url>
      <content type="html"><![CDATA[<p><strong>本文不再维护更新！</strong></p>
<p>本文介绍如何在 Linux 下安装 GMT 5.1.x。GMT 5.2.x 在 Linux 下的安装见 <a href="/install-gmt5.2.x-under-linux.html">GMT 5.2.x 在 Linux 下的安装</a></p>
<p>说明：</p>
<ol style="list-style-type: decimal">
<li>仅适用于 5.1.0、5.1.1 和 5.1.2</li>
<li>所有命令均在一般用户下完成，需要 root 权限的命令都用 <code>sudo</code> 执行</li>
</ol>
<a id="more"></a>
<h2 id="下载">下载</h2>
<p>GMT 5.1.2 需要下载三个文件：</p>
<ol style="list-style-type: decimal">
<li>GMT 源码： <a href="ftp://ftp.soest.hawaii.edu/gmt/gmt-5.1.2-src.tar.gz" target="_blank" rel="external">gmt-5.1.2-src.tar.gz</a></li>
<li>全球海岸线数据 GSHHG：<a href="ftp://ftp.soest.hawaii.edu/gmt/gshhg-gmt-2.3.4.tar.gz" target="_blank" rel="external">gshhg-gmt-2.3.4.tar.gz</a></li>
<li>全球数字图表 DCW：<a href="ftp://ftp.soest.hawaii.edu/gmt/dcw-gmt-1.1.2.tar.gz" target="_blank" rel="external">dcw-gmt-1.1.2.tar.gz</a></li>
</ol>
<p>下载完成后，可以用 <code>md5sum</code> 检查压缩文件的 md5 值，以保证该文件是完整且未被篡改的:</p>
<pre><code>$ md5sum gmt-5.1.2-src.tar.gz gshhg-gmt-2.3.4.tar.gz dcw-gmt-1.1.2.tar.gz
dacaa6863fa6a0059d53b49216912007  gmt-5.1.2-src.tar.gz
80947a92cc88927aff070556ca5ab133  gshhg-gmt-2.3.4.tar.gz
45c99d30026742dbc0b1644ea64f496d  dcw-gmt-1.1.2.tar.gz</code></pre>
<h2 id="解决依赖关系">解决依赖关系</h2>
<h3 id="基础依赖包">基础依赖包</h3>
<p>GMT 的编译需要 C 和 C++ 编译器、cmake 等开发工具。</p>
<p>对于 Ubuntu/Debian:</p>
<pre><code>sudo apt-get update
sudo apt-get install gcc g++ cmake make</code></pre>
<p>对于 CentOS/RHEL/Fedora:</p>
<pre><code>sudo yum install gcc gcc-c++ cmake make</code></pre>
<p>GMT 的编译过程要求 cmake 的版本 <code>&gt;=2.8.5</code> ，需要注意：</p>
<ol style="list-style-type: decimal">
<li>安装 cmake 之后，可以通过 <code>cmake --version</code> 检查 cmake 版本；</li>
<li>CentOS <strong>6.5</strong> 的官方源中 cmake 的版本为 2.6.4，版本过低，无法满足要求；</li>
<li>CentOS <strong>6.6</strong> 的官方源中 cmake 的版本为 2.8.12，可以满足要求；</li>
<li>使用 CentOS 6.5 的用户可以 <code>yum update</code> 将系统升级到 6.6，即可使用较高版本的 cmake；</li>
<li>CentOS6.5 用户若不愿意升级整个系统，则需要先安装 EPEL 源，再安装 EPEL 源中的 <code>cmake28</code>， 并且在接下来的编译过程中要将 <code>cmake</code> 命令改成 <code>cmake28</code>；</li>
<li>CentOS 7 官方源中 cmake 版本为 2.8.11，可以直接安装使用；</li>
</ol>
<h3 id="软件依赖包">软件依赖包</h3>
<p>GMT5 的依赖包，相对来说要复杂很多：</p>
<ul>
<li>看 PS 文件以及将 PS 转换成其他格式需要 <code>ghostscript</code></li>
<li>网格文件需要 <code>netCDF</code> （&gt;=4.0，且需要支持 netCDF-4/HDF5）</li>
<li>Perl 兼容正则表达式库 <a href="http://www.pcre.org/" target="_blank" rel="external">PCRE</a></li>
<li>地理空间数据抽象库 <a href="http://www.gdal.org/" target="_blank" rel="external">GDAL</a></li>
<li>Fourier 变换库 <a href="http://www.fftw.org/" target="_blank" rel="external">FFTW</a></li>
<li>如果想要自行编译文档的话还需要 <a href="http://sphinx-doc.org/" target="_blank" rel="external">Sphinx</a> 以及 TeXLive</li>
</ul>
<p>对于 Ubuntu/Debian:</p>
<pre><code>sudo apt-get update
# 必须安装的包
sudo apt-get install ghostscript libnetcdf-dev
# 推荐安装的包
sudo apt-get install libgdal-dev python-gdal
# 可选的安装包
sudo apt-get install libpcre3-dev libfftw3-dev
# 不推荐安装的包
sudo apt-get install python-sphinx</code></pre>
<p>对于 RHEL/CentOS/Fedora:</p>
<pre><code># 安装必须的包
sudo yum install ghostscript netcdf-devel
# 推荐安装的包
sudo yum install gdal-devel gdal-python
# 可选的安装包
sudo yum install pcre-devel fftw-devel
# 不推荐安装的包
sudo yum install python-sphinx</code></pre>
<p>一些需要注意的地方:</p>
<ol style="list-style-type: decimal">
<li>一定不要试图自己手动编译 netCDF，因为手动编译很难解决依赖问题，网上的大多数手动编译 netCDF 的教程中都关闭了 netCDF 对 HDF5 的支持，因而导致 GMT5 无法使用。如果在阅读本文之前曾经手动编译过，一定要将原来手动编译生成的文件删除干净。通常可以使用 <code>locate netcdf</code> 找到 <code>/usr/local</code> 目录下的与 netCDF 相关的文件，直接删除即可。</li>
<li>CentOS 官方源中不带有 netCDF，需要先安装 EPEL 源</li>
<li>pcre、fftw 和 gdal 不是必须要安装的，但是推荐安装。其中 gdal 在做数据格式转换时非常有用；</li>
<li>其他发行版很久不用了，不清楚细节，读者可以在使用过程中补充。</li>
</ol>
<h2 id="安装-gmt">安装 GMT</h2>
<p>将刚才下载的三个压缩文件都放在同一个目录里，以下假定目录名为 <code>/home/seisman/Desktop/GMT</code>：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 当前目录名为 /home/seisman/Desktop/GMT</span></div><div class="line">$ <span class="built_in">pwd</span></div><div class="line">/home/seisman/Desktop/GMT</div><div class="line"></div><div class="line"><span class="comment"># 当前目录下包含了三个压缩文件</span></div><div class="line">$ ls</div><div class="line">dcw-gmt-1.1.2.tar.gz  gmt-5.1.2-src.tar.gz  gshhg-gmt-2.3.4.tar.gz</div><div class="line"></div><div class="line"><span class="comment"># 解压三个压缩文件</span></div><div class="line">$ tar -xvf gmt-5.1.2-src.tar.gz</div><div class="line">$ tar -xvf gshhg-gmt-2.3.4.tar.gz</div><div class="line">$ tar -xvf dcw-gmt-1.1.2.tar.gz</div><div class="line"></div><div class="line"><span class="comment"># 将 gshhg 和 dcw 数据复制到 gmt 的 share 目录下</span></div><div class="line">$ mv gshhg-gmt-2.3.4 gmt-5.1.2/share/gshhg</div><div class="line">$ mv dcw-gmt-1.1.2 gmt-5.1.2/share/dcw-gmt</div><div class="line"></div><div class="line"><span class="comment"># 切换到 gmt 源码目录下</span></div><div class="line">$ <span class="built_in">cd</span> gmt-5.1.2</div><div class="line"></div><div class="line"><span class="comment"># 新建用户配置文件</span></div><div class="line">$ gedit cmake/ConfigUser.cmake</div></pre></td></tr></table></figure>
<p>向 <code>cmake/ConfigUser.cmake</code> 文件中加入如下语句:</p>
<pre><code>set (CMAKE_INSTALL_PREFIX&quot;/opt/GMT-5.1.2&quot;)
set (GMT_INSTALL_MODULE_LINKS FALSE)
set (COPY_GSHHG TRUE)
set (COPY_DCW TRUE)</code></pre>
<ul>
<li><code>CMAKE_INSTALL_PREFIX</code> 设置 GMT 的安装路径，可以修改为其他路径</li>
<li><code>GMT_INSTALL_MODULE_LINKS</code> 为 FALSE，表明不在 GMT 的 bin 目录下建立命令的软链接，也可设置为 TRUE</li>
<li><code>COPY_GSHHG</code> 为 TRUE 会将 GSHHG 数据复制到 <code>GMT/share/coast</code> 下</li>
<li><code>COPY_DCW</code> 为 TRUE 会将 DCW 数据复制到 <code>GMT/share/dcw</code> 下</li>
</ul>
<p>以下几点说明，仅供高阶用户阅读：</p>
<ol style="list-style-type: decimal">
<li>GMT 提供了用户配置的模板文件 <code>cmake/ConfigUserTemplate.cmake</code>，其中包含了众多可配置的变量以及大量的注释说明。可以直接将该文件名复制为 <code>cmake/ConfigUser.cmake</code>，然后在模板基础上做修改，以自定义 GMT 的安装。仅供高阶用户使用</li>
<li><code>CMAKE_INSTALL_MODULE_LINKS</code> 的作用是在 GMT 的 bin 目录下建立命令的软链接，以兼容 GMT4 语法，建议设置为 FALSE</li>
<li>配置文件中 <code>GSHHG_ROOT</code> 和 <code>DCW_ROOT</code> 可以用于指定数据所在路径。此处已将数据放在 GMT 的 share 目录下，使得在配置过程中 GMT 可以自动找到，因而不需要设置这两个变量</li>
<li>若系统中存在多个 GMT 的版本，按照上面的做法会存在多个 GSHHG 和 DCW 数据的副本，造成数据冗余。此时，可以将 gshhg 和 dcw 数据放在专门的目录中，比如 <code>/home/seisman/Datas/</code> 目录下。然后有两种解决办法：
<ol style="list-style-type: decimal">
<li><p>完全按照上面的做法，在安装完成后，删除 <code>/opt/GMT-5.1.2/share</code> 目录下的 <code>coast</code> 和 <code>dcw</code> 两个目录，并建立两个指向数据的真实数据的软链接:</p>
<pre><code>$ cd /opt/GMT-5.1.2/share
$ sudo rm -r coast/
$ sudo rm -r dcw/
$ sudo ln -s /home/seisman/Datas/gshhg-gmt-2.3.4 gshhg
$ sudo ln -s /home/seisman/Datas/dcw-gmt-1.1.2 dcw</code></pre></li>
<li><p>设置配置文件如下:</p>
<pre><code>set (CMAKE_INSTALL_PREFIX&quot;/opt/GMT-5.1.2&quot;)
set (GMT_INSTALL_MODULE_LINKS FALSE)
set (GSHHG_ROOT&quot;/home/seisman/Datas/gshhg-gmt-2.3.4&quot;)
set (COPY_GSHHG FALSE)
set (DCW_ROOT&quot;/home/seisman/Datas/dcw-gmt-1.1.1&quot;)
set (COPY_DCW FALSE)</code></pre></li>
</ol></li>
</ol>
<p>继续执行如下命令以检查 GMT 的依赖关系:</p>
<pre><code>$ mkdir build
$ cd build/
$ cmake ..</code></pre>
<p><code>cmake ..</code> 会检查 GMT 对软件的依赖关系，我的检查结果如下:</p>
<pre><code>*  Options:
*  Found GSHHG database       : /home/seisman/Desktop/GMT/gmt-5.1.2/share/gshhg (2.3.4)
*  Found DCW-GMT database     : /home/seisman/Desktop/GMT/gmt-5.1.2/share/dcw-gmt
*  NetCDF library             : /usr/lib64/libnetcdf.so
*  NetCDF include dir         : /usr/include
*  GDAL library               : /usr/lib64/libgdal.so
*  GDAL include dir           : /usr/include/gdal
*  FFTW library               : /usr/lib64/libfftw3f.so
*  FFTW include dir           : /usr/include
*  Accelerate Framework       :
*  Regex support              : PCRE (/usr/lib64/libpcre.so)
*  ZLIB library               : /usr/lib64/libz.so
*  ZLIB include dir           : /usr/include
*  License restriction        : no
*  Triangulation method       : Shewchuk
*  Build mode                 : shared
*  Build GMT core             : always [libgmt.so]
*  Build PSL library          : always [libpsl.so]
*  Build GMT supplements      : yes [supplements.so]
*  Build proto supplements    : none
*
*  Locations:
*  Installing GMT in          : /opt/GMT-5.1.2
*  GMT_DATADIR                : /opt/GMT-5.1.2/share
*  GMT_DOCDIR                 : /opt/GMT-5.1.2/share/doc
*  GMT_MANDIR                 : /opt/GMT-5.1.2/share/man
-- Configuring done
-- Generating done</code></pre>
<p>正常情况下的检查结果应该与上面给出的类似。若出现问题，则需要检查之前的步骤是否有误，检查完毕后重新执行 <code>cmake ..</code> ，直到出现类似的检查结果。检查完毕后，开始编译和安装:</p>
<pre><code>$ make -j
$ sudo make -j install</code></pre>
<h2 id="自行编译文档">自行编译文档</h2>
<p>如果系统中安装了 sphinx 和 LaTeX，则可以自行编译文档。一般情况下，不建议自行编译文档，官方提供的文档已经足够:</p>
<pre><code>$ make -j docs_man          # 生成 man 文档
$ make -j docs_html         # 生成 HTML 文档
$ make -j docs_pdf          # 生成 PDF 文档
$ make -j docs_pdf_shrink   # 生成更小的 PDF 文档
$ sudo -j make install</code></pre>
<h2 id="修改环境变量">修改环境变量</h2>
<p>修改环境变量并使其生效：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="string">'export GMT5HOME=/opt/GMT-5.1.2'</span> &gt;&gt; ~/.bashrc</div><div class="line">$ <span class="built_in">echo</span> <span class="string">'export PATH=$&#123;GMT5HOME&#125;/bin:$PATH'</span>&gt;&gt; ~/.bashrc</div><div class="line">$ <span class="built_in">echo</span> <span class="string">'export LD_LIBRARY_PATH=$&#123;LD_LIBRARY_PATH&#125;:$&#123;GMT5HOME&#125;/lib64'</span>&gt;&gt; ~/.bashrc</div><div class="line">$ <span class="built_in">exec</span> <span class="variable">$SHELL</span> <span class="_">-l</span></div></pre></td></tr></table></figure>
<p>说明</p>
<ul>
<li>第一个命令向 <code>~/.bashrc</code> 中添加环境变量 <code>GMT5HOME</code></li>
<li>第二个命令修改 <code>~/.bashrc</code> ，将 GMT5 的 bin 目录加入到 <code>PATH</code> 中</li>
<li>第三个命令将 GMT5 的 lib 目录加入到动态链接库路径中，若为 32 位系统，则为 <code>lib</code> ；64 位系统则为 <code>lib64</code> ；</li>
<li>第四个命令是重新载入 bash，相当于 <code>source ~/.bashrc</code></li>
<li>某些发行版下可能需要写入到 <code>~/.bash_profile</code> 而不是 <code>~/.bashrc</code></li>
<li>某些发行版下可能需要退出再重新登陆，或关机重启</li>
</ul>
<h2 id="测试是否安装成功">测试是否安装成功</h2>
<p>在终端键入 <code>gmt</code> ，若出现如下输出，则安装成功:</p>
<pre><code>$ gmt

GMT - The Generic Mapping Tools, Version 5.1.2 (r14256) [64-bit]</code></pre>
<p>Ubuntu 14.04/15.04 以及部分 Debian 用户，可能会出现如下信息:</p>
<pre><code>$ gmt
Sub-commands for gmt:
install    install more modules
ERROR: Please specify valid params for &#39;gmt&#39;.</code></pre>
<p>出现该错误的原因是这几个发行版中的 <code>libgenome-perl</code> 包中提供了同名的命令 <code>/usr/bin/gmt</code> ，把该软件包卸载即可。</p>
<h2 id="参考来源">参考来源</h2>
<ol style="list-style-type: decimal">
<li><a href="http://gmtrac.soest.hawaii.edu/projects/gmt/wiki/BuildingGMT" class="uri" target="_blank" rel="external">http://gmtrac.soest.hawaii.edu/projects/gmt/wiki/BuildingGMT</a></li>
<li><a href="/install-gmt4-under-linux.html">GMT4.5.14 在 Linux 下的安装</a></li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-11-06：初稿；</li>
<li>2014-02-22：cmake 版本需要 2.8 以上；</li>
<li>2014-03-02：更新至 GMT 5.1.1；</li>
<li>2014-09-14：更新 GSHHG 至 2.3.2；</li>
<li>2014-09-26：Ubuntu 下 <code>libxaw-dev</code> 应为 <code>libxaw7-dev</code> ；</li>
<li>2014-11-04：修改环境变量 <code>LD_LIBRARY_PATH</code> ；</li>
<li>2014-11-29：CentOS 6.6 中的 cmake 版本为 2.8.12；</li>
<li>2015-02-01：更新 GSHHG 至 2.3.4；</li>
<li>2015-03-14：路径中不能用波浪号代替家目录；</li>
<li>2015-05-05：更新至 GMT 5.1.2；</li>
<li>2015-08-29：Ubuntu 和 Debian 中存在与 gmt 冲突的包；</li>
<li>2015-09-06：推荐安装 gdal 的 Python 绑定；</li>
<li>2015-09-18：下载完成后检测压缩文件的 md5 值；</li>
<li>2015-10-11：GMT5 不依赖于 Xt 等库文件；</li>
<li>2015-11-07：简化安装细节，本文仅修改 BUG，不再更新内容；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> GMT </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Perl 多版本共存之 plenv]]></title>
      <url>http://seisman.info/perl-plenv.html</url>
      <content type="html"><![CDATA[<p>官方网站：<a href="https://github.com/tokuhirom/plenv" class="uri" target="_blank" rel="external">https://github.com/tokuhirom/plenv</a></p>
<a id="more"></a>
<h2 id="安装-plenv">安装 plenv</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> git://github.com/tokuhirom/plenv.git ~/.plenv</div><div class="line">$ <span class="built_in">echo</span> <span class="string">'export PATH="$HOME/.plenv/bin:$PATH"'</span> &gt;&gt; ~/.bashrc</div><div class="line">$ <span class="built_in">echo</span> <span class="string">'eval "$(plenv init -)"'</span> &gt;&gt; ~/.bashrc</div><div class="line">$ <span class="built_in">exec</span> <span class="variable">$SHELL</span> <span class="_">-l</span></div></pre></td></tr></table></figure>
<h2 id="安装-plenv-的-build-插件">安装 plenv 的 build 插件</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> git://github.com/tokuhirom/Perl-Build.git ~/.plenv/plugins/perl-build/</div></pre></td></tr></table></figure>
<h2 id="查看所有可以安装的版本">查看所有可以安装的版本</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ plenv install --list</div></pre></td></tr></table></figure>
<p>Perl 的版本格式为 <code>5.xx.x</code> ，其中 <code>xx</code> 为偶数的版本为稳定版。</p>
<h2 id="安装指定版本">安装指定版本</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ plenv install 5.18.1</div></pre></td></tr></table></figure>
<h2 id="更新数据库">更新数据库</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ plenv <span class="built_in">rehash</span></div></pre></td></tr></table></figure>
<h2 id="修改全局-perl-版本">修改全局 Perl 版本</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ plenv versions</div><div class="line">$ plenv global 5.18.1</div></pre></td></tr></table></figure>
<h2 id="安装-cpanm">安装 cpanm</h2>
<p>Perl 的 <code>cpan</code> 工具可以方便的安装和管理众多模块。<code>cpanm</code> 与 <code>cpan</code> 类似，其功能更强大， 其可以根据当前的 Perl 版本，将模块安装到对应的路径中，而不会对系统自带的 Perl 模块以及其他 Perl 版本的模块进行任何修改。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ plenv install-cpanm</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> Perl </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PDF 合并和分割工具 --PDFtk]]></title>
      <url>http://seisman.info/introduction-to-pdftk.html</url>
      <content type="html"><![CDATA[<h2 id="简介">简介</h2>
<p>PDFtk 是什么？我觉得官网的一句话解释得很好。</p>
<blockquote>
<p>If PDF is electronic paper, then PDFtk is an electronic staple-remover, hole-punch, binder, secret-decoder-ring, and X-Ray-glasses. PDFtk is a simple tool for doing everyday things with PDF documents.</p>
</blockquote>
<p>其官方网站为： <a href="http://www.pdflabs.com/tools/pdftk-the-pdf-toolkit" class="uri" target="_blank" rel="external">http://www.pdflabs.com/tools/pdftk-the-pdf-toolkit</a></p>
<a id="more"></a>
<p>PDFtk 目前分为三个版本：</p>
<ul>
<li>PDFtk Server：命令行工具。支持 windows、Linux、Mac。</li>
<li>PDFtk Free：图形界面基础免费版；仅限 windows 用户；功能仅限于 PDF 合并和分割；</li>
<li>PDFtk Pro：图形界面专业收费版；仅限 windows 用户，可以对 PDF 文档进行合并、分割、旋转、加水印、加邮戳、加密。</li>
</ul>
<p>对于 Linux 用户，唯一的选择是免费的 PDFtk Server，其功能与收费 PDFtk Pro 完全相同，只是没有 GUI 而已。作者还是很厚道的。</p>
<p>Linux 的各个发行版的官方源中基本都有该软件，直接 <code>apt-get</code> 或者 <code>yum</code> 安装即可。</p>
<h2 id="功能">功能</h2>
<ul>
<li>合并 PDF；</li>
<li>分割 PDF 页面；</li>
<li>旋转 PDF 文档或页面；</li>
<li>PDF 解密；（不是破解）</li>
<li>PDF 加密；</li>
<li>用 X/FDF 填写 PDF 表格；</li>
<li>从 PDF 表格中生成 PDF Data Stencils；</li>
<li>加背景水印或前景印章；</li>
<li>报告 PDF Metrics，书签和元数据；</li>
<li>增加 / 更新 PDF 书签或元数据；</li>
<li>给 PDF 页面或文档加附件；</li>
<li>解压 PDF 附件；</li>
<li>分解 PDF 文档为多个单页；</li>
<li>解压缩和重压缩页面流；</li>
<li>修复受损的 PDF 文档；</li>
</ul>
<p>这功能完全可以与 Adobe Acrobat 相媲美了，更重要的是 PDFtk 支持 Linux 且完全免费。（个人用户免费，若用于商业用途需付费）。</p>
<h2 id="用法示例">用法示例</h2>
<p>具体选项看这里： <a href="http://www.pdflabs.com/docs/pdftk-man-page/" class="uri" target="_blank" rel="external">http://www.pdflabs.com/docs/pdftk-man-page/</a></p>
<p>下面给出一些常见的例子。<a href="http://www.pdflabs.com/docs/pdftk-cli-examples/" target="_blank" rel="external">例子原文</a></p>
<p>扫描一本书，odd.pdf 为书的全部奇数页，even.pdf 为书的全部偶数页，下面的命令可以将两个 pdf 合并成页码正常的书:</p>
<pre><code>pdftk A=odd.pdf B=even.pdf shuffle A B output collated.pdf</code></pre>
<p>如果 odd.pdf 是逆序的:</p>
<pre><code>pdftk A=odd.pdf B=even.pdf shuffle Aend-1 B output collated.pdf</code></pre>
<p>加密 PDF:</p>
<pre><code>pdftk secured.pdf input_pw foopass output unsecured.pdf</code></pre>
<p>PDF 128 位加密，保留全部权限:</p>
<pre><code>pdftk 1.pdf output 1.128.pdf owner_pw foopass</code></pre>
<p>PDF 128 位加密，保留全部权限，打开文档需输入密码 “baz”:</p>
<pre><code>pdftk 1.pdf output 1.128.pdf owner_pw foo user_pw baz</code></pre>
<p>PDF 128 位加密，打开文档需输入密码 “baz”，保留打印之外的其他权限:</p>
<pre><code>pdftk 1.pdf output 1.128.pdf owner_pw foo user_pw baz allow printing</code></pre>
<p>合并 in1.pdf 和 in2.pdf 到新 PDF 中:</p>
<pre><code>pdftk in1.pdf in2.pdf cat output out1.pdf</code></pre>
<p>或（使用句柄）:</p>
<pre><code>pdftk A=in1.pdf B=in2.pdf cat A B output out1.pdf</code></pre>
<p>或（使用通配符）:</p>
<pre><code>pdftk *.pdf cat output combined.pdf</code></pre>
<p>去除 in1.pdf 中的第 13 页，并创建 out1.pdf:</p>
<pre><code>pdftk in.pdf cat 1-12 14-end output out1.pdf</code></pre>
<p>或</p>
<pre><code>pdftk A=in1.pdf cat A1-12 A14-end output out1.pdf</code></pre>
<p>对输出进行 40 位加密，撤销所有权限，设置 owner 密码为 foopass:</p>
<pre><code>pdftk 1.pdf 2.pdf cat output 3.pdf encrypt_40bit owner_pw foopass</code></pre>
<p>合并两个文件，其中一个需要被加密。对输出不加密:</p>
<pre><code>pdftk A=secured.pdf 2.pdf input_pw A=foopass cat output 3.pdf</code></pre>
<p>解压 PDF 页面流，然后就可以在文本编辑器中编辑 PDF 文件:</p>
<pre><code>pdftk doc.pdf output doc.unc.pdf uncompress</code></pre>
<p>压缩 PDF:</p>
<pre><code>pdftk mydoc.pdf output mydoc.clear.pdf compress</code></pre>
<p>修复破损的 PDF:</p>
<pre><code>pdftk broken.pdf output fixed.pdf</code></pre>
<p>将一个 PDF 文档分割成一页一个文档:</p>
<pre><code>pdftk in.pdf burst</code></pre>
<p>将一个 PDF 文档分割成一页一个文档，并加密，允许低质量的打印:</p>
<pre><code>pdftk in.pdf burst owner_pw foopass allow DegradedPrinting</code></pre>
<p>获取 PDF 问的元数据和书签信息:</p>
<pre><code>pdftk in.pdf dump_data output report.txt</code></pre>
<p>将 PDF 第一页顺时针旋转 90 度:</p>
<pre><code>pdftk in.pdf cat 1east 2-end output out.pdf</code></pre>
<p>将整个 PDF 文档旋转 180 度:</p>
<pre><code>pdftk in.pdf cat 1-endsouth output out.pdf</code></pre>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PDF </tag>
            
            <tag> 用法 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用海岸线裁剪区域]]></title>
      <url>http://seisman.info/coastline-clip.html</url>
      <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2>
<p>已有 etopo 数据，其包含了全球地形以及海水深度数据，现绘制全球地图，要求有全球海岸线和地形数据。</p>
<a id="more"></a>
<h2 id="代码-1">代码 1</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=0/360/-60/60</div><div class="line">J=M24c</div><div class="line"></div><div class="line">grdraster 8 -R<span class="variable">$R</span> -I2m -Gout.grd</div><div class="line">makecpt -Cglobe -T-11500/8500/2000 -Z &gt; colors.cpt</div><div class="line">grdimage out.grd -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Ccolors.cpt -K &gt; a.ps</div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B60/30 -W1/0.5p -N1 -O &gt;&gt; a.ps</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<div class="figure">
<img src="/images/2013103001.jpg">

</div>
<p>这里可以很明显地看出，海岸线与地形是不重合的。一开始以为是脚本的问题，想想才明白， 地形与海岸线不匹配是正常的，其差异是由于大陆架造成的。理论上可以通过修改 cpt 文件， 使得大于 0 和小于 0 的地形的颜色对比更强烈一些。不过这不是这篇博文所关注的东西。</p>
<h2 id="代码-2">代码 2</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=0/360/-60/60</div><div class="line">J=M24c</div><div class="line"></div><div class="line">grdraster 1 -R<span class="variable">$R</span> -I5m -Gout.grd</div><div class="line">makecpt -Cglobe -T-11500/8500/2000 -Z &gt; colors.cpt</div><div class="line"></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Gc -K -V &gt; a.ps</div><div class="line">grdimage out.grd -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Ccolors.cpt -K -O -V &gt;&gt; a.ps</div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Q -K -O -V &gt;&gt; a.ps</div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B60/30 -W1/0.5p -N1 -O -V &gt;&gt; a.ps</div></pre></td></tr></table></figure>
<div class="figure">
<img src="/images/2013103002.jpg">

</div>
<p>这里使用了三个 <code>pscoast</code> 命令，第一个 <code>pscoast</code> 将陆地区域 clip 出来，第二个 <code>pscoast</code> 关闭 clip，第三个 <code>pscoast</code> 绘制海岸线。效果还不错。</p>
<h2 id="代码-3">代码 3</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">R=0/360/-60/60</div><div class="line">J=M24c</div><div class="line"></div><div class="line">grdraster 1 -R<span class="variable">$R</span> -I5m -Gout.grd</div><div class="line">makecpt -Cglobe -T-11500/8500/2000 -Z &gt; colors.cpt</div><div class="line"></div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Sc -K -V &gt; a.ps</div><div class="line">grdimage out.grd -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Ccolors.cpt -K -O -V &gt;&gt; a.ps</div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -Q -K -O -V &gt;&gt; a.ps</div><div class="line">pscoast -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B60/30 -W1/0.5p -N1 -O -V &gt;&gt; a.ps</div></pre></td></tr></table></figure>
<div class="figure">
<img src="/images/2013103003.jpg">

</div>
<p>与代码 2 类似，这里只绘制出了海洋部分的地形。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在 GMT 中使用 LaTeX]]></title>
      <url>http://seisman.info/use-latex-in-gmt.html</url>
      <content type="html"><![CDATA[<p>GMT 的 <code>pstext</code> 命令支持一些简单的文本特效以及特殊字符，但是如果想在 GMT 中显示一些 更复杂的公式或者其他，GMT 则无能为力了。</p>
<p>这个时候自然而然就会想到功能强大的 LaTeX 了，写公式、画图都算是强项。显然 GMT 自身 是无法直接支持 LaTeX 的语法的（若要支持 LaTeX 的语法，在绘图时必须调用 LaTeX 引擎， 这样 GMT 对其他软件的依赖性过大，而且从技术上来说对于 GMT 的开发者来说也有些难度）。</p>
<p>虽然说用 GMT 绘图时在图上显示公式算是一个很小众的需求，从折腾的角度来看，还是很值得的。</p>
<a id="more"></a>
<h2 id="用-latex-写公式">用 LaTeX 写公式</h2>
<p>下面的 LaTeX 代码包含了地震学里最基础的波动方程：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">\documentclass&#123;book&#125;</div><div class="line">\begin&#123;document&#125;</div><div class="line"></div><div class="line">\thispagestyle&#123;empty&#125;</div><div class="line"></div><div class="line">% 波动方程</div><div class="line">\[</div><div class="line">\rho \frac&#123;\partial^2 u_i&#125;&#123;\partial t^2&#125; = f_i +\tau_&#123;ij,j&#125;</div><div class="line">\]</div><div class="line"></div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure>
<p>几点说明：</p>
<ul>
<li>默认生成的页面包含页面，页码的存在会影响 PS 文件的 Bounding Box， <code>thispagestyle{empty}</code> 设置当前页面不显示页码。</li>
<li><code>\[ \]</code> 得到行间公式</li>
</ul>
<h2 id="编译-latex-源码并处理输出文件">编译 LaTeX 源码，并处理输出文件</h2>
<p>上面的 LaTeX 代码保存在文件 <code>equation.tex</code> 中。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ latex equation.tex</div><div class="line">$ dvips equation.dvi</div><div class="line">$ ps2eps equation.ps <span class="_">-f</span> <span class="_">-l</span></div></pre></td></tr></table></figure>
<p>上面的三个命令实现了 <code>tex -&gt; dvi -&gt; ps -&gt; eps</code> 的转换。</p>
<p>关于 ps2eps 的一些介绍：</p>
<ul>
<li><code>-f</code> 表示若已存在同名 eps 文件，则强制覆盖；</li>
<li>在将 ps 文件转换为 eps 文件时，会根据 ps 文件中的 Bounding Box 信息对 PS 文件进行切边， 但是默认的切边方式切得有点过了， <code>-l</code> 会在四个方向上各扩展 1 个点的距离，切边效果更好。</li>
<li><code>--resolution=dpi</code> 可以设置 PS 文件的精度；默认效果应该足够了；</li>
<li>如果有其他需求，可以参考 ps2eps 的 <a href="http://www.tm.uka.de/~bless/ps2eps" target="_blank" rel="external">官方说明</a></li>
</ul>
<p>也可以不使用 <code>ps2eps</code>，而直接使用 <code>convert</code> 命令，<code>convert</code> 默认的切边效果非常好，但是默认精度 比较低，需要自己调高。</p>
<h2 id="gmt-与-latex-的合并">GMT 与 LaTeX 的合并</h2>
<p>代码如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">PS=gmt-latex.ps</div><div class="line">gmt pstext -JX15c/7c -R0/10/0/5 -Bx2 -By1 -B+t<span class="string">"Equation of motion"</span> -F+f15p -K &gt; <span class="variable">$PS</span> &lt;&lt;EOF</div><div class="line">5 4.5 Equation Start.</div><div class="line">EOF</div><div class="line"></div><div class="line">gmt psimage equation.eps -D6c/4c+w5c -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line">gmt psimage equation.eps -D6c/2c+w3c -K -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">gmt pstext -J -R -F+f15p -O &gt;&gt; <span class="variable">$PS</span> &lt;&lt;EOF</div><div class="line">5 0.5 Equation End</div><div class="line">EOF</div></pre></td></tr></table></figure>
<p>其实本质上就是利用 <code>psimage</code> 命令将 EPS 文件嵌入到当前 PS 文件中。详情见 <code>psimage</code> 的语法。</p>
<p>由于 GMT 包含了非 GMT 的PS代码，所以无法使用 <code>psconvert</code> 命令进行转换。因而需要使用 <code>convert</code> 命令，转换命令如下:</p>
<pre><code>$ convert -trim -density 300 -rotate 90 gmt-latex.ps gmt-latex.png</code></pre>
<p>效果如下：</p>
<div class="figure">
<img src="/images/2013102401.png">

</div>
<h2 id="其他一些需要说明的地方">其他一些需要说明的地方</h2>
<ol style="list-style-type: decimal">
<li>从本质上来说，这个技巧利用了 <code>psimage</code> 命令，直接将 EPS 文件的代码嵌入到新的 PS 文件中，因而基本上只要是 EPS 文件都可以这么做。利用这一点可以做很多事情， 比如 GMT 的箭头比较难看，可以用 LaTeX 的 TikZ 包来生成好看的箭头，然后再导入进去。</li>
<li>用 latex 将 tex 编译成 dvi，再转换为 ps 文件是一种比较老的 latex 编译方式；也是这里 推荐的编译方式。</li>
<li>现在更流行的是编译方式是直接用 pdflatex 或者 xelatex 生成 pdf 文件。但是这里需要 eps 文件，所以需要调用 pdf2ps 转换为 ps 再转换为 eps，pdflatex 生成的 pdf 效果很好， 但是再生成 ps 文件清晰度会降低很多。因而最好还是用比较古老的编译方式吧。</li>
<li>这个方法或许也可以用来在 GMT 上写中文。目前对中文支持最好的应该是 xelatex 了， 其好像只能生成 pdf，转换为 ps 后精度必然不够。一个解决办法是写足够大的字，转换之后 用 psimage 缩小到需要的尺寸，这样或许精度上看上去效果更好。另一个办法是查一查 pdf 到 ps 转换有没有高精度的实现方法。不过 GMT 的中文问题还是用 <a href="/gmt-chinese-under-linux.html">Linux 下的 GMT 中文显示</a> 的方法更好。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> LaTeX </tag>
            
            <tag> 格式转换 </tag>
            
            <tag> 图像 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Perl 中的时间加法]]></title>
      <url>http://seisman.info/timespan-in-perl.html</url>
      <content type="html"><![CDATA[<p>数据申请的过程中，经常需要处理的一个问题是：已知某时刻，在该时刻的基础上加上一段时间之后对应的时刻是多少？</p>
<a id="more"></a>
<h2 id="基本解法">基本解法</h2>
<p>最朴素的思想是自己写一个程序：</p>
<ul>
<li>把该时刻的年月日时分秒分别加上一个时间间隔；</li>
<li>检查秒数，若秒数大于 60，则秒数减 60 同时分钟数加 1；</li>
<li>检查分钟，若分钟数大于 60，则分钟数减 60 同时小时数加 1；</li>
<li>检查小时，若小时大于 24，则小时数减 24 同时天数加 1；</li>
<li>根据当前月份确定当前月有多少天，如果超过该天数，则减去天数值，月份进 1；这里大概要做 12 次判断，同时还要考虑闰年的问题；</li>
<li>然后就发现这样的办法太麻烦了。。</li>
</ul>
<h2 id="高级解法">高级解法</h2>
<p>更高端一些的解法是，计算当前时刻与某个特定时刻的秒数差，然后再加上时间间隔，再将新的秒数差转换为时刻。</p>
<p>其实程序写起来依然很麻烦。在 Perl 中，已经有相当多的模块可以用于解决这个问题，直接调用即可。Perl 模块的强大之处即在此，这也是我不再使用 Bash 的一个原因。</p>
<h2 id="timegm">timegm</h2>
<p>Perl 的模块 Time::Local 下有个函数，叫做 timegm。其用法如下：</p>
<pre><code>$time = timegm($sec, $min, $hour, $mday, $mon, $year);</code></pre>
<p>输入参数有 6 个（默认情况下，该函数会进行输入检查，以确保这六个元素给定的时间的存在性。）</p>
<ul>
<li><code>$sec</code>：秒（0-59）；</li>
<li><code>$min</code>：分（0-59）；</li>
<li><code>$hour</code>：时（0-23）</li>
<li><code>$mday</code>：每月的第几天（1-31）；</li>
<li><code>$mon</code>：月份<strong>（0-11）</strong>；</li>
<li><code>$year</code>：年份；</li>
</ul>
<p>关于年份，其范围要复杂一些：</p>
<ul>
<li>如果 <code>$year&gt;999</code>，则将其解释为真实的年份；</li>
<li>如果 <code>$year</code> 在 100 到 999 之间，则将其解释为与 1900 年的年份差；</li>
<li>如果 <code>$year</code> 在 0 到 99 之间，规则已经复杂的没有必要了。。。</li>
</ul>
<p>对于实际应用来说，前两条规则就够用了。</p>
<p>该函数的输出是当前时刻<strong>相对于1970年1月1日午夜的秒数</strong>。</p>
<h2 id="gmtime">gmtime</h2>
<p>Perl 内置一个函数 <code>gmtime</code>，<code>Time::Local</code> 模块里的 <code>timegm</code> 实际上是该函数的逆函数。</p>
<p>其用法如下:</p>
<pre><code>($sec ,$min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = gmtime($time);</code></pre>
<p>其输入是相对于 1970 年 1 月 1 日午夜的秒数。</p>
<p>其输出有 9 个元素：</p>
<ul>
<li><code>$sec</code>：秒（0-59）；</li>
<li><code>$min</code>：分（0-59）；</li>
<li><code>$hour</code>：时（0-23）</li>
<li><code>$mday</code>：每月的第几天（1-31）；</li>
<li><code>$mon</code>：月份<strong>（0-11）</strong>；</li>
<li><code>$year</code>：年份 - 1900；</li>
<li><code>$wday</code>：周的第几天（0-6）；0 代表周日，1 代表周一；</li>
<li><code>$yday</code>：一年的第几天（0-364 或者 0-365）；</li>
<li><code>$isdst</code>：是否是夏令时（0-1）</li>
</ul>
<h2 id="脚本实现">脚本实现</h2>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env perl</span></div><div class="line"><span class="comment"># Example to show the use of time_add</span></div><div class="line"></div><div class="line"><span class="keyword">use</span> strict;</div><div class="line"><span class="keyword">use</span> warnings;</div><div class="line"><span class="keyword">use</span> Time::Local;</div><div class="line"></div><div class="line"><span class="comment"># 当前时刻为 2013 年 10 月 12 日 04 时 5 分 0 秒</span></div><div class="line"><span class="comment">#   - 04 时或者 4 时都可以</span></div><div class="line"><span class="comment">#   - 10 月是真正的 10 月</span></div><div class="line"><span class="comment">#   - 子函数中的变量与主函数中变量相互独立</span></div><div class="line"><span class="keyword">my</span> $year = <span class="number">2013</span>;</div><div class="line"><span class="keyword">my</span> $mon = <span class="number">10</span>;</div><div class="line"><span class="keyword">my</span> $day = <span class="number">12</span>;</div><div class="line"><span class="keyword">my</span> $hour = <span class="number">04</span>;</div><div class="line"><span class="keyword">my</span> $min = <span class="number">5</span>;</div><div class="line"><span class="keyword">my</span> $sec = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="comment"># 时间差，5 分 15 秒</span></div><div class="line"><span class="keyword">my</span> $span = <span class="number">5</span>*<span class="number">60</span>+<span class="number">15</span>;</div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"BEFORE $year/$mon/$day $hour:$min:$sec\n"</span>;</div><div class="line"></div><div class="line">($year, $mon, $day, $hour, $min, $sec) =</div><div class="line">    &amp;time_add($year, $mon, $day, $hour, $min, $sec, $span);</div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"AFTER  $year/$mon/$day $hour:$min:$sec\n"</span>;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 子程序</span></div><div class="line"><span class="function"><span class="keyword">sub</span> <span class="title">time_add</span></span>()&#123;</div><div class="line">    <span class="keyword">my</span> ($year, $mon, $day, $hour, $min, $sec, $timespan) = @_;</div><div class="line">    <span class="keyword">my</span> ($wday, $yday, $isdast);</div><div class="line"></div><div class="line">    <span class="comment"># 函数的月份范围为 0-11</span></div><div class="line">    $mon -= <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="comment"># 计算该时刻与 1970 年 1 月 1 日午夜的秒数差</span></div><div class="line">    <span class="keyword">my</span> $time = timegm($sec, $min, $hour, $day, $mon, $year);</div><div class="line"></div><div class="line">    <span class="comment"># 将该秒数加上一个时间差</span></div><div class="line">    $time += $timespan;</div><div class="line"></div><div class="line">    <span class="comment"># 将时间差转换为具体的时刻</span></div><div class="line">    ($sec, $min, $hour, $day, $mon, $year, $wday, $yday, $isdast) = <span class="keyword">gmtime</span>($time);</div><div class="line"></div><div class="line">    <span class="comment"># 对年份和月份特殊处理</span></div><div class="line">    $year += <span class="number">1900</span>;</div><div class="line">    $mon += <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="comment"># 返回</span></div><div class="line">    <span class="keyword">return</span> ($year, $mon, $day, $hour, $min, $sec);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="参考来源">参考来源</h2>
<ol style="list-style-type: decimal">
<li><a href="http://cn.perlmaven.com/the-year-19100" target="_blank" rel="external">Perl 中的时间</a></li>
<li><a href="http://perldoc.perl.org/functions/localtime.html" target="_blank" rel="external">Perl 内置文档</a></li>
<li><a href="http://perldoc.perl.org/Time/Local.html" target="_blank" rel="external">Time::Local 模块</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Perl </tag>
            
            <tag> 时间 </tag>
            
            <tag> 模块 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用 Matlab 处理 SAC 数据的一些脚本]]></title>
      <url>http://seisman.info/matlab-scripts-for-sac.html</url>
      <content type="html"><![CDATA[<p>我是那种乖乖用 SAC 处理 sac 数据的人。身边有些老师及其学生比较喜欢用 matlab 处理 sac 数据， 故而这里还是收集一下相关脚本，以造福部分人。</p>
<a id="more"></a>
<h2 id="来源-1">来源 1</h2>
<p>其实 SAC 包中自带了一些 matlab 脚本。</p>
<p>在 <code>sac/utils</code> 目录下有四个 matlab 脚本，作者 Xiaoning Yang，具体功能看文件名，具体用法看脚本：</p>
<pre><code>getsacdata.m  padcat.m  readsac.m  writesac.m</code></pre>
<p>在 sac/aux/mat 目录有 62 个脚本文件，看上去功能很齐全，可能是 SAC 调用 matlab 引擎后可以执行的一些命令，不确定是否可以直接调用：</p>
<pre><code>arrow3d.m              GetFiles2.m          mat.m           SaveResults.m
BAZauto.m              GetFiles.m           mkAxisSymb.m    ScrollHelp.m
BAZ.m                  getMisFit.m          mkcircle.m      setAZIM.m
ButtonRelease.m        getReferenceTime.m   MLest.m         setDomain.m
CalcMLM.m              getWinPolariz.m      MLMcallback.m   setELEV.m
closePPM.m             hclose.m             mlm.m           SetFilter.m
crosshair.m            inspCallbacks.m      NextGroup.m     SetHighCorner.m
deleteDuplicatePick.m  inspector.m          plotmain.m      SetLowCorner.m
DeletePick.m           inspFigure.m         ppm3.m          SetOrder.m
DispatchButtonPress.m  inspRealPlot.m       PrevGroup.m     SetPickType.m
DispatchKeys.m         inspToolbar.m        printfig.m      SetUpSlider.m
DispatchMouseMove.m    magnifyTrces.m       quitP.m         SetWaveType.m
dispHelp.m             MainButtonPress.m    RedrawSeis.m    UpdatePPMplot.m
DoRotations.m          MainButtonRelease.m  RotateToBAZ.m   Winpolariz.m
drawRect.m             MainMouseMove.m      SacCheck.m
filterTraces.m         makeFigure.m         SaveResults2.m</code></pre>
<h2 id="来源-2">来源 2</h2>
<p>Prof. Zhigang Peng 或收集、或编写、或改写了部分 matlab 脚本，如下：</p>
<pre><code>fget_sac.m newSacHeader.m  rdSacHead.m  rdSac.m  sacfft.m  sachdr.m  sac.m wtSac.m</code></pre>
<p>下载地址位于： <a href="http://geophysics.eas.gatech.edu/people/zpeng/Teaching/MatSAC.tar.gz" target="_blank" rel="external">MacSAC.tar.gz</a></p>
<p>具体用法可以看脚本或者点击 <a href="http://geophysics.eas.gatech.edu/classes/SAC/" target="_blank" rel="external">这里</a>。</p>
<h2 id="来源-3">来源 3</h2>
<p>Prof. Michael Thorne 写了几个 matlab 脚本：</p>
<pre><code>rsac.m - Read SAC binary
wsac.m - Write SAC binary
bsac.m - Be SAC - convert Matlab array to saclab format
lh.m - List header
ch.m - Change header
p1.m - Plot traces (one plot per subplot) - Example screenshot
p2.m - Plot traces (overlay traces) - Example screenshot
marktimes.m - Calculate travel times and put in SAC header (by Sean Ford)</code></pre>
<p>下载地址：<a href="http://web.utah.edu/thorne/software.html" class="uri" target="_blank" rel="external">http://web.utah.edu/thorne/software.html</a></p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Matlab </tag>
            
            <tag> SAC技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Perl 进度条模块]]></title>
      <url>http://seisman.info/perl-progressbar.html</url>
      <content type="html"><![CDATA[<p><code>Term::ProgressBar</code> 模块是一个可以用于生成进度条的 Perl 模块。</p>
<a id="more"></a>
<p>最小脚本，展示如何最快学会使用该模块：</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env perl</span></div><div class="line"></div><div class="line"><span class="keyword">use</span> strict;</div><div class="line"><span class="keyword">use</span> warnings;</div><div class="line"><span class="keyword">use</span> Term::ProgressBar <span class="number">2.00</span>;</div><div class="line"></div><div class="line"><span class="keyword">my</span> $max = <span class="number">50000000</span>;</div><div class="line"><span class="keyword">my</span> $progress = Term::ProgressBar-&gt;new($max);</div><div class="line"></div><div class="line"><span class="keyword">my</span> $next_update = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="number">0</span>..$max) &#123;</div><div class="line">    $next_update =  $progress-&gt;update($_)    <span class="comment"># 更新进度条</span></div><div class="line">        <span class="keyword">if</span> $_ &gt;= $next_update;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$progress-&gt;update($max)          <span class="comment"># 保证进度条为 100%</span></div><div class="line">    <span class="keyword">if</span> $max &gt;= $next_update;</div></pre></td></tr></table></figure>
<p>最全脚本，包含了所有功能和设置：</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env perl</span></div><div class="line"></div><div class="line"><span class="keyword">use</span> strict;</div><div class="line"><span class="keyword">use</span> warnings;</div><div class="line"><span class="keyword">use</span> Term::ProgressBar <span class="number">2.00</span>;</div><div class="line"></div><div class="line"><span class="keyword">my</span> $max = <span class="number">50000000</span>;</div><div class="line"><span class="keyword">my</span> $progress = Term::ProgressBar-&gt;new(&#123;</div><div class="line">    <span class="string">name    =&gt;</span>   <span class="string">'Counts'</span>,   <span class="comment"># 进度条名</span></div><div class="line">    <span class="string">count   =&gt;</span>   $max,       <span class="comment"># 总数</span></div><div class="line">    <span class="string">remove  =&gt;</span>   <span class="number">0</span>,          <span class="comment"># 结束后进度条是否消失</span></div><div class="line">    <span class="string">ETA     =&gt;</span>   <span class="string">'linear'</span>,   <span class="comment"># 估计剩余时间, undef || linear</span></div><div class="line"><span class="comment">#   major_char =&gt; '=',       # major 进度条字符</span></div><div class="line"><span class="comment">#   minor_char =&gt; '*',       # minor 进度条字符</span></div><div class="line"><span class="comment">#   fh      =&gt;   \*STDERR,   # 输出的文件句柄，\*STDERR || \*STDOUT</span></div><div class="line"><span class="comment">#   term_width =&gt; 50,        # 终端宽度</span></div><div class="line"><span class="comment">#   silent  =&gt;   0,          # 若为 1，则该模块不进行任何操作</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment"># $progress-&gt;target($max*2); # 重定义 count 值</span></div><div class="line"><span class="comment"># $progress-&gt;minor(0);       # 关闭 minor 进度条</span></div><div class="line"><span class="comment"># $progress-&gt;max_update_rate(0.5);   # 两次更新的最小时间间隔 (s)</span></div><div class="line"><span class="comment"># $progress-&gt;lbrack('[');    # 进度条左符号</span></div><div class="line"><span class="comment"># $progress-&gt;rbrack(']');    # 进度条右符号</span></div><div class="line"></div><div class="line"><span class="keyword">my</span> $next_update = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="number">0</span>..$max) &#123;</div><div class="line">    <span class="keyword">if</span> ($_ % <span class="number">1000000</span> == <span class="number">0</span>) &#123;</div><div class="line">        $progress-&gt;message(          <span class="comment"># 输出信息，但保证进度条在输出信息的下方</span></div><div class="line">            <span class="keyword">sprintf</span> <span class="string">"Found %d\n"</span>, $_</div><div class="line">        );</div><div class="line">    &#125;</div><div class="line">    $next_update =  $progress-&gt;update($_)    <span class="comment"># 更新进度条</span></div><div class="line">        <span class="keyword">if</span> $_ &gt;= $next_update;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$progress-&gt;update($max)          <span class="comment"># 保证进度条为 100%</span></div><div class="line">    <span class="keyword">if</span> $max &gt;= $next_update;</div></pre></td></tr></table></figure>
<p>参考来源：</p>
<ul>
<li><a href="http://search.cpan.org/~szabgab/Term-ProgressBar-2.14/lib/Term/ProgressBar.pm" target="_blank" rel="external">CPAN</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Perl </tag>
            
            <tag> 模块 </tag>
            
            <tag> 用法 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python 多版本共存之 pyenv]]></title>
      <url>http://seisman.info/python-pyenv.html</url>
      <content type="html"><![CDATA[<p>经常遇到这样的情况：</p>
<ul>
<li>系统自带的 Python 是 2.6，自己需要 Python 2.7 中的某些特性；</li>
<li>系统自带的 Python 是 2.x，自己需要 Python 3.x；</li>
</ul>
<p>此时需要在系统中安装多个 Python，但又不能影响系统自带的 Python，即需要实现 Python 的多版本共存。<a href="https://github.com/yyuu/pyenv" target="_blank" rel="external">pyenv</a> 就是这样一个 Python 版本管理器。</p>
<a id="more"></a>
<h2 id="安装-pyenv">安装 pyenv</h2>
<p>在终端执行如下命令以安装 pyenv 及其插件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash</div></pre></td></tr></table></figure>
<p>安装完成后，根据提示将如下语句加入到 <code>~/.bashrc</code> 中:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> PYENV_ROOT=<span class="string">"<span class="variable">$HOME</span>/.pyenv"</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PYENV_ROOT</span>/bin:<span class="variable">$PATH</span>"</span></div><div class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv init -)</span>"</span></div><div class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv virtualenv-init -)</span>"</span>   <span class="comment"># 这句可以不加</span></div></pre></td></tr></table></figure>
<p>然后重启终端即可。</p>
<h2 id="安装-python">安装 Python</h2>
<h3 id="查看可安装的版本">查看可安装的版本</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv install --list</div></pre></td></tr></table></figure>
<p>该命令会列出可以用 pyenv 安装的 Python 版本。列表很长，仅列举其中几个:</p>
<pre><code>2.7.8   # Python 2 最新版本
3.4.1   # Python 3 最新版本
anaconda2-4.1.0  # 支持 Python 2.6 和 2.7
anaconda3-4.1.0  # 支持 Python 3.3 和 3.4</code></pre>
<p>其中 2.7.8 和 3.4.1 这种只有版本号的是 Python 官方版本，其他的形如 <code>anaconda2-4.1.0</code> 这种既有名称又有版本后的属于 “衍生版” 或发行版。</p>
<h3 id="安装-python-的依赖包">安装 Python 的依赖包</h3>
<p>在编译 Python 过程中会依赖一些其他库文件，因而需要首先安装这些库文件，已知的一些需要预先安装的库如下。</p>
<p>在 CentOS/RHEL/Fedora 下:</p>
<pre><code>sudo yum install readline readline-devel readline-static
sudo yum install openssl openssl-devel openssl-static
sudo yum install sqlite-devel
sudo yum install bzip2-devel bzip2-libs</code></pre>
<p>在 Ubuntu下：</p>
<pre><code>sudo apt-get update
sudo apt-get install make build-essential libssl-dev zlib1g-dev
sudo apt-get install libbz2-dev libreadline-dev libsqlite3-dev wget curl
sudo apt-get install llvm libncurses5-dev libncursesw5-dev</code></pre>
<h3 id="安装指定版本">安装指定版本</h3>
<p>用户可以使用 <code>pyenv install</code> 安装指定版本的 python。如果你不知道该用哪一个，推荐你安装 anaconda3 的最新版本，这是一个专为科学计算准备的发行版。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ pyenv install anaconda3-4.1.0 -v</div><div class="line">/tmp/python-build.20170108123450.2752 ~</div><div class="line">Downloading Anaconda3-4.1.0-Linux-x86_64.sh...</div><div class="line">-&gt; https://repo.continuum.io/archive/Anaconda3-4.1.0-Linux-x86_64.sh</div></pre></td></tr></table></figure>
<p>执行该命令后，会从给定的网址中下载安装文件 <code>Anaconda3-4.1.0-Linux-x86_64.sh</code>。但由于文件很大，通常下载需要很久。建议的做法是，先执行以上命令然后马上中断安装，这样就知道 pyenv 要下载的文件的链接。然后用户自己用其他更快的方式（比如wget、迅雷等等）从该链接中下载安装文件，并将安装文件移动到 <code>~/.pyenv/cache</code> 目录下（该目录默认不存在，用户要自行新建）。</p>
<p>以本文说的情况为例：</p>
<ol style="list-style-type: decimal">
<li>执行 <code>pyenv install anaconda3-4.1.0 -v</code> 获取下载链接</li>
<li>用wget从下载链接中获取文件 <code>Anaconda3-4.1.0-Linux-x86_64.sh</code></li>
<li>将安装包移动到 <code>~/.pyenv/cache/Anaconda3-4.1.0-Linux-x86_64.sh</code></li>
<li>重新执行 <code>pyenv install anaconda3-4.1.0 -v</code> 命令。该命令会检查 cache 目录下已有文件的完整性，若确认无误，则会直接使用该安装文件进行安装。</li>
</ol>
<p>安装过程中，若出现编译错误，通常是由于依赖包未满足，需要在安装依赖包后重新执行该命令。</p>
<h3 id="更新数据库">更新数据库</h3>
<p>在安装 Python 或者其他带有可执行文件的模块之后，需要对数据库进行更新：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pyenv <span class="built_in">rehash</span></div></pre></td></tr></table></figure>
<h3 id="查看当前已安装的-python-版本">查看当前已安装的 python 版本</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ pyenv versions</div><div class="line">* system (<span class="built_in">set</span> by /home/seisman/.pyenv/version)</div><div class="line">anaconda3-4.1.0</div></pre></td></tr></table></figure>
<p>其中的星号表示当前正在使用的是系统自带的 python。</p>
<h3 id="设置全局的-python-版本">设置全局的 python 版本</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ pyenv global anaconda3-4.1.0</div><div class="line">$ pyenv versions</div><div class="line">system</div><div class="line">* anaconda3-4.1.0 (<span class="built_in">set</span> by /home/seisman/.pyenv/version)</div></pre></td></tr></table></figure>
<p>当前全局的 python 版本已经变成了 anaconda3-4.1.0。也可以使用 <code>pyenv local</code> 或 <code>pyenv shell</code> 临时改变 python 版本。</p>
<h3 id="确认-python-版本">确认 python 版本</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ python</div><div class="line">Python 3.5.2 (Anaconda 4.1.0, Sep 10 2014, 17:10:18)</div><div class="line">[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux</div><div class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure>
<h2 id="使用-python">使用 python</h2>
<ul>
<li>输入 <code>python</code> 即可使用新版本的 python；</li>
<li>系统自带的脚本会以 <code>/usr/bin/python</code> 的方式直接调用老版本的 python，因而不会对系统脚本产生影响；</li>
<li>使用 <code>pip</code> 安装第三方模块时会自动按照到当前的python版本下，不会和系统模块发生冲突。</li>
<li>使用 <code>pip</code> 安装模块后，可能需要执行 <code>pyenv rehash</code> 更新数据库；</li>
</ul>
<h2 id="pyenv-其他功能">pyenv 其他功能</h2>
<ol style="list-style-type: decimal">
<li><code>pyenv uninstall</code> 卸载某个版本</li>
<li><code>pyenv update</code> 更新 pyenv 及其插件</li>
</ol>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="https://github.com/yyuu/pyenv" class="uri" target="_blank" rel="external">https://github.com/yyuu/pyenv</a></li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-10-04：初稿；</li>
<li>2014-10-07：将 Python 依赖包一段的位置提前；</li>
<li>2016-07-30：使用 <code>pyenv-installer</code> 安装；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> 安装 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[全球地壳模型 crust 1.0]]></title>
      <url>http://seisman.info/global-crustal-model-crust1.html</url>
      <content type="html"><![CDATA[<p>crust 1.0 是一个全球的三维地壳模型，其分辨率是 1 度。更老的版本还有分辨率低一些的 crust 5.1 和 crust 2.0。</p>
<p>官方网址：<a href="http://igppweb.ucsd.edu/~gabi/crust1.html" class="uri" target="_blank" rel="external">http://igppweb.ucsd.edu/~gabi/crust1.html</a></p>
<a id="more"></a>
<h2 id="模型基本信息">模型基本信息</h2>
<ul>
<li>模型将全球划分为 1 度 x1 度的网格，共计 360x180=64800 个单元；</li>
<li>模型分为 9 层，每一层给出 P 和 S 波速度以及密度。这 9 层分别为
<ol style="list-style-type: decimal">
<li>水层；</li>
<li>冰层；</li>
<li>上沉积层；</li>
<li>中沉积层；</li>
<li>下沉积层；</li>
<li>上地壳；</li>
<li>中地壳；</li>
<li>下地壳；</li>
<li>地幔</li>
</ol></li>
<li>模型中的海水深度和地形数据来自于 NOAA 的 etopo1 数据；etopo1 是 1 分精度的全球地形起伏模型， crust1.0 从该模型中提取海水深度和地形数据，做平均处理得到 1 度单元内的值；</li>
<li>模型中的冰层厚度来源于 etopo1 的 bedrock 和 ice surface 两个模型的差值；</li>
<li>地幔的参数，来自于 LLNL-G3Dv3 模型；</li>
<li>模型中还包含了每个单元的地壳类型信息；地壳类型信息可能主要由地壳年龄决定；</li>
</ul>
<h2 id="下载">下载</h2>
<p>crust1.0 提供了多个压缩包，分别包含了不同的内容：</p>
<ol style="list-style-type: decimal">
<li>crust1.0.tar.gz：主压缩包，包含了全球地壳速度和密度模型；</li>
<li>crust1.0-addon：附加包，包含了全球地壳类型模型；</li>
<li>crsthk.xyz：地壳厚度的 XYZ 文件（不含水厚度）；</li>
<li>depthtomoho.xyz：Moho 深度的 XYZ 文件（相对于海平面）；</li>
<li>sedthk.xyz：沉积层厚度的 XYZ 文件（单位 km）；</li>
<li>sedthk-m.xyz：沉积层厚度 XYZ 文件（单位为 m）；</li>
</ol>
<h2 id="crust1.0">crust1.0</h2>
<p>crust1.0 中含说明文档 readme 一份，模型文件四个，用于读取模型的 Fortran 代码三个。</p>
<h3 id="模型">模型</h3>
<p>模型文件有四个，从模型文件的名字也可以猜出来，四个文件分别是 Vp、Vs、密度和边界的深度。</p>
<ul>
<li>全球被划分为 1 度 x1 度的网格单元；</li>
<li>网格点定义在单元的中心，即纬度 5-6 度、经度 150-151 度的单元的值位于网格点 (5.5,150.5) 处，也就是 GMT 中所说的像素配准；</li>
<li>全球共计 360*180 个单元；</li>
<li>数据点按照经度优先的准则保存，即在循环时先循环纬度，再循环经度；</li>
<li>第一个点的坐标为 (179.5W,89.5N)，第二个点的坐标是 (178.5,89.5)，依次类推；</li>
<li>每个模型文件中共有 64800 行，对应 64800 个单元，每行 9 列，对应每一层的值；</li>
<li><code>crust1.bnds</code>
<ul>
<li>第一列：水层<strong>上</strong>边界的海拔</li>
<li>第二列：水层<strong>下</strong>边界的海拔</li>
<li>第三列：冰层<strong>下</strong>边界的海拔</li>
<li>第四列：上沉积层<strong>下</strong>边界的海拔</li>
<li>第五列：中沉积层<strong>下</strong>边界的海拔</li>
<li>第六列：下沉积层<strong>下</strong>边界的海拔</li>
<li>第七列：上地壳<strong>下</strong>边界的海拔</li>
<li>第八列：中地壳<strong>下</strong>边界的海拔</li>
<li>第九列：下地壳<strong>下</strong>边界的海拔</li>
</ul></li>
</ul>
<h3 id="程序">程序</h3>
<h4 id="编译代码">编译代码</h4>
<p>使用如下命令编译:</p>
<pre><code>gfortran getCN1point.f -o getCN1point</code></pre>
<p>其他同理。</p>
<h4 id="getcn1point">getCN1point</h4>
<p><code>getCN1point</code> 用于获取任意经纬度处的地壳模型，具体用法如下例:</p>
<pre><code>$ ./getCN1point
  .... reading all maps ...
 enter center lat, long of desired tile (q to quit)
50 100
#注意纬度在前，经度在后；如果搞反了，第一个值超过了 90，程序也不会报错而是 “正常地” 显示结果
ilat,ilon,crustal type:   41 281
 topography:    1.6400000
  layers: vp,vs,rho,bottom
   1.50   0.00   1.02   1.64
   3.81   1.94   0.92   1.64
   2.50   1.07   2.11   1.54
   0.00   0.00   0.00   1.54
   0.00   0.00   0.00   1.54
   6.10   3.55   2.74 -19.54
   6.30   3.65   2.78 -38.22
   7.00   3.99   2.95 -46.36
 pn,sn,rho-mantle:    7.99   4.44   3.30
 enter center lat, long of desired tile (q to quit)</code></pre>
<h4 id="getcn1maps">getCN1maps</h4>
<p><code>getCN1maps</code> 从 4 个模型文件中提取信息，生成多个 Z 文件。</p>
<ol style="list-style-type: decimal">
<li>生成各层的 Vp、Vs、<span class="math inline">\(\rho\)</span>、边界深度，计 4*9=36 个文件，文件名 map-vp[n] 代表第 n 层的 Vp，其他类似；</li>
<li>生成各层的厚度，计 1*8 个文件，文件名类似 map-th[n]，第 n 层的厚度由第 n+1 个边界的深度减去第 n 个边界的深度的结果取负值得到；</li>
<li>生成沉积层厚度 sedthk，由 3-5 层的厚度相加得到；</li>
<li>地壳厚度 crsthk：冰层 + 沉积层 + 6-8 层厚度</li>
</ol>
<p>生成的 46 个文件均为 ASCII 格式，只有 Z 值，没有经纬度坐标。可以通过 GMT 的 <code>xyz2grd</code> 命令转换成 GMT 可识别的 netCDF 格式。</p>
<p>GMT4:</p>
<pre><code>xyz2grd crsthk -Rd -I1/1 -Gout.grd -ZTLA -F -V</code></pre>
<p>GMT5:</p>
<pre><code>gmt xyz2grd crsthk -Rd -I1/1 -Gout.grd -ZTLA -r -V</code></pre>
<p>说明：</p>
<ol style="list-style-type: decimal">
<li>使用 <code>-Rd</code> 或 <code>-R-180/180/-90/90</code> 均可，但不可使用 <code>-Rg</code> ；</li>
<li>注意 <code>-ZTLA</code> 选项的含义；</li>
<li>GMT5.1.1 的 xyz2grd 存在 Bug，因而该命令仅在 GMT5.1.2 及其之后版本中可用。</li>
</ol>
<h4 id="getcn1xyz">getCN1xyz</h4>
<p>与 <code>getCN1maps</code> 生成类似的文件，只是此时的文件为 xyz 文件，每行三列。文件名以 xyz 开头或结尾。XYZ 文件相对来说更易读，因而推荐使用 <code>getCN1xyz</code> 而不是 <code>getCN1maps</code> 。</p>
<p>将 xyz 文件转换为 GMT 可识别的网格文件，使用 <code>xyz2grd</code> 。注意与上面命令的区别。</p>
<p>GMT 4:</p>
<pre><code>xyz2grd crsthk.xyz -Rg -I1/1 -Gout.grd -F -V</code></pre>
<p>GMT 5:</p>
<pre><code>gmt xyz2grd crsthk.xyz -Rg -I1/1 -Gout.grd -r -V</code></pre>
<h2 id="说明">说明</h2>
<p>程序输出的地壳模型还是很让人困惑的，这里用 <code>getCN1point</code> 获得的某一点的模型，并对输出结果做细致地解释。</p>
<p>对于 (100.5E, 50.5N) 来说:</p>
<pre><code>$ ./getCN1point
  .... reading all maps ...
 enter center lat, long of desired tile (q to quit)
50.5 100.5
ilat,ilon,crustal type:   40 281
 topography:    1.80999994
  layers: vp,vs,rho,bottom
   1.50   0.00   1.02   1.81
   3.81   1.94   0.92   1.81
   2.50   1.07   2.11   1.71
   0.00   0.00   0.00   1.71
   0.00   0.00   0.00   1.71
   6.10   3.55   2.74 -18.93
   6.30   3.65   2.78 -37.22
   7.00   3.99   2.95 -45.19
 pn,sn,rho-mantle:    7.96   4.43   3.28</code></pre>
<p>需要注意，第四列给出的是每一层的<strong>下边界</strong>的海拔。记住这一点，就可以从输出中提取出很多信息：</p>
<ol style="list-style-type: decimal">
<li>这一点的地形为 1.81 km，注意，这里实际上是一度范围内的平均地形；</li>
<li>水层的下边界深度是 1.81 km，与地形相同，所以水层厚度为零；</li>
<li>冰层的下边界深度是 1.81 km，与水层的下边界深度相同，所以冰层厚度为零；</li>
<li>上沉积层的下边界深度是 1.71 km，所以上沉积层厚度为 0.1 km；</li>
<li>中沉积层和下沉积层厚度均为 0 km；</li>
<li>上地壳的下边界深度为 18.93 km，算是地形并减去沉积层，上地壳的厚度是 20.64 km；</li>
<li>中地壳厚度为 18.29 km，下地壳的厚度为 7.97 km；</li>
</ol>
<p>几个常见的疑问：</p>
<ol style="list-style-type: decimal">
<li><p>为何中、下沉积层的速度和密度为零？</p>
<p>因为此处中、下沉积层的厚度为零，即不存在这两层，不存在的东西当然不用给速度和密度了。</p></li>
<li><p>为何水层和冰层的厚度为零，但是却有速度和密度？</p>
<p>虽然此处水层和冰层的厚度为零，但是因为水和冰的速度和密度在全球范围内是一个常数， 所以虽然这里没有水和冰，还是可以给一个正确的速度和密度的。不像沉积层，不同地方的 速度和密度差很大。这一点可以通过查看全球水层和冰层的速度和密度极值来验证。</p></li>
</ol>
<h2 id="绘图示例">绘图示例</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">gmt grd2cpt out.grd -Cpolar &gt; out.cpt</div><div class="line">gmt grdimage out.grd -Rd -JN6i -Bx60 -By30 -Cout.cpt -V -K &gt; a.ps</div><div class="line">gmt pscoast -R -J -W0.1p -O &gt;&gt; a.ps</div></pre></td></tr></table></figure>
<p>没有认真选择 cpt 文件，看上去效果不好，从细节上看，数据的转换是没有问题的。</p>
<div class="figure">
<img src="/images/2013100301.png">

</div>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-10-03：初稿；</li>
<li>2014-06-10：加入了 GMT5 的命令；</li>
<li>2015-05-14：重新整理了文章结构，并对模型做更细致解释；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
            <tag> 数据 </tag>
            
            <tag> 网格 </tag>
            
            <tag> 模型 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[全球地形起伏数据总结]]></title>
      <url>http://seisman.info/global-relief-models.html</url>
      <content type="html"><![CDATA[<p>本文收集了已知的可公开下载使用的全球地形起伏数据。</p>
<a id="more"></a>
<p>这里有个概念是混乱的。有些数据只有陆地部分的地形，有些数据有陆地和海洋的地形， 或许前者应该称为数字高程数据，后者称为地形起伏数据。做大地测量的应该更清楚这些 专业名词。这里统称为地形数据。</p>
<p>博客中提到的地形数据，按照分辨率从低到高排序如下：</p>
<ul>
<li>etopo5：<a href="/global-relief-model-etopo5.html">GMT 网格数据之 etopo5</a></li>
<li>etopo2：<a href="/global-relief-model-etopo2.html">GMT 网格数据之 ETOPO2v2</a></li>
<li>etopo1：<a href="/global-relief-model-etopo1.html">GMT 网格数据之 ETOPO1</a></li>
<li>GEBCO：<a href="/gebco-global-bathymetry-data.html">GEBCO：全球水深数据</a></li>
<li>GTOPO30：<a href="/global-digital-elevation-model-gtopo30.html">GMT 网格数据之 GTOPO30</a></li>
<li>SRTM30_PLUS：<a href="/srtm30-plus.html">全球地形起伏数据：SRTM30_PLUS</a></li>
<li>SRTM15_PLUS：<a href="/srtm15-plus.html">全球地形起伏数据：SRTM15_PLUS</a></li>
<li>SRTM3：<a href="/srtm.html">高精度地形网格数据 SRTM</a></li>
<li>ASTER GDEM：<a href="/aster-gdem.html">全球数字高程数据：ASTER GDEM</a></li>
</ul>
<p>整理如下表：</p>
<table>
<thead>
<tr class="header">
<th align="left">数据源</th>
<th align="left">空间分辨率</th>
<th align="left">覆盖范围</th>
<th align="left">陆地 / 海洋</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">etopo5</td>
<td align="left">5 弧分</td>
<td align="left">全球</td>
<td align="left">陆地 + 海洋</td>
</tr>
<tr class="even">
<td align="left">etopo2</td>
<td align="left">2 弧分</td>
<td align="left">全球</td>
<td align="left">陆地 + 海洋</td>
</tr>
<tr class="odd">
<td align="left">etopo1</td>
<td align="left">1 弧分</td>
<td align="left">全球</td>
<td align="left">陆地 + 海洋</td>
</tr>
<tr class="even">
<td align="left">GEBCO</td>
<td align="left">1 弧分 / 30 弧秒</td>
<td align="left">全球</td>
<td align="left">陆地 + 海洋</td>
</tr>
<tr class="odd">
<td align="left">GTOPO30</td>
<td align="left">30 弧秒</td>
<td align="left">全球</td>
<td align="left">陆地</td>
</tr>
<tr class="even">
<td align="left">SRTM30_PLUS</td>
<td align="left">30 弧秒 (约 1km)</td>
<td align="left">纬度 [-81,81]</td>
<td align="left">陆地 + 海洋</td>
</tr>
<tr class="odd">
<td align="left">SRTM15_PLUS</td>
<td align="left">15 弧秒 (约 500m)</td>
<td align="left">纬度 [-81,81]</td>
<td align="left">陆地 + 海洋</td>
</tr>
<tr class="even">
<td align="left">SRTM</td>
<td align="left">3 弧秒 (约 90m)</td>
<td align="left">纬度 [-60,60]</td>
<td align="left">陆地</td>
</tr>
<tr class="odd">
<td align="left">ASTER GDEM</td>
<td align="left">1 弧秒 (约 30m)</td>
<td align="left">纬度 [-83,83]</td>
<td align="left">陆地</td>
</tr>
</tbody>
</table>
<p>说明如下：</p>
<ul>
<li>GEBCO 是目前空间分辨率最高的全球地形起伏数据；</li>
<li>ASTER GDEM 是目前空间分辨率最高的数字高程数据；</li>
<li>对于全球尺度或者大尺度地形图来说，可以使用 etopo1 甚至 etopo5 数据；</li>
<li>对于 3 度 *3度-10度*10 度的区域，可以使用 SRTM30_PLUS 数据；</li>
<li>对于 3 度 *3 度以下的区域，可以使用 SRTM 或 ASTER GDEM 数字数据。</li>
<li>如果有特殊需求的话，可以用 ASTER GDEM 绘制陆地地形，用 GEBCO 绘制海底地形；</li>
</ul>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-09-30：初稿；</li>
<li>2015-04-07：增加了 SRTM15_PLUS；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据 </tag>
            
            <tag> 地形 </tag>
            
            <tag> 网格 </tag>
            
            <tag> 高程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[高精度地形网格数据 SRTM]]></title>
      <url>http://seisman.info/srtm.html</url>
      <content type="html"><![CDATA[<p>SRTM，全称为 Shuttle Radar Topography Mission，该项目获取了北纬 60 度至南纬 60 度之间的 雷达影像数据，进一步处理制成了数字地形高程模型（DEM），即现在的 SRTM 地形产品数据。 该数据产品 2003 年开始公开发布，经过多次修订，目前的数据修订版本为 V4.1 版本。更详细的介绍在 <a href="http://www.cgiar-csi.org/data/srtm-90m-digital-elevation-database-v4-1" target="_blank" rel="external">这里</a>。</p>
<a id="more"></a>
<h2 id="相关信息">相关信息</h2>
<p>有很多机构或网站提供 SRTM 地形数据的下载；从不同网站下载的数据的文件名、文件格式等不同， 因而后期的数据处理方式可能不同，但是一些基本的信息应该是相同的。</p>
<h3 id="基本信息">基本信息</h3>
<p>SRTM 地形数据主要包含两类数据：SRTM3 和 SRTM1。</p>
<ul>
<li>SRTM3 精度为 3 弧秒，即 90m 一个点，包括非洲、北美、南美、欧亚、澳大利亚以及部分岛屿；</li>
<li>SRTM1 精度为 1 弧秒，即 30m 一个点，仅限美国地区；</li>
</ul>
<h3 id="数据信息-for-1x1">数据信息 For 1x1</h3>
<p>北纬 60 度到南纬 60 度的数据被分成了 1 度 *1 度的单元，共计上万个数据文件。</p>
<ul>
<li>文件名中包含了该单元左下角位置的信息；比如文件名<strong>类似</strong>N37W105 的数据文件，其单元左下角的坐标为 (37N,105W)；</li>
<li>每个 SRTM3 数据文件包含了 1201*1201 个采样点；</li>
<li>高程数据单位为 m，参考水准面为 WGS84 大地水准面模型；</li>
<li>网格划分采用 gridline registration 方式，因而单元的南北边及左右边与相邻单元的边重合。</li>
</ul>
<h3 id="数据信息-for-5x5">数据信息 For 5x5</h3>
<p>部分网站将数据分割为 5 度 *5度单元，其相对1度*1 度单元使用起来免去了 cut 和 paste 的麻烦。 在经度方向上，从 - 180 度到 180 度，划分为 72 个区块；在纬度方向上，从 60 度到 - 60 度，划分为 24 个区块， 可以参考 <a href="http://srtm.csi.cgiar.org/SELECTION/inputCoord.asp" target="_blank" rel="external">这里</a> 的图示， 其文件名格式为 <code>srtm_经度区块数_纬度区块数. zip</code>。</p>
<p>或者也可以这样计算:</p>
<pre><code>x = int((lon+180.0)/5.0)+1;
y = int((60-lat)/5.0)+1;</code></pre>
<p>其中 lon = [-180,180], lat= [-60,60], 文件名为 <code>srtm_x_y.zip</code> 。</p>
<h2 id="数据来源及格式转换推荐">数据来源及格式转换（推荐）</h2>
<p>推荐两个数据源。其中 CGIAR-CSI 为主站，中科院提供数据镜像。</p>
<h3 id="cgiar-csi">CGIAR-CSI</h3>
<p><strong>网址：</strong> <a href="http://srtm.csi.cgiar.org/SELECTION/inputCoord.asp" class="uri" target="_blank" rel="external">http://srtm.csi.cgiar.org/SELECTION/inputCoord.asp</a></p>
<p><strong>版本：</strong>4.1</p>
<p><strong>格式：</strong> <code>GeoTiff</code> 、 <code>ArcInfo ASCII</code></p>
<p><strong>备注：</strong></p>
<ul>
<li>数据为 5 度 x5 度一个单元；</li>
<li>数据选择界面友好，简单易用，支持鼠标点选、拖曳或者直接输入经纬度范围；</li>
<li>鼠标点选的注意事项：鼠标的真实点击位置与地图感知到的点击位置大概相差半个网格间距！点选时需要单击每个单元的下半部分才能选中。不知 Bug 来源，系统问题？浏览器问题？</li>
<li>下载数据的时候选择 HTTP 下载方式。若使用 FTP 下载方式需要首先申请用户名和密码。</li>
<li>提供 <code>ArcInfo ASCII</code> 和 <code>GeoTiff</code> 两种数据格式，需要转换方可在 GMT 中使用。</li>
<li><code>ArcInfo ASCII</code> 格式的数据可以使用 GMT 自带的 <code>xyz2grd</code> 命令转换成 netCDF 格式；</li>
<li><code>Geotiff</code> 格式的数据需要使用 GDAL 提供的命令 <code>gdal_translate</code> 转换为 netCDF 格式；</li>
<li>推荐使用 <code>GeoTiff</code> 格式，文件尺寸相对于 <code>ArcInfo ASCII</code> 文件要小很多；</li>
</ul>
<p><strong>数据转换：</strong></p>
<p>ArcInfo ASCII 格式：</p>
<p>GMT4 提供的 xyz2grd 命令可以直接将 ArcInfo ASCII 格式的数据转换为 GMT 可识别的 netCDF 格式:</p>
<pre><code>xyz2grd srtm_63_02.asc -Gstrm_63_02.grd -E -V</code></pre>
<p>GMT5 的 xyz2grd 不再支持 ArcInfo ASCII 格式，但可使用 gdal 实现转换。</p>
<p>GeoTiff 格式转 netCDF 格式（详情参考 <a href="/convert-geotiff-to-gmt.html">本文</a>）:</p>
<pre><code>gdal_translate -of GMT srtm_56_05.tif srtm_56_05.grd</code></pre>
<p><strong>数据合并：</strong></p>
<p>有时需要将多个数据合并成更大区域的数据。常见的做法是先将每个 GeoTiff 文件转换成 netCDF 格式， 然后利用 grdcut 和 grdpaste 进行裁剪与合并。实际操作时，合并总会遇到一些问题， 可能是由于数据的转换过程中存在问题导致的。</p>
<p>推荐的做法是先将多个 GeoTiff 文件合并起来，然将合并后的 GeoTiff 文件转换成 netCDF 格式。</p>
<p>合并 GeoTiff 文件可以用 <a href="http://gdal.org/gdal_merge.html" target="_blank" rel="external">gdal_merge.py</a>，CentOS 下要安装 <code>gdal-python</code> ；Ubuntu 下要安装 <code>python-gdal</code> 或 <code>python3-gdal</code>。转换命令如下:</p>
<pre><code>gdal_merge.py -init 255 -o out.tif srtm_56_07.tif srtm_57_07.tif</code></pre>
<p><strong>FTP批量下载：</strong></p>
<p>CGIAR-CSI 提供了 ftp 地址，可以一次性下载全部数据，数据总大小约 14G。 有需要的可以 <a href="https://harvestchoice.wufoo.com/forms/download-cgiarcsi-srtm" target="_blank" rel="external">申请</a>。</p>
<p>申请之后，网站会提供一个网址，以及用户名和密码，可以使用 “Firefox+DownloadThemAll” 下载，也可以使用如下命令下载:</p>
<pre><code>wget -c -r -np --user=xxx --password=xxxxx http://data.cgiar-csi.org/srtm/tiles</code></pre>
<p><strong>Box网盘下载</strong></p>
<p>CGIAR 同时提供了 Box 网盘下载。Box 网盘中包含了重采样之后的数据，数据精度有 250m、500m 和 1km 三种，以满足其他人的需求。</p>
<p>网盘地址：https://hc.box.com/shared/1yidaheouv</p>
<p>密码 (注意感叹号)： <code>ThanksCSI!</code></p>
<h3 id="中国科学院计算机网络信息中心">中国科学院计算机网络信息中心</h3>
<p><strong>国际科学数据服务平台：</strong> <a href="http://datamirror.csdb.cn/dem/search.jsp" class="uri" target="_blank" rel="external">http://datamirror.csdb.cn/dem/search.jsp</a></p>
<p><strong>版本：</strong> V4 和 V4.1</p>
<p><strong>格式：</strong> Geotiff 和 ArcInfo ASCII</p>
<p><strong>备注：</strong></p>
<ul>
<li>该网站需要注册才可下载数据；</li>
<li>数据是 5 度 *5度一个单元，而不是标准的1度*1 度；</li>
<li>在中国区域，还提供一些衍生数据，如坡度、坡向、坡位，数据格式为 img 格式，细节未知；</li>
</ul>
<h2 id="其他数据来源及格式转换不推荐">其他数据来源及格式转换（不推荐）</h2>
<p>这里列举了其他的一些数据来源，不推荐在这些网站下载数据。这里列出来是基于其他方面的考虑。</p>
<h3 id="usgs-未名网站">USGS 未名网站</h3>
<p><strong>网址：</strong><a href="http://dds.cr.usgs.gov/srtm" class="uri" target="_blank" rel="external">http://dds.cr.usgs.gov/srtm</a></p>
<p><strong>版本：</strong>1.0 和 2.1 版本</p>
<p><strong>格式：</strong>二进制 z 文件</p>
<ul>
<li>高程数据文件的扩展名为 hgt；</li>
<li>二进制文件，以有符号二字节整型格式存储。</li>
<li>无数据的点其值赋为 - 32768；</li>
<li>字节序为 big-endian。</li>
<li>数据存储方式为行优先；</li>
</ul>
<p><strong>数据转换：</strong></p>
<p>这个例子选用的数据是 N52E130.hgt，北纬、东经，-R=130/131/52/53，对于南纬或者西经要注意负号。-Z 后使用 TL 是实践的结果，官方文档中没有给出相关信息。</p>
<pre><code>xyz2grd N52E130.hgt -GN52E130.grd -I3c/3c -R130/131/52/53 -N-32768 -ZTLhw</code></pre>
<h3 id="usgs-earthexplorer">USGS EarthExplorer</h3>
<p><strong>网址：</strong><a href="http://earthexplorer.usgs.gov" class="uri" target="_blank" rel="external">http://earthexplorer.usgs.gov</a></p>
<p><strong>版本：</strong>?.?</p>
<p><strong>格式：</strong>Geotiff、DTED、BIL</p>
<p><strong>备注：</strong></p>
<p>Geotiff、DTED 需要专门软件处理；BIL 格式本质上就是一般的二进制文件，因而处理方式与 hgt 文件类似，但是有一些细节上的差异：</p>
<ol style="list-style-type: decimal">
<li>水平方向精度为 6 弧秒，而不是标准的 3 弧秒；</li>
<li>字节序为 little endian；</li>
</ol>
<p><strong>数据转换：</strong></p>
<p>将 BIL 格式转换为 GMT grid 格式:</p>
<pre><code>xyz2grd n52_e130_3arc_v1.bil -GN52E130.grd -I6c/3c -R$R -N-32768 -ZTLh</code></pre>
<h2 id="小结">小结</h2>
<ul>
<li>在 5 度 x5 度尺度下，SRTM3 与 GTOPO30 的效果相当，因而当地图范围大于 5 度 x5 度时，没有必要使用 SRTM3 数据；</li>
<li>当地图范围小于 3 度 x3 度时，GTOPO30 成图粗糙，需要使用 SRTM3 或者更高精度的数据；</li>
<li>中国科学院的数据源实际上是 cgiar-csi 数据源的一个镜像，其在国内下载速度相对较快。 数据源以 5 度 *5 度的形式提供数据，免去了用户自己做网格合并的麻烦，推荐使用。（发文章的时候需要致谢数据来源）</li>
</ul>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="http://dds.cr.usgs.gov/srtm/version2_1/Documentation/Quickstart.pdf" class="uri" target="_blank" rel="external">http://dds.cr.usgs.gov/srtm/version2_1/Documentation/Quickstart.pdf</a></li>
<li><a href="http://dds.cr.usgs.gov/srtm/version2_1/Documentation/SRTM_Topo.pdf" class="uri" target="_blank" rel="external">http://dds.cr.usgs.gov/srtm/version2_1/Documentation/SRTM_Topo.pdf</a></li>
<li><a href="http://www.cgiar-csi.org/data/srtm-90m-digital-elevation-database-v4-1" class="uri" target="_blank" rel="external">http://www.cgiar-csi.org/data/srtm-90m-digital-elevation-database-v4-1</a></li>
<li><a href="http://gdal.org/gdal_merge.html" target="_blank" rel="external">gdal_merge</a></li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-09-29：初稿；</li>
<li>2014-01-01：“中国科学院计算机网络信息中心” 一节代码存在问题，因网址无法访问，暂时无法修订；</li>
<li>2014-01-08：增加了 CGIAR-CSI 数据源；</li>
<li>2014-01-09：新增了三个下载数据源，重整文章结构，将数据源分为推荐和非推荐两类。</li>
<li>2014-01-19：将 CGIAR 的 ftp 和 Box 下载移至不推荐来源中。</li>
<li>2014-01-19：重新编排整个文章的结构，将正确性证明部分去除。当初做正确性证明是因为在将 USGS 未名网站提供的数据转换为网格文件时，官方文档提供的信息不充分，所以需要测试验证。现在 SRTM 存在更好的数据源，不必再考虑这个问题。</li>
<li>2014-05-22：调整文章结构。由于中科院的数据源一直没有修复，因而仅推荐使用 CGIAR 的数据；</li>
<li>2015-01-15：新增 <code>gdal_merge.py</code> ，用于合并 GeoTiff 文件；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 格式转换 </tag>
            
            <tag> GMT </tag>
            
            <tag> 数据 </tag>
            
            <tag> 地形 </tag>
            
            <tag> 网格 </tag>
            
            <tag> 高程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[图像格式转换工具 convert]]></title>
      <url>http://seisman.info/imagemagick-convert.html</url>
      <content type="html"><![CDATA[<p>GMT 中 <code>psconvert</code> 可以将 GMT 生成的 PS 文件转换成其他常见的图片格式。一般情况下，如果只用 GMT 做图的话， <code>psconvert</code> 基本可以满足需求了。</p>
<p>遇到几个特殊的情况如下：</p>
<ul>
<li>GMT 中设置纸张背景色 <code>PS_PAGE_COLOR</code>，此时 <code>psconvert</code> 无法实现切边；</li>
<li>用其他软件绘图，比如 LaTeX 的 TikZ/PGF 包，得到 PS 或 PDF 文件，无法使用 <code>psconvert</code> 实现格式转换；</li>
<li>…</li>
</ul>
<p>这个时候就需要使用 ImageMagick 提供的 <code>convert</code> 命令。</p>
<a id="more"></a>
<p><code>psconvert</code> 中常用的选项有 <code>-A</code>、<code>-E</code>、<code>-T</code>、<code>-P</code>。 <code>convert</code> 众多选项中与之对应的选项如下：</p>
<ul>
<li><strong>-trim：</strong>切边，等效于 <code>psconvert</code> 的 <code>-A</code> 选项；其可以解决上面的第一个问题；</li>
<li><strong>-density</strong> <em>width</em><strong>x</strong><em>height</em>：设置图像精度，等效于 <code>psconvert</code> 的 <code>-E</code> 选项； 按照 GMT 的惯例，<code>width=300</code> 即可，<code>height</code> 可以指定或不指定。注意 <code>width</code> 和 <code>height</code> 中间的字符是字母 <code>x</code>；</li>
<li><strong>-rotate</strong><em>degree</em>：实现图像旋转，<code>-rotate 90</code> 等效于 <code>psconvert</code> 的 <code>-P</code> 选项，当然 rotate 可以旋转各种角度。</li>
<li>convert 没有与 <code>psconvert</code> 中 <code>-T</code> 相应的选项，因为 convert 通过识别后缀直接进行转换；<a href="http://www.imagemagick.org/script/formats.php" target="_blank" rel="external">这里</a> 列出了 convert 支持的上百种图像 / 动画格式。</li>
</ul>
<p>下面给出最常用的一个例子：</p>
<pre><code>convert -trim -density 300 -rotate 90 test.ps test.png</code></pre>
<p>其等效于</p>
<pre><code>gmt psconvert -A -E300 -P -Tg test.ps</code></pre>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> 格式转换 </tag>
            
            <tag> 图像 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地震学断层的定义]]></title>
      <url>http://seisman.info/faults-in-seismology.html</url>
      <content type="html"><![CDATA[<p>地震学中最重要的源是 double couple 源，也就是常说的位错源，位错源的产生实质就是断层的滑动。</p>
<p>断层及断层的滑动有几个基本参数：走向、倾角、滑移角以及滑移量。很多参数，地震学和地质学中的定义不同， 即便是地震学里也有不同的定义。Aki and Richards (1980) 的定义应该是用得最多的定义。</p>
<a id="more"></a>
<h2 id="aki-and-richards-对断层的定义">Aki and Richards 对断层的定义</h2>
<p>Aki and Richards (1980) 对于断层参数的定义如下图:</p>
<div class="figure">
<img src="/images/2013092601.jpg">

</div>
<h2 id="断层几何">断层几何</h2>
<p>断层的几何形态由走向（strike）和倾角（dip）两个量完全决定。</p>
<p>一个断层有两个表面，分别称之为上盘（hanging wall）和下盘（foot wall），图中所示为断层的 foot wall。</p>
<p>断层面与水平地表面存在一交线，一条线存在两个方向，哪个方向才是真正的走向呢？地震学里的定义是 “当观测 者沿着走向方向看时，hanging wall 位于观测者的右手边”。这样的定义唯一确定了一个方向为走向方向。 走向（strike）的角度定义为正北方向顺时针旋转到走向方向的角度，即图中的 <span class="math inline">\(\phi_s\)</span>，其中 <span class="math inline">\(\phi_s \in [0,2\pi)\)</span>。</p>
<p>倾角 dip 的定义为：从水平面向下旋转到断层面的角度，即图中的 <span class="math inline">\(\delta\)</span>。因此有 <span class="math inline">\(0\le\delta\le\pi/2\)</span>。</p>
<h2 id="断层滑动">断层滑动</h2>
<p>断层的滑移 <span class="math inline">\(\mathbf{u}\)</span> 是一个矢量，定义为 “断层上盘（hanging wall）相对于下盘（foot wall）的滑动”。 一般取 <span class="math inline">\(\mathbf{u}\)</span> 的大小为滑移量 u，取 <span class="math inline">\(\mathbf{u}\)</span> 的方向为滑动方向，而滑移角（rake）即定义为断层 走向与滑动方向之间的夹角，即图中 <span class="math inline">\(\lambda\)</span>。注意这里滑移角 rake 是逆时针计算的。rake 的取值范围为 <span class="math inline">\(-\pi &lt; \lambda &lt; \pi\)</span>。</p>
<h2 id="断层的命名">断层的命名</h2>
<p>大部分断层属于正断层或者逆断层，一些特殊的断层是走滑或倾滑断层：</p>
<ul>
<li>逆断层（reversed fault）：<span class="math inline">\(\lambda\in(0,\pi)\)</span> 且 <span class="math inline">\(\delta \ne 0 \ne \frac{\pi}{2}\)</span></li>
<li>正断层（normal fault）：<span class="math inline">\(\lambda\in(-\pi,0)\)</span> 且 <span class="math inline">\(\delta \ne 0 \ne \frac{\pi}{2}\)</span></li>
<li>走滑断层（strike-slip fault）：<span class="math inline">\(\lambda=0\)</span> 或 <span class="math inline">\(\lambda=\pi\)</span></li>
<li>倾滑断层（dip-slip fault）：断层滑动方向垂直于走向，即 <span class="math inline">\(\lambda=\frac{\pi}{2}\)</span> 或 <span class="math inline">\(\lambda=-\frac{\pi}{2}\)</span></li>
</ul>
<p>对于走滑断层和倾滑断层，存在一些特例：</p>
<p>对于走滑断层，有 <span class="math inline">\(\lambda=0\)</span> 或 <span class="math inline">\(\lambda=\pi\)</span>，若 <span class="math inline">\(\delta=\frac{\pi}{2}\)</span>，此时断层面垂直于地面， 已经不存在断层上盘和下盘的概念。这里引入了左旋（left-lateral）和右旋（right-leteral）的概念。 当观测者站在断层的其中一个块体并面对另一个块体，若对面的块体向右手边移动，则称之为右旋走滑断层；反之， 若对面的块体向左手边移动，则称之为左旋走滑断层。根据这样的定义，对于垂直走滑断层，若 <span class="math inline">\(\lambda=0\)</span> 为左旋， <span class="math inline">\(\lambda=\pi\)</span> 为右旋。</p>
<p>对于垂直的倾滑断层（<span class="math inline">\(\delta=\frac{\pi}{2}\)</span>），定义下降块体为下盘，由此再定义走向方向，因而垂直 倾滑断层永远有 <span class="math inline">\(\lambda=\frac{\pi}{2}\)</span>。</p>
<h2 id="备注">备注</h2>
<p>图中给出了北向，并未给出东向和垂直向，因而实际上断层参数定义是与坐标系的选取无关的。无论是左手系还是 右手系，无论 z 轴是向上还是向下，断层参数的定义不变。在设计到辐射花样等问题时，坐标系的选取开始变得重要了， 以后再说。</p>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 震源机制解 </tag>
            
            <tag> 名词解释 </tag>
            
            <tag> 断层 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[体力与等效体力]]></title>
      <url>http://seisman.info/body-force-equivalents.html</url>
      <content type="html"><![CDATA[<p>地震学里最基本的运动方程是</p>
<p><span class="math display">\[\rho \ddot{u_i} = \sigma_{ij,j} + f_i\]</span></p>
<p>其中 <span class="math inline">\(f_i\)</span> 是体力项，最常见的体力是重力。</p>
<p>除非是研究地球的自由震荡，在一般的地震波传播问题中，重力都是可忽略的，因而运动方程简化为：</p>
<p><span class="math display">\[\rho \ddot{u_i} = \sigma_{ij,j}\]</span></p>
<a id="more"></a>
<p>断层的破裂过程（即震源的激发过程）可以认为其在源区导致局部的本构关系发生变化。其中 <span class="math inline">\(\sigma_{ij}\)</span> 是 真实的应力场，而 <span class="math inline">\(s_{ij}\)</span> 是根据原本构关系计算得到的应力场。</p>
<p>定义</p>
<p><span class="math display">\[f_i \equiv (\sigma_{ij}-s_{ij})_{,j}\]</span></p>
<p>此时运动方程重新变成</p>
<p><span class="math display">\[\rho \ddot{u_i} = \sigma_{ij,j} + f_i\]</span></p>
<p><span class="math inline">\(s_{ij}\)</span> 是根据原本构关系计算得到的应力场，因而其在整个空间内是连续的。注意这里的 <span class="math inline">\(f_i\)</span> 已经不再是体力了， 而是从被修改的本构关系中分解出的体力项，因而 <span class="math inline">\(f_i\)</span> 仅仅存在于震源区的一个点或者断层面上。</p>
<p>根据 Aki &amp; Richards (1980) 中的表示定理：</p>
<p><span class="math display">\[u_n(x,t) = \int_{-\infty}^{\infty} d \tau \iiint_V f_p(\eta, \tau) G_{np}(x, t-\tau, \eta,0) d V(\eta)\\\]</span></p>
<p><span class="math display">\[+ \int_{-\infty}^{\infty} d \tau \iint_{\Sigma} \left[u_i(\xi, \tau) \right] c_{ijpq} \nu_j G_{np,q}(x, t-\tau; \xi,0) d \Sigma(\xi)\]</span></p>
<p><span class="math display">\[- \int_{-\infty}^{\infty} d \tau \iint_{\Sigma} \left[T_p(u(\xi, \tau), \nu) G_{np}(x, t-\tau; \xi,0) \right] d \Sigma(\xi)\]</span></p>
<p>位移分为三项，第一项为体力引起的位移，这一项在波传播中可忽略；</p>
<p>第二项是位移不连续引起的位移，其等效体力为</p>
<p><span class="math display">\[f_p^{[u]}(\eta, \tau) = - \iint_{\Sigma}[u_i(\xi, \tau)]c_{ijpq} \nu_j \frac{\partial}{\partial \eta_q} \delta(\eta-\xi) d \Sigma\]</span></p>
<p>第三项是应力不连续引起的位移，其等效体力为</p>
<p><span class="math display">\[f^{[T]}(\eta, \tau) = - \iint_{\Sigma}[T(u(\xi,\tau),\nu)] \delta(\eta-\xi) d \Sigma(\xi)\]</span></p>
<p>地震学研究中常用的源是位错源，即第二项。</p>
<p>因而很多文献中的波动方程，<span class="math inline">\(f_i\)</span> 都不是体力项，而是等效体力项。</p>
<p>参考文献：</p>
<ol style="list-style-type: decimal">
<li>Julian, B. R., Miller, A. D., &amp; Foulger, G. R. (1998). Non‐double‐couple earthquakes 1. Theory. Reviews of Geophysics, 36(4), 525-549.</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 震源 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[绘制波形对比图]]></title>
      <url>http://seisman.info/waveform-comparison-plot.html</url>
      <content type="html"><![CDATA[<p>波形对比图，经常出现在如下场合：</p>
<ol style="list-style-type: decimal">
<li>发展新的计算理论地震图的方法，与前人的结果做 Benchmark；</li>
<li>理论地震图与实际数据做对比，比如反演；</li>
<li>展示多个波形的相关性；如 doublet；</li>
</ol>
<p>如下图所示，红色的三个 trace 是某差分程序计算出的地震图，黑色的三个 trace 是 fk 计算出的地震图，也就是上面的第一种情况：</p>
<div class="figure">
<img src="/images/2013091501.jpg">

</div>
<a id="more"></a>
<p>画地震波形肯定是要用 pssac 的，当初的做法是先用 psbasemap 绘制整体的边框，然后用六个 pssac 命令分别绘制 每个 trace，并使用 - Y 选项分别微调每个 trace 的垂直位置，这显然是一种非常笨的方法，尤其是在有很多个 trace 的情况下。</p>
<p>更好的绘图脚本如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">J=<span class="string">"X6i/4i"</span></div><div class="line">B=<span class="string">"0.2/1WeSn"</span></div><div class="line">R=<span class="string">"0.4/2.0/0/4"</span></div><div class="line">PS=<span class="string">"traces.ps"</span></div><div class="line"></div><div class="line">pssac -J<span class="variable">$J</span> -R<span class="variable">$R</span> -B<span class="variable">$B</span> -W1p/red -M1 -Ent-3 syn.* -K &gt; <span class="variable">$PS</span></div><div class="line">pssac -J<span class="variable">$J</span> -R<span class="variable">$R</span> -W1p/black -M1 -Ent-3 homo.* -O -Y0.1i &gt;&gt; <span class="variable">$PS</span></div></pre></td></tr></table></figure>
<p>这个脚本调用了两次 pssac 命令，第一个 pssac 绘制了三条红色的 trace，同时绘制了底图和边框；第二个 pssac 命令绘制了三条黑色的 trace，使用 - Y 选项实现垂直方位偏离。</p>
<p>第二个 pssac 命令中另一个特殊的地方在于没有使用 - B 选项。若有 - B 选项，则会出现两个边框，看上去是两张图的重叠与交错； 而没有 - B 选项，两张图重叠在一起，看上去却是一张图，实现了波形对比的效果。这里充分利用了 - B 选项功能。</p>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> pssac </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Intel 非商业开发工具]]></title>
      <url>http://seisman.info/intel-non-commercial-software.html</url>
      <content type="html"><![CDATA[<p>Intel 的软件开发工具包括：C/C++ 编译器、Fortran 编译器、MKL 数学库、MPI 并行库等。</p>
<p>这一套开发工具价格很贵，但是 Intel 为科研工作者、学生、教育者以及开源贡献者提供了免费的版本。</p>
<p><a href="https://software.intel.com/en-us/qualify-for-free-software" target="_blank" rel="external">主页</a> <a href="https://software.intel.com/en-us/qualify-for-free-software/student" target="_blank" rel="external">学生申请</a></p>
<p>对于学生，intel 提供了全套开发工具一年的使用权。Linux 和 Windows 用户可以申请 Intel Parallel Studio XE 的 Cluster 版本（包含全部工具）；对于 OS X 用户，则只能申请 Composer 版本（只包含 C 编译器、Fortran 编译器以及 MKL 数学库）。</p>
<p>对于 Linux 用户，进入学生申请页，点击 “Linux” 即可申请。申请时需要填写 edu 邮箱，再填写其他一些必要的信息即可。</p>
<p>若学校的 edu 邮箱不在 Intel 的邮箱列表中，则无法申请，可以发邮箱给 Intel，申请把学校的邮箱加入到邮箱列表中。 申请完成后，Intel 会向注册邮箱内发送 license 以及下载链接。License 有效期一年，一年后需要重新申请。</p>
<h2 id="依赖关系">依赖关系</h2>
<p>安装之前需要先安装如下包:</p>
<pre><code>yum install gcc gcc-c++ gcc-gfortran pangox-compat-devel libunwind-devel</code></pre>
<p>除此之外，64 位系统还需要安装一些 32 位的库文件:</p>
<pre><code>yum install glibc.i686 libgcc.i686 libstdc++.i686</code></pre>
<h2 id="解压">解压</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ tar -xvf parallel_studio_xe_2015_update3.tgz</div><div class="line">$ <span class="built_in">cd</span> parallel_studio_xe_2015_update3</div><div class="line">$ su</div><div class="line"><span class="comment"># ./install_GUI.sh   # 图形化界面，也可以直接执行./install.sh</span></div></pre></td></tr></table></figure>
<h2 id="安装过程">安装过程</h2>
<ol style="list-style-type: decimal">
<li><p>检测依赖性</p>
<p>检测依赖的过程中，会有 “Unsupported OS” 的错误，除非系统非常老，否则该错误都可以忽略。 如果出现其他错误，需要 “detailed info about issues” 逐一排查。</p></li>
<li>License</li>
<li><p>激活</p>
<p>点击 “Use serial number to active and install product”，并到邮箱中找到序列号。 序列号的格式为 <code>XXXX-XXXXXXXX</code> 。</p></li>
<li><p>安装选项</p>
<p>可以直接使用默认值，也可以自定义指定安装路径以及要安装哪些组件。</p></li>
</ol>
<h2 id="修改环境变量">修改环境变量</h2>
<p>对于 bash 用户，在 <code>~/.bashrc</code> 中加入如下语句</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Intel</span></div><div class="line"><span class="built_in">source</span> /opt/intel/vtune_amplifier_xe_2015/amplxe-vars.sh quiet</div><div class="line"><span class="built_in">source</span> /opt/intel/inspector_xe_2015/inspxe-vars.sh quiet</div><div class="line"><span class="built_in">source</span> /opt/intel/advisor_xe_2015/advixe-vars.sh quiet</div><div class="line"><span class="built_in">source</span> /opt/intel/bin/compilervars.sh intel64</div></pre></td></tr></table></figure>
<p>然后执行 <code>source .bashrc</code> 使环境变量生效。对于 csh 用户，类似。</p>
<p>说明：2015_update3 版本，直接 <code>source</code> 会报错:</p>
<pre><code>/opt/intel/composer_xe_2015/ipp/bin/ippvars.sh:19: = not found</code></pre>
<p>这似乎是一个 bug，把 <code>/opt/intel/composer_xe_2015/ipp/bin/ippvars.sh</code> 第 19 行的 <code>==</code> 改成 <code>=</code> 即可。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-09-10：初稿 for CentOS 6.5；</li>
<li>2014-07-15：加入了依赖包 for CentOS 7.0；</li>
<li>2015-04-08：Intel 非商业软件在停止一段时间后重新接受申请；</li>
<li>2015-07-17：学生可申请完整版开发工具（含 Fortran）；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C </tag>
            
            <tag> Fortran </tag>
            
            <tag> 安装 </tag>
            
            <tag> Intel </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hk1.3 编译]]></title>
      <url>http://seisman.info/install-hk.html</url>
      <content type="html"><![CDATA[<p>hk 是 Prof. Lupei Zhu 写的一个程序包，利用接收函数方法计算 Moho 厚度以及地壳波速比。整个程序包包含了接收函数所需的关键代码，但是想要高效地用于接收函数研究，还需要自己写一些代码作为补充。而网络上实际上有很多更加成熟和高效的接收函数代码，所以此程序的实际用途不大。但该程序的代码比较简单，可以帮助理解接收函数的原理与实现。</p>
<a id="more"></a>
<h2 id="下载与解压">下载与解压</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ wget http://www.eas.slu.edu/People/LZhu/downloads/hk1.3.tar  <span class="comment"># 下载</span></div><div class="line">$ tar -xvf hk1.3.tar     <span class="comment"># 解压</span></div><div class="line">$ <span class="built_in">cd</span> hk</div><div class="line">$ make clean</div><div class="line">$ rm .gmtcommands4       <span class="comment"># 删除临时文件</span></div></pre></td></tr></table></figure>
<h2 id="修改-makefile">修改 Makefile</h2>
<p>hk 依赖于 GMT，但只支持 GMT4，不支持 GMT5。</p>
<p>在 Makefile 的最前面新增如下两行定义环境变量 <code>GMT_INC</code> 和 <code>GMT_LIBS</code> 。</p>
<p>通常情况下，新增的两行如下:</p>
<pre><code>GMT_INC = -I/opt/GMT-4.5.13/include
GMT_LIBS = -L/opt/GMT-4.5.13/lib -lgmt -lpsl -lnetcdf -lm -s</code></pre>
<p>如果在安装 GMT 时，netCDF 是通过手动编译并指定 <code>--prefix</code> 安装的，则需要额外指定 netCDF 的路径:</p>
<pre><code>GMT_INC = -I/opt/GMT-4.5.13/include -I/opt/netcdf/include
GMT_LIBS = -L/opt/GMT-4.5.13/lib -lgmt -lpsl -L/opt/netcdf/lib -lnetcdf -lm -s</code></pre>
<h2 id="修改代码">修改代码</h2>
<p>修改完 Makefile 后执行 make 进行编译可能会出现如下错误:</p>
<pre><code>k_stack.c: In function ‘main’:
k_stack.c:29:3: error: unknown type name ‘BOOLEAN’
   BOOLEAN error = FALSE, addmore=FALSE;
   ^
make: *** [k_stack.o] Error 1</code></pre>
<p>解决办法是将 <code>k_stack.c</code> 的 29 行和 <code>grdmin.c</code> 的 18 行中的 <code>BOOLEAN</code> 替换成 <code>GMT_LONG</code> 。</p>
<h2 id="编译">编译</h2>
<p>修改完 Makefile 和 BOOLEAN 后，执行如下命令:</p>
<pre><code>$ make</code></pre>
<h2 id="可执行程序">可执行程序</h2>
<p>hk 中携带了如下可执行程序：</p>
<ul>
<li><code>decon</code>: 反卷积（频率域water-level法和时间域Wiener滤波法）</li>
<li><code>iter_decon</code>: 时间域迭代反卷积</li>
<li><code>k_stack</code>: h-k 迭加</li>
<li><code>grdmin</code>: 寻找网格文件中的最小值</li>
<li><code>rcvFn</code>: 根据速度模型计算理论接收函数</li>
<li><code>hk_plt.pl</code>: 绘制 h-k 迭加的结果</li>
</ul>
<h2 id="其他">其他</h2>
<p><code>README</code> 中介绍了程序的具体用法，具体示例位于目录 <code>examples</code> 。</p>
<p>直接执行 <code>README</code> 中的示例代码，可能会出现如下错误:</p>
<pre><code>$ ./iter_decon -F1/3/-5 -N100 -C-2/-10/80 -T0.1 example/KUL.z example/KUL.[r,t]
example/KUL.z
Error in allocating memory for reading example/KUL.z n=0
fail to get data from example/KUL.z</code></pre>
<p>出现这个错误的原因是：日常使用的大部分机器的字节序是 Little Endian 的，而软件包中自带数据的字节序是 Big Endian。即数据与当前机器的字节序不匹配。可以通过将数据读入 SAC 再写回到磁盘来完成字节序的转换:</p>
<pre><code>SAC&gt; r KUL.* pp.*
SAC&gt; w over</code></pre>
<p><code>hk_plt.pl</code> 脚本中第 13 行， <code>-JX4/2</code> 应改成 <code>-JX4i/2i</code> ，这样画出来的图的尺寸才是对的。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-09-08：初稿；</li>
<li>2015-07-13：示例及脚本中的若干问题；</li>
<li>2016-12-29：列出可执行程序；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 编译 </tag>
            
            <tag> 接收函数 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SAC 中与台站有关的头段]]></title>
      <url>http://seisman.info/headers-of-station-in-sac.html</url>
      <content type="html"><![CDATA[<p>SAC 头段中与台站有关的变量有：</p>
<ul>
<li><code>KNETWK</code>：台网名；</li>
<li><code>KSTNM</code>：台站名；</li>
<li><code>ISTREG</code>：台站地理区域（未使用）；</li>
<li><code>STLA</code>：台站纬度（北为正）；</li>
<li><code>STLO</code>：台站经度（东为正）；</li>
<li><code>STEL</code>：台站高程（m，未使用）；</li>
<li><code>STDP</code>：台站相对地表深度（m，未使用）；</li>
<li><code>CMPAZ</code>：分量方位角；（从北开始顺时针度数）</li>
<li><code>CMPINC</code>：分量入射角；（从垂直开始的角度）</li>
<li><code>KCMPNM</code>：分量名称，比如 BHE</li>
<li><code>LPSPOL</code>：如果台站分量为正极性则为真（左手规则）；</li>
</ul>
<p>其中与台站分量有关的头段变量有四个，即 <code>CMPAZ</code>、<code>CMPINC</code>、<code>KCMPNM</code>、<code>LPSPOL</code>。</p>
<a id="more"></a>
<p><code>CMPAZ</code> 和 <code>CMPINC</code> 在进行波形旋转的时候很重要。根据 <code>CMPAZ</code> 和 <code>CMPINC</code> 的定义可知，对于标准三分量台站有：</p>
<ul>
<li>N 向：<code>CMPAZ=0</code>；<code>CMPINC=90</code>；</li>
<li>E 向：<code>CMPAZ=90</code>；<code>CMPINC=90</code>；</li>
<li>Z 向：<code>CMPAZ=0</code>；<code>CMPINC=0</code>；</li>
</ul>
<p><code>KCMPNM</code> 标记了分量的名称，SEED 格式中一般使用三个字符表示，比如 BHE，第一个字符表示宽频带，第二个 字符表示高增益，第三个字符表示 E 向分量。有兴趣的可以参考 SEED 中关于 <a href="http://www.iris.edu/manuals/SEED_appA.htm" target="_blank" rel="external">Channel 命名的说明</a>。</p>
<p>变量 LPSPOL 是个很有意思的头段变量，若三分量的正极性方向符合左手规则则该变量为真。</p>
<p>关于左手定则，可以参考维基百科的 <a href="http://zh.wikipedia.org/wiki/%E5%8F%B3%E6%89%8B%E5%AE%9A%E5%89%87" target="_blank" rel="external">右手定则</a> 条目。</p>
<p>下图简单给出了左手定则和右手定则的示意图，图中左图符合左手定则，右图符合右手定则。</p>
<div class="figure">
<img src="/images/2013090301.jpg">

</div>
<p>在地震学中，一般取北向为 x 轴，东向为 y 轴，向上为 z 轴，即符合上图的左手定则，也就是常说的 NEU 坐标系。但是，在有些情况下，取向下为 z 轴正向，此时符合右手定则（倒过来看），也就是更常见的 NED 坐标系。</p>
<p>目前已经搞清楚的一些事实是，Aki &amp; Richards(1980) 中的坐标主要以 NED 坐标系为主，而常用的计算理论地震图的程序 fk 采用的则是 NEU 坐标系。除此之外，还有其他坐标系，以后整理清楚再说。</p>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[fk3.2 编译]]></title>
      <url>http://seisman.info/fk-installation.html</url>
      <content type="html"><![CDATA[<p>fk 是 Prof. Lupei Zhu 写的一个计算水平分层介质中理论地震图的小程序。</p>
<a id="more"></a>
<h2 id="下载">下载</h2>
<p>下载地址： <a href="http://www.eas.slu.edu/People/LZhu/downloads/fk3.2.tar" target="_blank" rel="external">fk3.2.tar</a></p>
<h2 id="解压">解压</h2>
<pre><code>$ tar -xvf fk3.2.tar</code></pre>
<h2 id="修改-makefile">修改 Makefile</h2>
<p>fk3.2 自带的 Makefile 有一堆问题，下面会说明遇到的问题以及如何解决。</p>
<p>这里先提供我修改好的 Makefile，读者可以直接下载这个文件，然后重命名为 <code>Makefile</code> ，并覆盖 fk 自带的 Makefile 即可。</p>
<p>修改版 Makefile 下载地址： <a href="http://seisman.qiniudn.com/downloads/Makefile.fk.3.2" target="_blank" rel="external">Makefile.fk.3.2</a></p>
<h3 id="修改-fortran-编译器选项">修改 Fortran 编译器选项</h3>
<p>程序的大部分代码是用 Fortran 77 的语法写的，由于 Fortran 77 规定每行超过第 72 列的字符会被忽略， 而代码中部分行超过了 72 列。因而要修改编译器选项，加入语句如下:</p>
<pre><code>FC=gfortran -ffixed-line-length-none</code></pre>
<p>其中 <code>-ffixed-line-length-none</code> 表示不限制每一行的长度。</p>
<h3 id="sac-子程序支持">SAC 子程序支持</h3>
<p>部分代码中调用了 SAC 提供的子程序，如果已经安装了 SAC，那么可以将 <code>CFLAGS</code> 和 <code>SACLIB</code> 两行去除 注释，并根据自己的 SAC 安装路径做修改。</p>
<h3 id="sachd-链接数学库">sachd 链接数学库</h3>
<p>按照上面所说进行修改，make 之后出现如下错误：</p>
<pre><code>cc -O    -o sachd sachd.o sacio.o
sacio.o: In function `read_sac2&#39;:
sacio.c:(.text+0x831): undefined reference to `rintf&#39;
sacio.c:(.text+0x8e0): undefined reference to `rintf&#39;
collect2: ld 返回 1
make: *** [sachd] 错误 1</code></pre>
<p>这是由于 sachd 在链接时没有链接数学库 <code>-lm</code> ，将</p>
<pre><code>sachd: sachd.o sacio.o
    ${LINK.c} -o $@ $^</code></pre>
<p>改成:</p>
<pre><code>sachd: sachd.o sacio.o
    ${LINK.c} -o $@ $^ -lm</code></pre>
<p>即可。</p>
<h2 id="编译">编译</h2>
<pre><code>$ make</code></pre>
<h2 id="安装">安装</h2>
<p>为了使用的方便，建议将编译生成的二进制文件 <code>fk</code> 、 <code>st_fk</code> 、 <code>syn</code> 和 <code>trav</code> 、 <code>sachd</code> 以及脚本文件 <code>fk.pl</code> 复制到 <code>$HOME/bin</code> 或者其他可搜索的路径中即可。</p>
<ul>
<li><code>fk</code> ：程序的核心，负责计算格林函数；</li>
<li><code>st_fk</code> ：与 fk 相似，负责计算静态位移；</li>
<li><code>trav</code> ：计算到时；</li>
<li><code>syn</code> ：利用 <code>fk</code> 计算出的格林函数合成最终地震图；</li>
<li><code>sachd</code> ：用于修改 SAC 文件的头段信息；</li>
<li><code>fk.pl</code> ： <code>fk</code> 的 Perl 封装，相对 <code>fk</code> 来说更易于使用，其调用了 <code>fk</code> 、 <code>trav</code> 和 <code>sachd</code> ；</li>
</ul>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-09-01：初稿；</li>
<li>2013-10-07：关于 fk 3.2 的一点修改；</li>
<li>2014-10-22：更新至 fk 3.2；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C </tag>
            
            <tag> Fortran </tag>
            
            <tag> Perl </tag>
            
            <tag> 编译 </tag>
            
            <tag> 理论地震图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MoPaD:地震矩绘制和分析工具]]></title>
      <url>http://seisman.info/mopad-moment-tensor-plotting-and-decomposition.html</url>
      <content type="html"><![CDATA[<p>MoPaD，全称Moment tensor Plotting and Decomposition，是一个用于分析地震矩的小工具， 主要功能包括地震矩与断层面参数的转换、地震矩分解以及震源球的绘制。该工具可控参数非常丰富，因而 具有非常强的灵活性，可以满足大多数需求。</p>
<a id="more"></a>
<h2 id="基本信息">基本信息</h2>
<p><strong>作者：</strong>Lars Krieger and Sebastian Heimann</p>
<p><strong>语言：</strong>Python2，需要安装numpy和matplotlib模块</p>
<p><strong>官方主页：</strong> <a href="http://www.larskrieger.de/mopad/" class="uri" target="_blank" rel="external">http://www.larskrieger.de/mopad/</a></p>
<p><strong>下载地址：</strong> <a href="https://github.com/geophysics/MoPaD" class="uri" target="_blank" rel="external">https://github.com/geophysics/MoPaD</a></p>
<p><strong>许可：</strong>LGPL</p>
<p><strong>引用：</strong>Lars Krieger and Sebastian Heimann, MoPaD - moment tensor plotting and decomposition: <em>A tool for graphical and numerical analysis of seismic moment tensors</em>, Seismol. Res. Lett., 83(3):589-595, 2012</p>
<h2 id="基本语法">基本语法</h2>
<pre><code>mopad &lt;method&gt; &lt;source-mechanism&gt; [options]</code></pre>
<p>source-mechanism可以取如下几种形式：</p>
<ul>
<li>strike,dip,rake</li>
<li>strike,dip,rake,moment</li>
<li>M11,M22,M33,M12,M13,M23</li>
<li>M11,M22,M33,M12,M13,M23,moment</li>
<li>M11,M12,M13,M21,M22,M23,M31,M32,M33</li>
</ul>
<p>每种形式的参数个数不同，因而容易区分。各参数以逗号分隔。角度的单位为度，地震矩分量以及标量矩的单位为N.m。 这里不直接支持矩震级Mw，有些可惜。地震矩的默认坐标系为1为北向（N），2为东向（E），3向下（D），符合 右手定则，记为NED</p>
<p>method可以取如下四种形式：</p>
<ul>
<li>plot</li>
<li>describe</li>
<li>decompose</li>
<li>gmt</li>
</ul>
<p>四种method，各自有自己独立的options，options太多，主要是调节一些细节参数，不细说。可以使用 <code>mapad method --help</code> 查看每个method对应的选项。</p>
<h2 id="method">Method</h2>
<h3 id="plot">Plot</h3>
<p>用于绘制震源球。震源球默认使用立体等角度投影方式，垂向视角，下半球投影，压缩区为白色，拉伸区为红色， 默认只绘制地震矩的偏张量部分。</p>
<p>下面的例子使用矩张量的震源表示形式，-I选项表明绘制地震矩的各向同性部分，-f指定了输出图像文件名。若未 指定文件后缀，默认为svg格式，目前支持的格式包括svg、png、ps、eps、pdf。</p>
<pre><code>mopad plot 1,2,3,-4,-5,-10 -I -f FSD_xmpl.png</code></pre>
<div class="figure">
<img src="/images/2013082701.png">

</div>
<p>这是个更复杂的例子，体现了mopad强大的可控性，具体选项参考<code>mopad plot -h</code>：</p>
<pre><code>mopad plot 1,2,3,-4,-5,-10 -s 10 -v -50,30,-0 -U
      -p o -f FSD_complex.svg -r 252,233,79 -w 117,80,123
      -d 1 3 red 0.5 -e 15 4 1 -b</code></pre>
<div class="figure">
<img src="/images/2013082702.png">

</div>
<p>mopad可以做地震矩分解，当然也就可以将矩张量不同部分绘制出来。目前可以绘制完整的矩张量、各向同性部分、 偏张量部分、double couple部分以及clvd部分，下面5个命令为例子，不再秀图。</p>
<pre><code>mopad plot 1,2,3,-4,-5,-10 -I -s 1 -f FSD_xmpl_full.png
mopad plot 1,2,3,-4,-5,-10 -P iso -s 0.36  -f FSD_xmpl_iso.png
mopad plot 1,2,3,-4,-5,-10 -s 0.93 -f FSD_xmpl_devi.png
mopad plot 1,2,3,-4,-5,-10 -P dc -s 0.74 -f FSD_xmpl_dc.png
mopad plot 1,2,3,-4,-5,-10 -P clvd -s 0.57 -f FSD_xmpl_clvd.png</code></pre>
<h3 id="describe">describe</h3>
<p>对地震矩以及断层参数进行描述。</p>
<pre><code>$ mopad describe 1,2,3,-4,-5,-10 -i USE

Scalar Moment: M0 = 14.9031 Nm (Mw = -5.3)
Moment Tensor: Mnn =  0.200,  Mee =  0.300, Mdd =  0.100,
               Mne =  1.000,  Mnd = -0.400, Med =  0.500    [ x 10 ]

Fault plane 1: strike =  95°, dip =  67°, slip-rake = -163°
Fault plane 2: strike = 358°, dip =  74°, slip-rake =  -24°</code></pre>
<h3 id="decompose">decompose</h3>
<p>矩张量分解。</p>
<pre><code>$ mopad decompose 1,2,3,-4,-5,-10 -o USE</code></pre>
<p>分解结果如下：</p>
<pre><code>Basis system of the input:

NED

 Basis system of the output:

USE

 Decomposition type:

ISO + DC + CLVD

 Full moment tensor in USE-coordinates:

  /  0.30 -0.50  1.00 \
  | -0.50  0.10  0.40  |   x  10.000000
  \  1.00  0.40  0.20 /


 Isotropic part in USE-coordinates:

  /  2.00  0.00  0.00 \
  |  0.00  2.00  0.00  |
  \  0.00  0.00  2.00 /


 Isotropic percentage:

13

 Deviatoric part in USE-coordinates:

  /  0.10 -0.50  1.00 \
  | -0.50 -0.10  0.40  |   x  10.000000
  \  1.00  0.40  0.00 /


 Deviatoric part in USE-coordinates:

  /  0.10 -0.50  1.00 \
  | -0.50 -0.10  0.40  |   x  10.000000
  \  1.00  0.40  0.00 /


 Deviatoric percentage:

87

 Double Couple part in USE-coordinates:

  /  1.36 -2.97  7.30 \
  | -2.97 -1.77  1.95  |
  \  7.30  1.95  0.41 /


 Double Couple percentage:

55

 Second Double Couple part in USE-coordinates:

 not available in this decomposition type


 Second Double Couple&#39;s percentage:

 not available in this decomposition type


 Third Double Couple part in USE-coordinates:

 not available in this decomposition type


 Third Double Couple&#39;s percentage:

 not available in this decomposition type


 CLVD part in USE-coordinates:

  / -0.36 -2.03  2.70 \
  | -2.03  0.77  2.05  |
  \  2.70  2.05 -0.41 /


 CLVD percentage:

32

 Seismic moment (in Nm) :

14.9031089939

 Moment magnitude Mw:

-5.25114874821

 Eigenvalues T N P :

12.5907, 4.31243, -10.9031

 Eigenvectors T N P (in basis system USE):

  / -0.74 \
  |  0.09  |
  \ -0.67 /

  /  0.26 \
  | -0.88  |
  \ -0.40 /

  / -0.62 \
  | -0.47  |
  \  0.63 /


 Tension-axis in USE -coordinates:

  / -0.62 \
  | -0.47  |
  \  0.63 /


 Null-axis in USE -coordinates:

  /  0.26 \
  | -0.88  |
  \ -0.40 /


 Pressure-axis in USE -coordinates:

  / -0.74 \
  |  0.09  |
  \ -0.67 /</code></pre>
<h3 id="gmt">gmt</h3>
<p>GMT能绘制的震源球类型很有限，因而mopad可以作为一个补充。mopad gmt返回（x，y），其可以作为psxy 命令的输入。输出的x、y值中心位于(0,0)，因而在利用GMT的psxy绘制的时候需要进行位置的转换。</p>
<p>mopad与psxy联合需要使用一些cpt文件，以控制一些颜色。</p>
<pre><code>makecpt -Cpolar -Z &gt; psxy_fill.cpt</code></pre>
<p>psxy_fill.cpt控制震源球压缩区（颜色代码为1）和拉伸区（颜色代码为0）的颜色，这个例子中分别为红色（1）和白色（0）。</p>
<pre><code>makecpt -I -Chot -Z &gt;psxy_lines.cpt</code></pre>
<p>psxy_lines.cpt控制震源球边界和界面线的颜色，本例中为黑色。</p>
<pre><code>mopad gmt 1,2,3,-4,-5,-10 -t fill -p s | psxy -Jx4/4 -R-2/2/-2/2 -P -Cpsxy_fill.cpt -M -K -L  &gt; BB1.ps
mopad gmt 1,2,3,-4,-5,-10 -t lines -p s | psxy -Jx4/4 -R-2/2/-2/2 -W5 -P -Cpsxy_lines.cpt -M -O &gt;&gt; BB1.ps</code></pre>
<div class="figure">
<img src="/images/2013082703.jpg">

</div>
<h2 id="小结">小结</h2>
<p>工具本身很强大，与GMT的结合不太完美，另外虽然是命令行工具，但是不太适合批量处理。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 震源机制解 </tag>
            
            <tag> Python </tag>
            
            <tag> 震源球 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PPK 标记震相到时的一些注意事项]]></title>
      <url>http://seisman.info/notes-of-ppk.html</url>
      <content type="html"><![CDATA[<p>SAC 中的 <code>ppk</code> 命令用于拾取震相到时。在键入 <code>ppk</code> 命令之后，进入震相拾取模式，此时键入相应的选项即可拾取震相到时。 从 <code>ppk</code> 的命令说明中可以看出，<code>ppk</code> 支持的选项中与到时有关的有：</p>
<ul>
<li><code>A</code>：定义初至波到时；</li>
<li><code>F</code>：定义事件结束时间；</li>
<li><code>P</code>：定义 P 波到时；</li>
<li><code>S</code>：定义 S 波到时；</li>
<li><code>Tn</code>：用户自定义到时（n=0~9）；</li>
</ul>
<a id="more"></a>
<p>在《<a href="/timing-of-sac.html">SAC 的时间概念</a>》一文中介绍了 SAC 中所有与 时间有关的头段变量的一些细节。其中与标记到时有关的头段变量有：<code>A</code>、<code>F</code>、<code>Tn</code>。</p>
<p>将这二者做一比较，很容易猜到：<code>ppk</code> 的 <code>A</code> 选项标记的到时信息保存到头段变量 <code>A</code> 中；<code>F</code> 选项标记的到时保存到头段变量 <code>F</code> 中； <code>Tn</code> 选项标记的到时保存到对应的头段变量 <code>Tn</code> 中。</p>
<p><strong>疑问：</strong>ppk 的 <code>P</code> 和 <code>S</code> 选项分别标记了 P 波到时和 S 波到时，那么着两个震相的到时保存到哪里了？</p>
<p><strong>答：</strong>经过简单的测试可以知道，P 波到时信息保存到了头段变量 <code>A</code> 中；S 波到时保存到头段变量 <code>T0</code> 中。</p>
<p>需要注意的是，使用 <code>ppk</code> 的 <code>P</code> 选项标定的到时一定保存到头段变量 <code>A</code> 中，不管原来头段变量 <code>A</code> 中有没有记录其他有用信息。 同理，<code>ppk</code> 的 <code>S</code> 选项标定的到时一定保存到头段变量 <code>T0</code> 中，不会因为头段变量 <code>T0</code> 中已经有值而保存到 <code>T1</code> 中。</p>
<p><strong>疑问：</strong>在用 <code>T0</code> 标记某震相（比如 PcP）后，在使用 <code>p</code>、<code>p1</code>、<code>ppk</code> 绘图时，在相应时刻总是显示字符 <code>T0</code>， 如何显示震相名称 <code>PcP</code>？</p>
<p><strong>答：</strong>如果熟知 SAC 的头段变量，这个问题很容易解决。<code>A</code>、<code>F</code>、<code>Tn</code>（n=0~9）每个浮点型头段变量都对应一个 字符型头段变量，即 <code>KA</code>、<code>KF</code>、<code>KTn</code>，这些字符型头段变量中可以保持震相名。</p>
<p>如下例所示:</p>
<pre><code>SAC&gt; r file
SAC&gt; ppk
# 用光标标记震相 PcP 的到时为 T0，然后退出 ppk 模式
SAC&gt; p   # 此时看到的震相到时处显示字符 &quot;T0&quot;
SAC&gt; ch kt0 PcP
SAC&gt; p   # 此时看到的震相到时处显示字符 &quot;PcP&quot;
SAC&gt; wh  # 标记的到时要记得保存；
SAC&gt; q</code></pre>
<p><strong>疑问：</strong><code>ppk</code> 命令中设置震相 onset、震相方向、震相质量的几个命令如何使用？这些标记的信息被保存在哪里？</p>
<p><strong>答：</strong><code>ppk</code> 命令中，设置震相 onset 类型的有 <code>e</code> 和 <code>i</code> ，设置震相方向的有 <code>d</code> 、 <code>u</code> 、 <code>+</code> 、 <code>-</code> 和空格，设置震相质量的为 0 到 4。这些命令仅在标记 P 波和 S 波到时时有意义，而这些震相信息则保存在对应时间标记名中。</p>
<p>首先读入一个 SAC 文件，进入 ppk 模式后，以标记 P 波为例，依次按下 <code>e</code> 、 <code>d</code> 、 <code>1</code> 、 <code>p</code> 四个按键，此时 P 波到时保存在变量 <code>A</code> 中，而变量 <code>KA</code> 中的值则是 <code>EPD1</code> 。</p>
<p>变量 <code>KA</code> 中的四个字符依次表示：震相 onset 类型、P 或 S 震相、震相极性、震相质量。由于这些信息是保存在头段 变量 <code>KA</code> 中的，因而会写入到文件中，以待进一步使用。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-08-20：初稿；</li>
<li>2016-02-28：增加了对震相 onset 类型、震相极性、震相质量相关命令的说明；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 走时 </tag>
            
            <tag> SAC技巧 </tag>
            
            <tag> 震相 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SAC 保存图像小结]]></title>
      <url>http://seisman.info/sac-save-image.html</url>
      <content type="html"><![CDATA[<p>数据的处理很重要，数据的可视化更重要，数据可视化之后总会想把图保存起来，这里小结一下 SAC 中保存图像的方法。</p>
<a id="more"></a>
<h2 id="窗口绘图并截图">窗口绘图并截图</h2>
<p>SAC 中的绘图窗口基于 XWindows。XWindows 大概是 Linux 下非常常见的视窗系统。在 SAC 中可以通过 plot，plot1，plot2，plotpk 等命令实现 SAC 数据的绘制以及各种交互动作（主要就是标记震相）。 最简单粗暴的方法大概就是截屏了。截屏的话 gnome 下有个 screenshot，可以截取整个屏幕；推荐安装 ImageMagick，其中的 import 命令可以通过鼠标拖曳一个区域进行截图，貌似支持保存为很多种格式。</p>
<h2 id="生成-sgf-文件再转换">生成 SGF 文件再转换</h2>
<p>SGF 是 SAC Graphic File 的简称，这是 SAC 自己设计的图像格式，里面包含了 SAC 图像的基本信息。在 SAC 中打开 SGF 设备 -&gt; 绘图产生 SGF 文件 -&gt; 退出 SAC-&gt; 利用 sgftops 将 sgf 文件转换为 ps 文件 -&gt;ps2pdf 转换为 pdf 文件。</p>
<pre><code>$ sac
SEISMIC ANALYSIS CODE [02/01/2012 (Version 101.5c)]
Copyright 1995 Regents of the University of California

SAC&gt; fg seis
SAC&gt; bd sgf
SAC&gt; p
SAC&gt; q
[seisman@info ~]$ sgftops f001.sgf f001.ps 2 si
First translates (x and y), then rotates, then scales:
[Default] landscape: 8 0 90 1 to prompts
Sample portrait: 0.5 0.5 0 0.75

x translation : 0.5
y translation : 0.5
rotation angle: 0
scale........ : 0.75
[seisman@info ~]$</code></pre>
<h2 id="saveimg-直接保存图形文件">SAVEIMG 直接保存图形文件</h2>
<p>SAC 101.5 之后的版本加入了新功能，可以直接保存图形文件，这是个神器～目前支持的格式为 ps、 pdf、png、xpm。ps 和 pdf 是矢量格式，因而是绘图的首选格式，png 和 xpm 是位图图形格式，绘图 精度较差，因而不建议使用。考虑到图像不清晰，且 png 和 xpm 需要格外的库文件，在 SAC 101.6 发布的 二进制文件中不再支持 png 和 xpm。</p>
<pre><code>$ sac SEISMIC ANALYSIS CODE [02/01/2012 (Version
Copyright 1995 Regents of the University of California

SAC&gt; fg seis
SAC&gt; p
SAC&gt; saveimg foo.ps save file foo.ps [PS]
SAC&gt; q</code></pre>
<h2 id="pssac-绘制-ps-文件">pssac 绘制 ps 文件</h2>
<p><code>pssac</code> 利用 GMT 的 ps 库直接绘制 SAC 文件，<code>pssac</code> 的具体细节可以站内搜索 <code>pssac</code>。</p>
<h2 id="小结">小结</h2>
<ul>
<li>Xwindows 窗口最快最省事，截图的话平时看看还行，见不了大世面；</li>
<li>sgf 转换有点麻烦，生成的 ps 文件线条看上去有点模糊，偶尔会出现 bug，ps 文件上多出了额外的线条；</li>
<li>saveimg 是后起之秀，建议使用；</li>
<li>pssac 功能强大，在需要设计复杂图形时有用，当然用起来需要花点时间学。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SAC技巧 </tag>
            
            <tag> 图像 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux 下的 GMT 中文支持]]></title>
      <url>http://seisman.info/gmt-chinese-under-linux.html</url>
      <content type="html"><![CDATA[<p>原生 GMT 是不支持中文的，想要让 GMT 支持中文，需要进行一番配置。想要理解整个问题，需要对 PostScript、CID 字体有更深刻的理解，这未免有些过于复杂。所以这篇博文只介绍一些基本的原理， 不一定准确但是却够用。</p>
<p>让 GMT 支持中文，需要修改 ghostscript 和 GMT 的配置文件。由于不同发行版对 ghostscript 的打包 方式不同，不同的 ghostscript 版本之间的配置文件也有一些差异。因而这里以我在使用的 CentOS7 来介绍整个原理，<strong>其他发行版与CentOS7的差异会在文末列出</strong>。</p>
<a id="more"></a>
<p>本文所使用的 Linux 环境：</p>
<ul>
<li>操作系统：CentOS 7.1</li>
<li>ghostscript：9.07</li>
<li>GMT：4.5.13（同样适用于 GMT 5.x）</li>
</ul>
<h2 id="准备工作">准备工作</h2>
<h3 id="gs-中文配置文件">gs 中文配置文件</h3>
<p>大多数发行版都已经默认安装了 gs。除此之外，还需要安装简体中文配置文件。CentOS 7 下中文配置文件可以通过如下命令安装:</p>
<pre><code>sudo yum install ghostscript-chinese-zh_CN</code></pre>
<p>安装完成后，中文配置文件的路径为 <code>/usr/share/ghostscript/conf.d/cidfmap.zh_CN</code>， 以下称为 ghostscript 中文配置文件。</p>
<h3 id="gmt-字体配置文件">GMT 字体配置文件</h3>
<p>假定 GMT 的安装路径为 <code>/opt/GMT-4.5.13</code> ，则字体配置文件的路径为 <code>/opt/GMT-4.5.13/share/pslib/PS_font_info.d</code> 。</p>
<p>PS：GMT 5.2.1 之后，字体配置文件的路径变成 <code>/opt/GMT-5.2.1/share/postscriptlight/PSL_standard_fonts.txt</code> 。</p>
<h2 id="使-gs-支持中文">使 gs 支持中文</h2>
<h3 id="gs-中文配置文件-1">gs 中文配置文件</h3>
<p>CentOS 7 中 ghostscript 中文配置文件的默认内容为:</p>
<pre><code>/BousungEG-Light-GB &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/wqy-zenhei/wqy-zenhei.ttc) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/GBZenKai-Medium    &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/wqy-zenhei/wqy-zenhei.ttc) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/MSungGBK-Light     /BousungEG-Light-GB ;
/Adobe-GB1      /BousungEG-Light-GB ;</code></pre>
<p>其中的细节可能看不懂，但是可以大概总（xia）结（cai）如下：</p>
<ul>
<li>第一行定义了字体名为 <code>/BousungEG-Light-GB</code> ，对应的字体文件为 <code>/usr/share/fonts/wqy-zenhei/wqy-zenhei.ttc</code> ，也就是文泉驿正黑；</li>
<li>第二行定义了字体名为 <code>/GBZenKai-Medium</code>，对应的字体文件也是文泉驿正黑；</li>
<li>第三行和第四行分别定义了字体名 <code>/MSungGBK-Light</code> 和 <code>/Adobe-GB1</code>，这两种 都对应于 <code>/BousungEG-Light-GB</code> ，相当于给字体定义了别名。</li>
</ul>
<p>关于配置文件的几点说明：</p>
<ul>
<li>字体名是任意的，比如字体名可以取为 <code>/ABC</code> ；</li>
<li>字体文件似乎只能是 <code>ttc</code> 或 <code>ttf</code> 格式的，当然修改参数也有可能可以使用其他格式的字体；</li>
<li>要注意确认字体文件是否存在，比如 CentOS7 下的 <code>wqy-zenhei.ttc</code> 字体实际上位于软件包 <code>wqy-zenhei-fonts</code> 中。若字体不存在，则需要安装相应软件包。</li>
</ul>
<h3 id="测试-gs-对-linux-默认字体的支持">测试 gs 对 Linux 默认字体的支持</h3>
<p>CentOS7 的 ghostscript 中文配置文件中，默认有四行，分别定义了四个字体名，尽管本质上这四个 字体名都指向同一个字体。下面先测试一下如何让 gs 显示 Linux 的默认字体。</p>
<p>用<strong>编辑器</strong>新建一个 PS 文件（是的，PS 文件其中就是纯文本，可以直接用编辑器编辑!），名为 <code>linux_fonts.ps</code> ，其内容为:</p>
<pre><code>%! PS-Adobe-3. 0
/BousungEG-Light-GB--UniGB-UTF8-H findfont 20 scalefont setfont
150 400 moveto
(BousungEG 字体) show

/GBZenKai-Medium--UniGB-UTF8-H findfont 20 scalefont setfont
150 375 moveto
(GBZenKai 字体) show

/MSungGBK-Light--UniGB-UTF8-H findfont 20 scalefont setfont
150 350 moveto
(MSungGBK 字体) show

/Adobe-GB1--UniGB-UTF8-H findfont 20 scalefont setfont
150 325 moveto
(Adobe 字体) show

showpage
%%Trailer
%%EOF</code></pre>
<p>简单解释一下，PS 文件中要使用某个中文字体，需要用 <code>FontName--CMap</code> 的格式来调用。其中 <code>FontName</code> 即 gs 中文配置文件中给定的字体名。CMap 可以取 <code>UniGB-UTF8-H</code> 和 <code>GB-EUC-H</code>， Linux 下一般用前者，Windows 下一般用后者，应该是用于指定汉字或中文字体的编码，具体原理不知。</p>
<p>用 gs 查看该 PS 文件，正常情况下显示如下图，表明 gs 可以正常显示 Linux 下的默认中文字体。</p>
<div class="figure">
<img src="/images/2013081301.png">

</div>
<h3 id="添加-windows-中文字体">添加 Windows 中文字体</h3>
<p>Linux 的中文字体较少，所以这里使用 Windows 下中的中文字体，这里只考虑 Windows 下的宋体、仿宋、 黑体和楷体四个基本字体。将这四个字体文件复制到 <code>/usr/share/fonts/winfonts/</code> 目录下， 然后对 gs 的中文配置文件做如下修改:</p>
<pre><code>% 原内容保持不变
/BousungEG-Light-GB &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/wqy-zenhei/wqy-zenhei.ttc) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/GBZenKai-Medium    &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/wqy-zenhei/wqy-zenhei.ttc) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/MSungGBK-Light     /BousungEG-Light-GB ;
/Adobe-GB1      /BousungEG-Light-GB ;

% 新增 Windows 字体的支持
/STSong-Light &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/winfonts/simsun.ttc) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/STFangsong-Light &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/winfonts/simfang.ttf) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/STHeiti-Regular &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/winfonts/simhei.ttf) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/STKaiti-Regular &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/winfonts/simkai.ttf) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;</code></pre>
<p>这里仅以 Windows 下的常用四大字体为例。对于 Windows 下的其他中文字体、Linux 的其他中文字体甚至 日韩字体来说，方法类似。</p>
<h3 id="测试-gs-对-windows-中文字体的支持">测试 gs 对 Windows 中文字体的支持</h3>
<p>用<strong>编辑器</strong>新建一个 PS 文件，名为 <code>windows_fonts.ps</code> ，其内容为:</p>
<pre><code>%! PS-Adobe-3. 0
/STSong-Light--UniGB-UTF8-H findfont 20 scalefont setfont
150 400 moveto
(Song Typeface 宋体) show

/STFangsong-Light--UniGB-UTF8-H findfont 20 scalefont setfont
150 375 moveto
(Fangsong Typeface 仿宋体) show

/STHeiti-Regular--UniGB-UTF8-H findfont 20 scalefont setfont
150 350 moveto
(Hei Typeface 黑体) show

/STKaiti-Regular--UniGB-UTF8-H findfont 20 scalefont setfont
150 325 moveto
(Kai Typeface 楷体) show

showpage
%%Trailer
%%EOF</code></pre>
<p>用 gs 查看该 PS 文件，若正确显示中文如下图，则表明 gs 已支持 Windows 字体。</p>
<div class="figure">
<img src="/images/2013081302.png">

</div>
<h2 id="使-gmt-支持中文">使 GMT 支持中文</h2>
<h3 id="修改-gmt-字体配置文件">修改 GMT 字体配置文件</h3>
<p>打开 GMT 字体配置文件 <code>/opt/GMT-4.5.13/share/pslib/PS_font_info.d</code>，在文件最后加入 如下语句（以 Windows 下的四大常用字体为例）:</p>
<pre><code>STSong-Light--UniGB-UTF8-H  0.700    1
STFangsong-Light--UniGB-UTF8-H  0.700    1
STHeiti-Regular--UniGB-UTF8-H   0.700   1
STKaiti-Regular--UniGB-UTF8-H   0.700   1</code></pre>
<p>第一列为字体名，第二列为字母 A 的高度，第三列与编码有关。</p>
<h3 id="查看-gmt-当前支持的字体">查看 GMT 当前支持的字体</h3>
<p>用 <code>pstext -L</code> 命令查看 GMT 当前的字体配置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ pstext -L</div><div class="line">Font <span class="comment">#  Font Name</span></div><div class="line">------------------------------------</div><div class="line">0   Helvetica</div><div class="line">1   Helvetica-Bold</div><div class="line">...    ......</div><div class="line">32  Palatino-BoldItalic</div><div class="line">33  ZapfChancery-MediumItalic</div><div class="line">34  ZapfDingbats</div><div class="line">35 STSong-Light--UniGB-UTF8-H</div><div class="line">36 STFangsong-Light--UniGB-UTF8-H</div><div class="line">37 STHeiti-Regular--UniGB-UTF8-H</div><div class="line">38 STKaiti-Regular--UniGB-UTF8-H</div></pre></td></tr></table></figure>
<p>其中 0-34 为 GMT/gs 默认支持的西文字体，35 至 38 为新添加的中文字体。</p>
<h3 id="gmt-中文测试">GMT 中文测试</h3>
<p>GMT4 测试脚本：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">gmtset HEADER_FONT 35</div><div class="line"></div><div class="line">pstext -R0/10/0/3 -JX15c/3c -B1/1:.<span class="string">"GMT中文支持"</span>: -P &gt; cn.ps &lt;&lt;EOF</div><div class="line">1.5 2 30 0 35 LM GMT宋体</div><div class="line">1.5 1 30 0 36 LM GMT仿宋</div><div class="line">5.5 2 30 0 37 LM GMT黑体</div><div class="line">5.5 1 30 0 38 LM GMT楷体</div><div class="line">EOF</div><div class="line"></div><div class="line">rm .gmt*</div></pre></td></tr></table></figure>
<p>成图效果如下</p>
<div class="figure">
<img src="/images/2013081303.png">

</div>
<p>GMT5 测试脚本：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">gmt gmtset FONT_TITLE 40p,35,black</div><div class="line"></div><div class="line">gmt pstext -R0/10/0/3 -JX15c/3c -Bafg -B+t<span class="string">"GMT中文支持"</span> -F+a+c+f -P &gt; gmt5_cn.ps &lt;&lt; EOF</div><div class="line">3 2.1 0 LM 35p,35,red   GMT宋体</div><div class="line">3 0.9 0 LM 35p,36,blue  GMT仿宋</div><div class="line">7 2.1 0 LM 35p,37,black GMT黑体</div><div class="line">7 0.9 0 LM 35p,38,green GMT楷体</div><div class="line">EOF</div><div class="line"></div><div class="line">rm gmt.*</div></pre></td></tr></table></figure>
<p>成图效果如下</p>
<div class="figure">
<img src="/images/2013081304.png">

</div>
<h2 id="对其他发行版的若干说明">对其他发行版的若干说明</h2>
<p>其他发行版与 CentOS 7 之间或多或少有一些区别，列举如下。</p>
<h3 id="centos-6">CentOS 6</h3>
<ol style="list-style-type: decimal">
<li><p>gs 中文配置文件需要用如下命令安装:</p>
<pre><code>sudo yum install cjkuni-fonts-ghostscript</code></pre>
<p>在安装配置文件的同时会安装中文字体 uming 和 ukai</p></li>
<li><p>gs 中文配置文件中给定的字体路径： <code>/usr/share/fonts/cjkuni/uming.ttc</code> 和 <code>/usr/share/fonts/cjkuni/ukai.ttc</code> 是错误的。正确的字体路径是 <code>/usr/share/fonts/cjkui-uming/uming.ttc</code>` 和 <code>/usr/share/fonts/cjkuni-ukai/ukai.ttc</code> ，要注意改正。</p></li>
</ol>
<h3 id="ubuntu-14.0415.04">Ubuntu 14.04/15.04</h3>
<ol style="list-style-type: decimal">
<li><p>gs 中文配置文件可以用如下命令安装（默认已安装）:</p>
<pre><code>sudo apt-get install poppler-data</code></pre></li>
<li>gs 中文配置文件路径为：<code>/etc/ghostscript/cidfmap.d/90gs-cjk-resource-gb1.conf</code></li>
<li><p>gs 中文配置文件中默认使用的 Linux 字体为 uming 和 ukai，需要通过如下命令安装:</p>
<pre><code>sudo apt-get install fonts-arphic-uming fonts-arphic-ukai</code></pre></li>
<li><p>gs 中文配置文件的默认内容为:</p>
<pre><code>/BousungEG-Light-GB &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/truetype/arphic/uming.ttc) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/GBZenKai-Medium    &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/truetype/arphic/ukai.ttc) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/Song-Medium /GBZenKai-Medium ;
/STSong-Light /BousungEG-Light-GB ;
/STFangsong-Light /BousungEG-Light-GB ;
/STHeiti-Regular /BousungEG-Light-GB ;
/STKaiti-Regular /BousungEG-Light-GB ;
/Adobe-GB1      /BousungEG-Light-GB ;
/Adobe-GB1-Bold /GBZenKai-Medium ;</code></pre>
<p>需要将该文件改成:</p>
<pre><code>% 原配置文件的内容，与 STSong-Light 等相关的四行必须删除
/BousungEG-Light-GB &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/truetype/arphic/uming.ttc) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/GBZenKai-Medium    &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/truetype/arphic/ukai.ttc) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/Song-Medium /GBZenKai-Medium ;
/Adobe-GB1      /BousungEG-Light-GB ;
/Adobe-GB1-Bold /GBZenKai-Medium ;

% 新增 Windows 字体的支持
/STSong-Light &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/winfonts/simsun.ttc) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/STFangsong-Light &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/winfonts/simfang.ttf) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/STHeiti-Regular &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/winfonts/simhei.ttf) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;
/STKaiti-Regular &lt;&lt;/FileType /TrueType /Path (/usr/share/fonts/winfonts/simkai.ttf) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;</code></pre>
<p>修改完 gs 中文配置文件后，必须要执行如下命令:</p>
<pre><code>$ sudo update-gsfontmap</code></pre>
<p>该命令会将 <code>/etc/ghostscript/cidfmap.d/*.conf</code> 合并成单独的文件 <code>/var/lib/ghostscript/fonts/cidfmap</code> 。gs 在需要中文字体时会读取 <code>/var/lib/ghostscript/fonts/cidfmap</code> 而不是 <code>/etc/ghostscript/cidfmap.d/*.conf</code> 。这是 Ubuntu/Debian 和 CentOS 的一个很大不同。</p></li>
</ol>
<h3 id="ubuntu-12.04">Ubuntu 12.04</h3>
<ol style="list-style-type: decimal">
<li><p>gs 中文配置文件需要用如下命令安装:</p>
<pre><code>sudo apt-get install gs-cjk-resource</code></pre></li>
<li><p>其他部分未做测试，估计跟 Ubuntu 15.05 差不多。</p></li>
</ol>
<h2 id="可移植性的测试">可移植性的测试</h2>
<ul>
<li>本机：用 vi 打开 PS 文件，中文正常显示；</li>
<li>本机：gs 查看正常；</li>
<li>本机：ps2raster 转换为 PDF，用 evince、zathura 查看正常；</li>
<li>本机：ps2pdf 转换为 PDF，用 evince、zathura 查看正常；</li>
<li>复制到 Windows：用 gs 查看正常；</li>
</ul>
<h2 id="参考资料">参考资料</h2>
<ol style="list-style-type: decimal">
<li>GMT 软件显示汉字的技术原理与实现<em>，赵桂儒，《测绘通报》</em></li>
<li><a href="http://guoyoooping.blog.163.com/blog/static/13570518320101291442176" target="_blank" rel="external">ghostscript 中文打印经验</a></li>
<li><a href="http://xxqhome.blog.163.com/blog/static/1967330202011112810120598/" target="_blank" rel="external">GMT 中文支持</a></li>
<li><a href="http://hi.baidu.com/guyueshuiming/item/0052df53852ee4494fff20c3" target="_blank" rel="external">GMT chinese support</a></li>
<li><a href="https://en.wikipedia.org/wiki/PostScript" target="_blank" rel="external">维基词条：PostScript</a></li>
<li><a href="https://wiki.debian.org/gs-undefoma" target="_blank" rel="external">Debian Wiki</a></li>
</ol>
<h2 id="更新历史">更新历史</h2>
<ul>
<li>2013-05-15：修正了中文测试脚本的一个 bug。</li>
<li>2013-05-16：系统默认未安装 ghostscript 的中文字体包，conf.d 文件夹为空，通过安装相应中文包解决该问题。</li>
<li>2013-08-17：添加了字体以及 ghostscript 可能需要的几个安装包的信息；以及在新增字体后要重建字体缓存。</li>
<li>2014-10-14：重写整个文档，使其更具有普遍性；</li>
<li>2015-08-31：Ubuntu 下需要使用 <code>update-gsfontmap</code> 命令来更新中文配置文件；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
            <tag> 中文 </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[全球地形起伏模型 ETOPO2]]></title>
      <url>http://seisman.info/global-relief-model-etopo2.html</url>
      <content type="html"><![CDATA[<p>ETOPO2 与 ETOPO5 类似，也是陆地高程 + 海底地形数据，其采样间隔为 2 弧分。</p>
<p>官方地址： <a href="http://www.ngdc.noaa.gov/mgg/global/etopo2.html" class="uri" target="_blank" rel="external">http://www.ngdc.noaa.gov/mgg/global/etopo2.html</a></p>
<a id="more"></a>
<p>官方提供了提供了很多版本， <strong>ETOPO2v2c</strong> 和 <strong>ETOPO2v2g</strong> 分别代表 pixel registration 和 gridline registartion 两种不同的网格表示方式。其中 <strong>ETOPO2v2c</strong> 是权威版本，建议选择 <strong>ETOPO2v2c</strong> 。</p>
<p><strong>ETOPO2v2c</strong> 下又有许多格式可以选择，如下所示</p>
<pre><code>ETOPO2v2c
 ├── GRD98：ETOPO2v2c_i2_LSB_GRD98.zip
 ├── HDF：ETOPO2v2c_HDF.zip
 ├── netCDF：ETOPO2v2c_f4_netCDF.zip
 └── raw_binary：ETOPO2v2c_f4_LSB.zip 和 ETOPO2v2c_i2_LSB.zip</code></pre>
<p>其中 <code>netCDF</code> ， <code>grd98</code> 和 <code>raw_binary</code> 格式的网格文件都可以直接在 GMT 中使用。 由于 <code>grdraster</code> 命令只能使用 <code>raw_binary</code> 格式的数据，所以下面仅使用 <code>raw_binary</code> 格式网格数据。</p>
<ol style="list-style-type: decimal">
<li>下载 Little-endian，16 位整型的二进制网格文件 <a href="http://www.ngdc.noaa.gov/mgg/global/relief/ETOPO2/ETOPO2v2-2006/ETOPO2v2c/raw_binary/ETOPO2v2c_i2_LSB.zip" target="_blank" rel="external">ETOPO2v2c_i2_LSB.zip</a></li>
<li><p>解压:</p>
<pre><code>7za e ETOPO2v2c_i2_LSB.zip</code></pre>
<p>解压之后的 <code>.bin</code> 文件为二进制网格文件， <code>.hdr</code> 文件为头段文件</p></li>
<li><p>拷贝:</p>
<pre><code>sudo cp ETOPO2v2c_i2_LSB.bin ${GMTHOME}/share/dbase</code></pre></li>
<li><p>修改 <code>grdraster.info</code> :</p>
<pre><code>8 &quot;ETOPO2 global topography&quot;    &quot;m&quot;     -R-180/180/-90/90       -I2m            PG i 1          0       -32768  ETOPO2v2c_i2_LSB.bin    L</code></pre>
<p>其中的很多细节参考了 <code>.hdr</code> 文件中关于格式的说明，不细说。</p></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
            <tag> 数据 </tag>
            
            <tag> 地形 </tag>
            
            <tag> 网格 </tag>
            
            <tag> 高程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[全球地形起伏模型 ETOPO1]]></title>
      <url>http://seisman.info/global-relief-model-etopo1.html</url>
      <content type="html"><![CDATA[<p>ETOPO1 是分辨率为 1 弧分的全球地形起伏模型，其包含了陆地地形和海洋水深的数据，是目前已知的分辨率 最高的地形起伏数据。</p>
<p>官方主页位于： <a href="http://www.ngdc.noaa.gov/mgg/global/" class="uri" target="_blank" rel="external">http://www.ngdc.noaa.gov/mgg/global/</a></p>
<a id="more"></a>
<p>其分为两个版本，Ice Surface 和 Bedrock，两个版本基本一致。不同之处在于在处理南极洲和 Greenland 地形时，前者给出的是加上冰盖层之后的高程，后者给出的是岩床的高程。</p>
<p>对于每个版本又细分为 grid-registered 和 cell-registered，其中 grid-registered 是权 威版本，cell-registered 是衍生版本，因而<strong>推荐下载使用grid-registered版本</strong>。</p>
<p>在每个子版本下又有多种数据格式，netCDF，binary，xyz，tiff。</p>
<h2 id="下载">下载</h2>
<p>本文使用的是<strong>grid-registered版本</strong>的<strong>binary格式</strong>的数据文件： <a href="http://www.ngdc.noaa.gov/mgg/global/relief/ETOPO1/data/ice_surface/grid_registered/binary/etopo1_ice_g_i2.zip" target="_blank" rel="external">etopo1_ice_g_i2.zip</a>。</p>
<p>下面的说明也只针对 binary 格式有效。</p>
<h2 id="解压">解压</h2>
<pre><code>7za e etopo1_ice_g_i2.zip</code></pre>
<p>解压之后的 <code>.bin</code> 文件为二进制网格文件， <code>.hdr</code> 文件为头段文件</p>
<h2 id="拷贝">拷贝</h2>
<pre><code>sudo cp etopo1_ice_g_i2.bin /usr/local/GMT-4.5.12/share/dbase</code></pre>
<h2 id="修改-grdraster.info">修改 grdraster.info</h2>
<p>直接将下面的语句复制到 <code>grdraster.info</code> 中即可。关于语句为什么要这么写，需要参考 hdr 文件的内容。</p>
<pre><code>9 &quot;ETOPO1 Ice Surface&quot;          &quot;m&quot;     -R-180/180/-90/90       -I1m            GG i 1          0       -32768  etopo1_ice_g_i2.bin     L</code></pre>
<p>同理，对于 bedrock 版本的网格数据，其 <code>grdraster.info</code> 为:</p>
<pre><code>10 &quot;ETOPO1 Bedrock&quot;             &quot;m&quot;     -R-180/180/-90/90       -I1m            GG i 1          0       -32768  etopo1_bed_g_i2.bin     L</code></pre>
<h2 id="备注">备注</h2>
<p>如果下载的是 netCDF 格式的网格文件，需要利用如下命令将数据转换为 binary 格式:</p>
<pre><code>grdreformat ETOPO1_Ice_g_gmt4.grd etopo1_ice_g_i2.bin=bs -N -V</code></pre>
<p>当然对于 netCDF 格式的网格文件，也可以直接用 <code>grdcut</code> 做裁剪，用 <code>grdimage</code> 画图，省去了 <code>grdraster</code> 的步骤。哪个方便用哪个。</p>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
            <tag> 数据 </tag>
            
            <tag> 地形 </tag>
            
            <tag> 网格 </tag>
            
            <tag> 高程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[全球数字高程模型 GTOPO30]]></title>
      <url>http://seisman.info/global-digital-elevation-model-gtopo30.html</url>
      <content type="html"><![CDATA[<p>GTOPO30 是 USGS 公布的全球数字高程模型，其采样间隔为 30 弧秒。</p>
<a id="more"></a>
<h2 id="下载">下载</h2>
<p>批量下载所有数据文件:</p>
<pre><code>wget -r -c -np -nd ftp://edcftp.cr.usgs.gov/data/gtopo30/global/</code></pre>
<h2 id="解压">解压</h2>
<pre><code>for i in *.tar.gz;
do
    tar -zxvf $i;
done</code></pre>
<h2 id="说明">说明</h2>
<p>在 README 里有详细说明，重点归纳如下</p>
<ul>
<li><p>将全球分为 33 个区块，如下图所示，北纬 90 度到南纬 60 度分为 3 份，每份纬向 50 度，经向 40 度，共计 3*9=27 个 区块；南极附近为南纬 60 度到 90 度，经向 60 度，计 6 个区块，共计 33 个区块。</p>
<div class="figure">
<img src="/images/2013081101.png">

</div></li>
<li>采样间隔 30 弧秒，即 0.008333333333333 度，全球分为 21600 行、43200 列。</li>
<li>坐标参考为 WGS84；</li>
<li>其值为垂直方向高出海平面的距离，即海拔，单位为 m；</li>
<li>海拔范围 -407 到 8752，这里不包含海洋深度信息，负值应该是大陆架的海拔；</li>
<li>海洋处海拔标记为 -9999，海岸线以为大陆海拔至少为 1；</li>
<li>小于 1 平方千米的岛不考虑；</li>
<li>文件以该区块的左上角坐标为文件名；</li>
<li>文件后缀：DEM 为数据高程模型；其他的文件都是一些辅助信息；</li>
<li>纬度 50 度 * 经度 40 度文件大小：57600000 bytes</li>
<li><p>纬度 30 度 * 经度 60 度文件大小：28800000 bytes</p></li>
</ul>
<h2 id="复制">复制</h2>
<p>将所有 DEM 文件拷贝至 <code>$GMTHOME/share/dbase</code></p>
<h2 id="修改-grdraster.info">修改 grdraster.info</h2>
<pre><code># GTOPO30 N90-N40
11 &quot;GTOPO30 W180N90&quot;            &quot;m&quot;     -R-180/-140/40/90       -I0.5m          PG i 1           0    -9999      W180N90.DEM B
12 &quot;GTOPO30 W140N90&quot;            &quot;m&quot;     -R-140/-100/40/90       -I0.5m          PG i 1           0    -9999      W140N90.DEM B
13 &quot;GTOPO30 W100N90&quot;            &quot;m&quot;     -R-100/-60/40/90        -I0.5m          PG i 1           0    -9999      W100N90.DEM B
14 &quot;GTOPO30 W060N90&quot;            &quot;m&quot;     -R-60/-20/40/90         -I0.5m          PG i 1           0    -9999      W060N90.DEM B
15 &quot;GTOPO30 W020N90&quot;            &quot;m&quot;     -R-20/20/40/90          -I0.5m          PG i 1           0    -9999      W020N90.DEM B
16 &quot;GTOPO30 E020N90&quot;            &quot;m&quot;     -R20/60/40/90           -I0.5m          PG i 1           0    -9999      E020N90.DEM B
17 &quot;GTOPO30 E060N90&quot;            &quot;m&quot;     -R60/100/40/90          -I0.5m          PG i 1           0    -9999      E060N90.DEM B
18 &quot;GTOPO30 E100N90&quot;            &quot;m&quot;     -R100/140/40/90         -I0.5m          PG i 1           0    -9999      E100N90.DEM B
19 &quot;GTOPO30 E140N90&quot;            &quot;m&quot;     -R140/180/40/90         -I0.5m          PG i 1           0    -9999      E140N90.DEM B

# GTOPO30 N40-S10
20 &quot;GTOPO30 W180N40&quot;            &quot;m&quot;     -R-180/-140/-10/40      -I0.5m          PG i 1           0    -9999      W180N40.DEM B
21 &quot;GTOPO30 W140N40&quot;            &quot;m&quot;     -R-140/-100/-10/40      -I0.5m          PG i 1           0    -9999      W140N40.DEM B
22 &quot;GTOPO30 W100N40&quot;            &quot;m&quot;     -R-100/-60/-10/40       -I0.5m          PG i 1           0    -9999      W100N40.DEM B
23 &quot;GTOPO30 W060N40&quot;            &quot;m&quot;     -R-60/-20/-10/40        -I0.5m          PG i 1           0    -9999      W060N40.DEM B
24 &quot;GTOPO30 W020N40&quot;            &quot;m&quot;     -R-20/20/-10/40         -I0.5m          PG i 1           0    -9999      W020N40.DEM B
25 &quot;GTOPO30 E020N40&quot;            &quot;m&quot;     -R20/60/-10/40          -I0.5m          PG i 1           0    -9999      E020N40.DEM B
26 &quot;GTOPO30 E060N40&quot;            &quot;m&quot;     -R60/100/-10/40         -I0.5m          PG i 1           0    -9999      E060N40.DEM B
27 &quot;GTOPO30 E100N40&quot;            &quot;m&quot;     -R100/140/-10/40        -I0.5m          PG i 1           0    -9999      E100N40.DEM B
28 &quot;GTOPO30 E140N40&quot;            &quot;m&quot;     -R140/180/-10/40        -I0.5m          PG i 1           0    -9999      E140N40.DEM B

# GTOPO30 S10-S60
29 &quot;GTOPO30 W180S10&quot;            &quot;m&quot;     -R-180/-140/-60/-10     -I0.5m          PG i 1           0    -9999      W180S10.DEM B
30 &quot;GTOPO30 W140S10&quot;            &quot;m&quot;     -R-140/-100/-60/-10     -I0.5m          PG i 1           0    -9999      W140S10.DEM B
31 &quot;GTOPO30 W100S10&quot;            &quot;m&quot;     -R-100/-60/-60/-10      -I0.5m          PG i 1           0    -9999      W100S10.DEM B
32 &quot;GTOPO30 W060S10&quot;            &quot;m&quot;     -R-60/-20/-60/-10       -I0.5m          PG i 1           0    -9999      W060S10.DEM B
33 &quot;GTOPO30 W020S10&quot;            &quot;m&quot;     -R-20/20/-60/-10        -I0.5m          PG i 1           0    -9999      W020S10.DEM B
34 &quot;GTOPO30 E020S10&quot;            &quot;m&quot;     -R20/60/-60/-10         -I0.5m          PG i 1           0    -9999      E020S10.DEM B
35 &quot;GTOPO30 E060S10&quot;            &quot;m&quot;     -R60/100/-60/-10        -I0.5m          PG i 1           0    -9999      E060S10.DEM B
36 &quot;GTOPO30 E100S10&quot;            &quot;m&quot;     -R100/140/-60/-10       -I0.5m          PG i 1           0    -9999      E100S10.DEM B
37 &quot;GTOPO30 E140S10&quot;            &quot;m&quot;     -R140/180/-60/-10       -I0.5m          PG i 1           0    -9999      E140S10.DEM B

# GTOPO30 S60-S90
38 &quot;GTOPO30 W180S60&quot;            &quot;m&quot;     -R-180/-120/-90/-60     -I0.5m          PG i 1           0    -9999      W180S60.DEM B
39 &quot;GTOPO30 W120S60&quot;            &quot;m&quot;     -R-120/-60/-90/-60      -I0.5m          PG i 1           0    -9999      W120S60.DEM B
40 &quot;GTOPO30 W060S60&quot;            &quot;m&quot;     -R-60/0/-90/-60         -I0.5m          PG i 1           0    -9999      W060S60.DEM B
41 &quot;GTOPO30 W000S60&quot;            &quot;m&quot;     -R0/60/-90/-60          -I0.5m          PG i 1           0    -9999      W000S60.DEM B
42 &quot;GTOPO30 E060S60&quot;            &quot;m&quot;     -R60/120/-90/-60        -I0.5m          PG i 1           0    -9999      E060S60.DEM B
43 &quot;GTOPO30 E120S60&quot;            &quot;m&quot;     -R120/180/-90/-60       -I0.5m          PG i 1           0    -9999      E120S60.DEM B</code></pre>
<h2 id="其他说明">其他说明</h2>
<ul>
<li>这些 DEM 文件为 Pixel Registration 格式</li>
<li>数据值存储为有符号 16 位整型</li>
<li>这些数据都是 Big-endian 的</li>
</ul>
<h2 id="绘图测试">绘图测试</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">ID=11</div><div class="line">Range=-180/-140/40/90</div><div class="line">B=a10g10</div><div class="line">Inc=0.5m</div><div class="line">PS=<span class="variable">$&#123;ID&#125;</span>.ps</div><div class="line"></div><div class="line">gmt grdraster <span class="variable">$ID</span> -R<span class="variable">$Range</span> -I<span class="variable">$Inc</span> -Gout.grd</div><div class="line">gmt makecpt -Ctopo -T1/8000/1000 -Z &gt; colors.cpt</div><div class="line">gmt grdimage out.grd -B<span class="variable">$B</span> -R<span class="variable">$Range</span> -JQ15c -Ccolors.cpt &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line">rm out.grd colors.cpt gmt.*</div></pre></td></tr></table></figure>
<p>这里只绘制一个第一个区块的地形，若需要同时绘制多个区块，需要多次调用 <code>grdraster</code> 从不同的网格文件中提取网格， 然后用 <code>grdpaste</code> 粘贴成一个网格再绘图。</p>
<h2 id="南极区域">南极区域</h2>
<p>在南极区域还有一个特殊的高程数据 <code>ANTARCPS.DEM</code>，其包含了 S60-S90 区域的六个区块的数据，但是是经过极坐标 方位立体投影的。因而横坐标范围为（-2700，2700），纵坐标范围为（-2700，2700）。这个处理起来要麻烦一点。</p>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
            <tag> 数据 </tag>
            
            <tag> 地形 </tag>
            
            <tag> 网格 </tag>
            
            <tag> 高程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[全球地形起伏模型etopo5]]></title>
      <url>http://seisman.info/global-relief-model-etopo5.html</url>
      <content type="html"><![CDATA[<p>etopo5是全球高程及水深数据，其空间分辨率是5弧分，目前已被更高精度的etopo2和etopo1所取代。但在绘制 全球地形时，若觉得用etopo2得到的图形文件过大，也可使用低精度的etopo5，但还是<strong>不建议用etopo5</strong>。</p>
<p>官方页面： <a href="http://www.ngdc.noaa.gov/mgg/global/etopo5.html" class="uri" target="_blank" rel="external">http://www.ngdc.noaa.gov/mgg/global/etopo5.html</a></p>
<a id="more"></a>
<h2 id="下载地址">下载地址</h2>
<p><a href="http://www.ngdc.noaa.gov/mgg/global/relief/ETOPO5/TOPO/ETOPO5/" target="_blank" rel="external">ETOPO5下载</a></p>
<p>其中， <code>ETOPO5.DAT</code> 和 <code>ETOPO5.DOS</code> 包含了相同的高程数据，只是二者的字节序不同。 <code>ETOPO5.DOS</code> 为 <code>little-endian</code> ， <code>ETOPO5.DAT</code> 为 <code>big-endian</code> 。</p>
<h2 id="网格数据的说明">网格数据的说明</h2>
<p><a href="http://www.ngdc.noaa.gov/mgg/global/relief/ETOPO5/TOPO/ETOPO5/ETOPO5.txt" target="_blank" rel="external">官方说明文档</a></p>
<p>简单归纳一下：</p>
<ul>
<li>数据采样间隔为5弧分</li>
<li>经度上0度到359度55分共计4320个采样点（注意不是0到360度），维度方向-90度到90度为2161个点</li>
<li>每个数据用16位整数表示，即占用两字节，共计4320*2161*2=18671040字节</li>
<li>实际数据中只有18662400字节，这是因为数据中把-90度的南极给丢了，后面会做简单处理，把南极点补回来；</li>
<li>数据在文件中的排序很简单，从北纬90度，东经0度0分开始，接下来是360度*12采样点/度=4320采样点， 即8640个字节，一直到北纬90度，东经359度55分；第4321个点为北纬89度55分，东经0度0分，按照这样的顺序 不断排下去。每个纬度带4320个点，共计2160个纬度带。</li>
<li>北纬90度即北极，4320个点具有相同的值，为-4290m；南纬-90度即南极，没有包含在这个数据中，其海拔为2810 m。</li>
</ul>
<h2 id="数据的小修改">数据的小修改</h2>
<p>如前所说，数据中把南极丢了，这是个小问题，当绘制全球数据时会出现类似“南极海拔不一致”的警告，虽说 不是致命错误，还是改了吧，源代码如下：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"> * A simple C code to add the elevation of south pole to the ETOPO5 data</div><div class="line"> * Date:   04/30/2013</div><div class="line"> * Author: SeisMan</div><div class="line"> *</div><div class="line"> * Input:  ETOPO5.DOS</div><div class="line"> * Output: etopo5.i2</div><div class="line"> * Note: ETOPO5.DOS is little-endian;</div><div class="line"> *       ETOPO5.DAT is big-endian;</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NX 4320</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NY 2160</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">short</span> <span class="keyword">int</span> **<span class="title">imatrix</span><span class="params">(<span class="keyword">int</span> nrl,<span class="keyword">int</span> nrh,<span class="keyword">int</span> ncl,<span class="keyword">int</span> nch)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">  <span class="keyword">short</span> <span class="keyword">int</span> **topo;</div><div class="line">  <span class="keyword">int</span> ix, iy;</div><div class="line">  FILE *fip, *fop;</div><div class="line"></div><div class="line">  topo=imatrix(<span class="number">1</span>,NX,<span class="number">1</span>,NY+<span class="number">1</span>);</div><div class="line"></div><div class="line">  fip=fopen(<span class="string">"ETOPO5.DOS"</span>,<span class="string">"rb"</span>);</div><div class="line">  <span class="keyword">for</span>(iy=<span class="number">1</span>;iy&lt;=NY;iy++)&#123;</div><div class="line">    <span class="keyword">for</span>(ix=<span class="number">1</span>;ix&lt;=NX;ix++)</div><div class="line">      fread(&amp;topo[ix][iy],<span class="keyword">sizeof</span>(<span class="keyword">short</span> <span class="keyword">int</span>),<span class="number">1</span>,fip);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">for</span>(ix=<span class="number">1</span>;ix&lt;=NX;ix++)</div><div class="line">    topo[ix][NY+<span class="number">1</span>]=<span class="number">2810</span>;</div><div class="line"></div><div class="line">  fop=fopen(<span class="string">"etopo5.i2"</span>,<span class="string">"wb"</span>);</div><div class="line">  <span class="keyword">for</span>(iy=<span class="number">1</span>;iy&lt;=NY+<span class="number">1</span>;iy++)</div><div class="line">    <span class="keyword">for</span>(ix=<span class="number">1</span>;ix&lt;=NX;ix++)&#123;</div><div class="line">      fwrite(&amp;topo[ix][iy],<span class="keyword">sizeof</span>(<span class="keyword">short</span> <span class="keyword">int</span>),<span class="number">1</span>,fop);</div><div class="line"><span class="comment">//      printf("%d %d %d\n",ix,iy,topo[ix][iy]);</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">  close(fip);</div><div class="line">  close(fop);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">short</span> <span class="keyword">int</span> **<span class="title">imatrix</span><span class="params">(<span class="keyword">int</span> nrl,<span class="keyword">int</span> nrh,<span class="keyword">int</span> ncl,<span class="keyword">int</span> nch)</span></span>&#123;</div><div class="line">  <span class="keyword">int</span> i;</div><div class="line">  <span class="keyword">short</span> <span class="keyword">int</span> **m;</div><div class="line"></div><div class="line">  m=(<span class="keyword">short</span> <span class="keyword">int</span> **)<span class="built_in">malloc</span>((<span class="keyword">unsigned</span>) (nrh-nrl+<span class="number">1</span>)*<span class="keyword">sizeof</span>(<span class="keyword">short</span> <span class="keyword">int</span>*));</div><div class="line">  <span class="keyword">if</span> (!m) <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"allocation failure 1 in imatrix()\n"</span>);</div><div class="line">  m -= nrl;</div><div class="line"></div><div class="line">  <span class="keyword">for</span>(i=nrl;i&lt;=nrh;i++) &#123;</div><div class="line">    m[i]=(<span class="keyword">short</span> <span class="keyword">int</span> *)<span class="built_in">malloc</span>((<span class="keyword">unsigned</span>) (nch-ncl+<span class="number">1</span>)*<span class="keyword">sizeof</span>(<span class="keyword">short</span> <span class="keyword">int</span>));</div><div class="line">    <span class="keyword">if</span> (!m[i]) <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"allocation failure 2 in imatrix()\n"</span>);</div><div class="line">      m[i] -= ncl;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> m;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>编译并运行:</p>
<pre><code>$ gcc etopo5_mod.c -o etopo5_mod
$ ./etopo5_mod</code></pre>
<h2 id="复制">复制</h2>
<p>将修改后的 <code>etopo5.i2</code> 拷贝至 <code>${GMTHOME}/share/dbase</code> 下，并在 <code>grdraster.info</code> 中加入如下语句:</p>
<pre><code>1 &quot;ETOPO5 global topography&quot; &quot;m&quot; -R0/359:55/-90/90 -I5m GG i 1 0 none etopo5.i2</code></pre>
<p>这其实也就是默认的 <code>grdraster.info</code> 中的内容，只是GMT没有自带etopo5的数据。</p>
<h2 id="画图检查">画图检查</h2>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line">gmt grdraster 1 -Rg -I5m -Getopo5_global.grd</div><div class="line">gmt makecpt -Cglobe -T-10500/8000/1000 -Z &gt; colors.cpt</div><div class="line">gmt grdimage etopo5_global.grd -Ba60g30 -Rg -JN0/25c -Ccolors.cpt -K -Yc &gt; etopo5.ps</div><div class="line">gmt psscale -Ba2500f500+l&quot;m&quot; -Ccolors.cpt -Dx12.5c/-1.5c/15c/.35ch -O &gt;&gt; etopo5.ps</div><div class="line"></div><div class="line">rm etopo5_global.grd colors.cpt gmt.*</div></pre></td></tr></table></figure>
<div class="figure">
<img src="/images/2013081001.jpg">

</div>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT </tag>
            
            <tag> 数据 </tag>
            
            <tag> 地形 </tag>
            
            <tag> 网格 </tag>
            
            <tag> 高程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[pssac2 的安装]]></title>
      <url>http://seisman.info/install-pssac2.html</url>
      <content type="html"><![CDATA[<p><code>pssac2</code> 是由 Brian Savage 基于 Lupei Zhu 的 <code>pssac</code> 修改得到的，其继承了 <code>pssac</code> 的优质特性，同时在很多方面又有了进一步的提高。</p>
<p><code>pssac2</code> 目前有两个版本，一个支持 GMT4，一个支持 GMT5。</p>
<a id="more"></a>
<h2 id="gmt4-版">GMT4 版</h2>
<p>GMT4 版本的 <code>pssac2</code> 没有官方下载地址，目前只在 <a href="https://github.com/geodynamics/specfem3d/tree/master/utils/ADJOINT_TOMOGRAPHY_TOOLS/measure_adj/UTIL/pssac2" target="_blank" rel="external">specfem3d</a> 程序包中找到有 <code>pssac2</code> 的源码。</p>
<p>由于 specfem3d 中的 pssac2 下载起来有些麻烦，这里我整理了一个版本供读者下载： <a href="http://7j1zxm.com1.z0.glb.clouddn.com/downloads/pssac2_GMT4.tar.gz" target="_blank" rel="external">pssac2_GMT4.tar.gz</a></p>
<p>本文提供的版本在 specfem3d 给的源码的基础上做了如下操作与修改：</p>
<ol style="list-style-type: decimal">
<li>将源码压缩成 <code>tar.gz</code> 格式，方便下载；</li>
<li><p><code>configure</code> 文件的第 2467 行原为:</p>
<pre><code>LDFLAGS+=&quot;-L${withval}/lib &quot;</code></pre>
<p>修改为:</p>
<pre><code>LDFLAGS+=&quot;-L${withval}/lib -L${withval}/lib64&quot;</code></pre>
<p>修改后的版本同时考虑了 GMT 库文件在 <code>lib</code> 和 <code>lib64</code> 的两种可能性。</p></li>
</ol>
<p>安装方法如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ tar -xvf pssac2_GMT4.tar.gz</div><div class="line">$ <span class="built_in">cd</span> pssac2_GMT4</div><div class="line">$ ./configure --with-gmt=/opt/GMT-4.5.13</div><div class="line">$ make</div></pre></td></tr></table></figure>
<p>如果成功执行，则会在当前目录生成可执行文件 <code>pssac2</code> ，即可直接使用。</p>
<p>某些版本可能会出现如下错误:</p>
<pre><code>pssac2.c:27: error: conflicting types for &#39;BOOLEAN&#39;
/opt/GMT4/include/gmt.h:278: note: previous declaration of &#39;BOOLEAN&#39; was here</code></pre>
<p>出错的原因是 <code>BOOLEAN</code> 类型在两个地方的定义有冲突，把 <code>pssac2.c</code> 中第 27 行的 <code>typedef GMT_LONG BOOLEAN</code> 删除即可。</p>
<h2 id="gmt5-版">GMT5 版</h2>
<p>GMT5 版本的 pssac2 似乎有不少 bug，谨慎使用。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/savage13/pssac2.git</div><div class="line">$ ./configure --with-gmt=/opt/GMT-5.1.2</div><div class="line">$ make</div></pre></td></tr></table></figure>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-08-09：初稿；</li>
<li>2015-01-03：添加了 pssac2 的 GMT5 版本并简化了 GMT4 版本的说明；</li>
<li>2015-04-01：更新了 pssac2 的 GMT4 版本的地址；</li>
<li>2015-07-17：为 GMT4 版本的 pssac2 提供了新的下载链接；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> pssac2 </tag>
            
            <tag> 编译 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地震学入门简易指南]]></title>
      <url>http://seisman.info/simple-guide-to-seismology.html</url>
      <content type="html"><![CDATA[<p>写下标题《地震学入门指南》之后，觉得这个标题写得太大，我有些 hold 不住，所以加上了 “简易” 二字。 这里所说的地震学，专指天然地震学（勘探地震学不在讨论之列）。进入地震学，需要掌握地震学相关的基础知识、 了解地震学的前沿进展，同时需要掌握一些数据处理、分析相关的工具。这里只谈一谈天然地震学需要掌握的一些 工具与计算机技能。</p>
<a id="more"></a>
<h2 id="写在前面">写在前面</h2>
<h3 id="受众">受众</h3>
<p>这篇博文的主要受众是还没开始正式接触科研或刚刚接触科研的人，即大三大四的本科生以及研一新生，希望能够 在方向上给予指引；已经入门的人，或许可以看看有没有提到一些你还不知道的工具；地震学的牛人们，如果有 其他的想法和建议，也欢迎不断完善。</p>
<h3 id="为什么要学习工具">为什么要学习工具？</h3>
<p>有些人认为，做科研最重要的是 idea，工具什么的都不重要。我个人是很反对这样一个观点的。idea 本身是 很重要的，但是如何将 idea 快速、准确地转换成科研成果，则需要自己有足够的知识积累以及足够的工具支持。</p>
<p>同样要完成一件事情，没有工具的人可能需要做一天的重复劳动，有工具的人则可能借助于工具几分钟解决问题， 这就是效率上的差异，很多时候科研成果也是要拼速度的，不是吗？</p>
<p>因为<strong>工具可以提高我们的效率</strong>，所以值得学习。</p>
<h3 id="要学习哪些工具">要学习哪些工具？</h3>
<p>各类工具那么多，究竟要学习哪些？要学习多少工具？</p>
<p>这其实是个很难回答的问题。过分地关注于工具的学习，会导致科研的时间被压缩；而不去认真学习这些工具， 科研的效率又无法提升上去。这是一个矛盾，需要自己去权衡。</p>
<p>我个人的态度是，首先掌握最基础的工具，在此基础上，多接触其它工具、软件和代码，不求每个工具都搞明白， 至少花一点点时间看看 README，了解<strong>其可以做什么</strong>。在需要的时候第一时间判断哪个工具可以满足当前的需求。</p>
<h2 id="linux-基础">Linux 基础</h2>
<p>选择 Linux 还是 Windows？这个话题曾经在网上吵得很热，也许现在还有人在争论。就地震学而言，使用 Linux 的 优势要远远高于使用 Windows，原因简单列举如下：</p>
<ul>
<li>大多数地震学专用的软件都是在 Linux 下开发的，然后再移植到 Windows 下，因而这类软件在 Windows 下 相对来说有更多的 Bug；</li>
<li>很多开源的代码是在 Linux 下写的，然后用 <code>gcc</code> 或 <code>gfotran</code> 编译的。理论上，只要程序写的时候考虑的可移植性，在 Windows 下编译是没有问题的，但实际上大多 数代码都需要经过一番修改；</li>
<li>Windows 自带了批处理工具（Batch）以及 Shell（PowerShell），可以用于完成数据的批处理； 但前者功能太单一，后者用的人又很少，所以两者都不是合适的选择；</li>
<li>Linux 下自带了多种 Shell（Bash、csh、zsh），以及多个适合数据处理的工具，非常适合用于科研。</li>
</ul>
<p>要学习 Linux，首先要选择合适的发行版：Ubuntu、Debian 和 Fedora 应该算是比较适合新手的发行版。刚 接触 Linux 的新手可以考虑在虚拟机中安装不同的发行版，每个都尝试一下，找到最适合自己的就好。选择好发 行版之后，还要对发行版的版本代号有一些了解。以 Ubuntu 为例，对于 12.04 和 14.04 是长期支持版，支持周期 为 5 年，而其他版本的支持周期只有一年多。我遇到不少目前还在用 Ubuntu 13.10 的人，（13.10 在 2014 年 7 月 便不再被支持）。这就是在给自己挖坑，系统用的时间越长，重装的代价就越高，想要重装的欲望就越低，重装时 数据丢失的风险也越大。</p>
<p>接下来要选择合适的入门书籍：国内推荐的比较多的是《鸟哥的 Linux 私房菜 – 基础学习篇》，个人觉得其语言 过于啰嗦，知识点对于新手来说稍显繁杂；另一本推荐的比较多的是开源的《The Linux Command Line》， 该书有 <a href="http://billie66.github.io/TLCL/" target="_blank" rel="external">中文译本</a>。注意，要读的是介绍 Linux 的书，而不是 任何介绍 Linux 发行版的书。</p>
<p>对于 Linux 入门需要了解的知识点包括：</p>
<ul>
<li>了解 Linux 的历史，以及 Linux 与各个发行版之间的联系；</li>
<li>熟悉 Linux 的目录树，习惯使用命令行，掌握基本命令 <code>cd</code> 、 <code>pwd</code> 、<code>mkdir</code> 、 <code>rmdir</code>、 <code>ls</code> 、 <code>cp</code> 、 <code>rm</code> 、 <code>mv</code> 的基本用法；</li>
<li>理解绝对路径和相对路径；</li>
<li>理解环境变量 <code>PATH</code> 的作用；</li>
<li>理解 Linux 文件权限 <code>rwx</code> ，掌握 <code>chmod</code> 命令；</li>
<li>其他几个有用的命令： <code>cat</code> 、 <code>touch</code> 、 <code>head</code> 、 <code>tail</code> 、 <code>which</code> 、 <code>locate</code></li>
<li>符号链接 <code>ln</code> 与挂载 <code>mount</code> ；</li>
<li>了解最基本的 vi 编辑器的使用，因为很多时候 vi 是服务器上唯一能使用的编辑器；</li>
<li>掌握至少一种高级编辑器的使用，如 vim、emacs、sublime text、atom。怎样才叫掌握？这个问题 没有标准答案，选择其中一个一直用下去，遇到需要重复劳动或者不顺心的地方就去找各种插件配置一下。 像 gedit 这种编辑器不用也罢，用它来写程序效率太低；</li>
<li>理解 <code>~/.bashrc</code> 文件的作用；</li>
<li>理解并学会使用数据流重定向；</li>
<li>理解管道的作用及其用途；</li>
<li>Linux 通配符；</li>
<li>掌握压缩相关命令 <code>tar</code> 、 <code>gzip</code> 、 <code>bzip2</code> ，其实最主要的是 <code>tar</code> 命令的两种常用方式： <code>-zxvf</code> 和 <code>-jxvf</code> ；</li>
<li>与数据处理相关的命令： <code>awk</code> 、 <code>cut</code> 、 <code>grep</code> 、 <code>wc</code> 、 <code>sort</code> 、<code>uniq</code> ；</li>
</ul>
<p>PS：严格地说， <code>awk</code> 已经不单单是一个命令，更像是一种微型语言了。</p>
<h2 id="高级编程语言">高级编程语言</h2>
<p>C 应该是目前地震学界目前最常用的编程语言，一些老的代码可能用 Fortran 比较多，现在也有一些人使用 Java。</p>
<p>使用哪种高级编程语言并不重要。高级编程语言至少需要熟练使用一种，同时最好能够了解一些其它语言的语法， 这样可以更轻松的阅读别人的代码。</p>
<p>大学阶段应该都学过谭浩强写的 C 语言，这本书过分强调了一些不重要的东西，有些错误和误导之处，因而找 一本权威的 C 语言书籍重新复习、巩固和整理编程知识是很重要的。</p>
<p>在掌握了语言的基本语法的同时，还要确定自己的编程风格、注释风格以及代码管理方式，同时需要了解一些编译相关的知识：</p>
<ul>
<li>最基本的编译器选项，比如 <code>-c</code> 、 <code>-o</code> 、 <code>-g</code> 、 <code>-I</code> 、 <code>-L</code> 、 <code>-l</code> ；</li>
<li>编译、链接及运行的基础知识，理解头文件、库文件在编译、链接和执行过程中的作用。这部分很重要， 因为平常编译源码过程中出现最多的错误除了语法问题就是编译链接问题；</li>
<li>makefile：实现编译的自动化，比较流行的入门手册是《<a href="/how-to-write-makefile.html">跟我一起学 Makefile</a>》， 基本上前 8 章的内容就已经足够了；</li>
</ul>
<p>当然，也有些组只用 Matlab 就可以完成绝大部分任务，这个得看组内的传统。</p>
<h2 id="脚本语言">脚本语言</h2>
<h3 id="bash-及其相关">Bash 及其相关</h3>
<p>Bash 其实本身只是一个空壳，具有最基本的条件判断和循环功能。除此之外，日常需要的数据处理、字符串处理， 都需要借助于 Linux 下的其他命令，比如 <code>cat</code> 、 <code>awk</code> 、 <code>grep</code> 、 <code>cut</code> 、 <code>paste</code> 等等。 因而除了 bash 脚本自身的功能以外，还需要了解的工具包括:</p>
<ul>
<li><code>awk</code> ：文本处理工具；</li>
<li><code>sed</code> ：流编辑器</li>
<li><code>printf</code> ：格式打印；</li>
<li><code>grep</code> ：正则表达式匹配；</li>
<li>正则表达式；</li>
</ul>
<p>在科研过程中不推荐使用 Bash 脚本，因为 Bash Shell 与 awk 等命令本质上是独立的个体，二者在设计上有很多 不一致的地方，且 awk 等命令在设计的时候明显有向 Shell 妥协的意味。总之，Bash 脚本中坑比较多，仅仅适合 用几行就可以搞定的情况。</p>
<h3 id="perl-或-和-python">Perl 或 / 和 Python</h3>
<p>Perl 和 Python 是另外两种常见的脚本语言。在学会了 Bash 脚本以及相关的各种工具之后为什么还要学习新的 脚本语言呢？因为 Bash 虽然作为 Linux 下最底层最常用的脚本语言，但是其功能过于依赖于外部工具，且难以 实现更加复杂的功能。Perl 和 Python 可以完全自给自足，其内部完全实现了 awk、grep 等工具的功能， 且速度很快，更重要的是 Perl 和 Python 具有模块功能，可以从网上下载各种别人已经写好的模块来实现几乎 所有自己想要的功能。因而 Perl/Python 实际上比 Bash 功能更强大，学起来也并不难。如果有心学习 Perl/Python 的话，可以简单了解 bash 相关知识，然后直接进入更高级的脚本语言。</p>
<p>就目前的情况来看，Perl 适合日常的简单的数据处理，而 Python 适合完成各种复杂的工作同时也适合进行 科学计算。对于新手，更推荐学习 Python。当然最好 Perl 也懂一些，技多不压身嘛。</p>
<h2 id="sac">SAC</h2>
<p>SAC 是地震学的最常用的数据处理软件。关于 SAC，可以参考本博客的《SAC 参考手册》。</p>
<p>SAC 基础：</p>
<ul>
<li>阅读 SAC 文件格式，理解 SAC 文件的二进制存储，理解 SAC 头段变量的含义；</li>
<li>SAC 常用基本命令；</li>
</ul>
<p>SAC 进阶：</p>
<ul>
<li>SAC 变量；</li>
<li>SAC 内置函数；</li>
<li>SAC 宏以及脚本调用；</li>
<li>调用 SAC 提供的库读写 SAC 文件；</li>
<li>利用 Prof. Lupei Zhu 的 <code>sacio.c</code> 读写 SAC 文件；</li>
<li>学习并掌握 saclst 的用法；</li>
</ul>
<h2 id="gmt">GMT</h2>
<p>GMT 是地震学领域最常用的绘图软件。GMT 很重要，但是又没那么重要。其重要之处在于数据处理的最终结果要 通过图像的形式表现出来，而 GMT 在某些时候是最佳的工具，其不重要之处在于入门前期基本不太需要绘图。</p>
<p>GMT 基础：</p>
<p>GMT 入门的最好方法大概就是阅读《GMT Technical Reference and Cookbook》了；</p>
<ul>
<li>掌握最常用的 GMT 选项；</li>
<li>将所有的投影方式看一遍，对每种投影方式的结果有些印象即可；</li>
<li>简单浏览所有命令，大概知道每个命令的功能；</li>
<li>浏览 GMT 提供的 30 个例子，对每个例子有印象，必要的时候再翻看，同时巩固 bash 脚本的知识；</li>
</ul>
<p>GMT 进阶：</p>
<ul>
<li>熟悉 GMT 的常用命令及其每个选项；</li>
<li>熟悉 GMT 的全部命令；</li>
<li>查看相关代码，理解一下内部机制</li>
</ul>
<h2 id="其他计算机技能">其他计算机技能</h2>
<h3 id="git">Git</h3>
<p>对于经常写代码的人来说，在修改代码之前都会把原始代码备份一下，以防止一时糊涂把好代码给改坏了。备 份的次数多了，自己也就乱了。所以经常写代码的人，需要学会版本控制。</p>
<p>Git 是目前最流行的版本控制软件。学会使用 Git 之后，就可以随心所欲的修改代码而不必担心把代码改坏了。</p>
<p>Git 学起来很简单，几乎几分钟就可以学会使用基本功能，当然高级些的功能还是需要看看教程的。</p>
<ul>
<li><a href="http://www.bootcss.com/p/git-guide/" target="_blank" rel="external">Git 简易指南</a></li>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰的 Git 教程</a></li>
<li><a href="http://git-scm.com/book/zh" target="_blank" rel="external">Pro Git 中文版</a></li>
</ul>
<h2 id="其他相关">其他相关</h2>
<ul>
<li>pssac：利用 GMT 的绘图库绘制 SAC 文件的命令；</li>
<li>TauP：计算到时等等信息的工具；</li>
<li>仪器响应：理解仪器响应是正确数据处理的基础；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[利用 Web Service Fetch scripts 申请和下载数据]]></title>
      <url>http://seisman.info/web-service-fetch-scripts.html</url>
      <content type="html"><![CDATA[<h2 id="iris-web-service">IRIS Web Service</h2>
<p>IRIS DMC 提供了一系列网页服务，用于获取台站数据、仪器响应、走时以及波形数据等。 简而言之，其原理大概就是根据某种特定的格式要求发送网页请求，然后 IRIS 会返回相应的 信息供用户解析。</p>
<p>IRIS 网页服务的主页位于： <a href="http://service.iris.edu/" class="uri" target="_blank" rel="external">http://service.iris.edu/</a> ，有兴趣的可以研究一下。</p>
<h2 id="web-service-fetch-script">Web Service Fetch Script</h2>
<p>主页：<a href="https://seiscode.iris.washington.edu/projects/ws-fetch-scripts" class="uri" target="_blank" rel="external">https://seiscode.iris.washington.edu/projects/ws-fetch-scripts</a></p>
<p>这是一个利用 IRIS 提供的网页服务来实现数据下载的工具，其源代码用 perl 写成， 因而几乎可以在任何平台上直接运行。整个工具包含了三个 perl 脚本：<code>FetchData</code>、 <code>FetchEvent</code> 和 <code>FetchMetadata</code>。</p>
<a id="more"></a>
<h3 id="fetchdata">FetchData</h3>
<p>功能：获取时间序列文件，或/和与之相关的元数据、SAC 零极点文件、响应文件。其中时间序列文件为 miniSEED 格式， 元数据为 ASCII 格式。</p>
<p>用法：</p>
<pre><code>FetchData: collect time series and related metadata (version 2013.198)
http://service.iris.edu/clients/

Usage: FetchData [options]

 Options:
 -v                Increase verbosity, may be specified multiple times
 -N,--net          Network code, list and wildcards (* and ?) accepted
 -S,--sta          Station code, list and wildcards (* and ?) accepted
 -L,--loc          Location ID, list and wildcards (* and ?) accepted
 -C,--chan         Channel codes, list and wildcards (* and ?) accepted
 -Q,--qual         Quality indicator, default is best
 -s starttime      Specify start time (YYYY-MM-DD,HH:MM:SS.ssssss)
 -e endtime        Specify end time (YYYY-MM-DD,HH:MM:SS.ssssss)
 --lat min:max     Specify a minimum and/or maximum latitude range
 --lon min:max     Specify a minimum and/or maximum longitude range
 --radius lat:lon:maxradius[:minradius]
                     Specify circular region with optional minimum radius
 -l listfile       Read list of selections from file
 -b bfastfile      Read list of selections from BREQ_FAST file
 -msl length       Limit returned data to a minimum segment length
 -lso              Limit returned data to the longest segment only
 -A appname        Application/version string for identification
 -a user:pass      User and password for access to restricted data

 -o outfile        Fetch time series data and write to output file
 -sd sacpzdir      Fetch SAC P&amp;Zs and write files to sacpzdir
 -rd respdir       Fetch RESP and write files to respdir
 -m metafile       Write basic metadata to specified file</code></pre>
<p>例子：</p>
<p>获取 2011 年第一个小时 GSN 所有台站的 BHZ 分量的数据</p>
<pre><code>$ FetchData -N _GSN -C BHZ -s 2011-01-01T00:00:00 -e 2011-01-01T01:00:00 -o GSN.mseed -m GSN.metadata</code></pre>
<p>下载得到的数据为 miniSEED 格式，因而需要用 <code>mseed2sac</code> 进行格式转换。</p>
<p>说明：</p>
<ul>
<li>台网、台站等支持通配符；</li>
<li>可以通过 <code>--lat</code> 和 <code>--lon</code> 划定矩形区域或通过 <code>--radius</code> 划定圆形区域来指定台站；</li>
<li>可以直接从特定格式的文件中读取要下载的波形信息；</li>
<li>可以下载相关 SAC PZ 文件或/和 RESP 文件；</li>
</ul>
<h3 id="fetchevent">FetchEvent</h3>
<p>功能：获得满足一定条件的所有事件信息</p>
<p>用法：</p>
<pre><code>FetchEvent: collect event information (2013.198)
http://service.iris.edu/clients/

Usage: FetchEvent [options]

 Options:
 -v                More verbosity, may be specified multiple times (-vv, -vvv)

 -s starttime      Limit to origins after time (YYYY-MM-DD,HH:MM:SS.sss)
 -e endtime        Limit to origins before time (YYYY-MM-DD,HH:MM:SS.sss)
 --lat min:max     Specify a minimum and/or maximum latitude range
 --lon min:max     Specify a minimum and/or maximum longitude range
 --radius lat:lon:maxradius[:minradius]
                     Specify circular region with optional minimum radius
 --depth min:max   Specify a minimum and/or maximum depth in kilometers
 --mag min:max     Specify a minimum and/or maximum magnitude
 --magtype type    Specify a magnitude type for magnitude range limits
 --cat name        Limit to origins from specific catalog (e.g. ISC, PDE, GCMT)
 --con name        Limit to origins from specific contributor (e.g. ISC, NEIC)
 --ua date         Limit to origins updated after date (YYYY-MM-DD,HH:MM:SS)

 --allorigins      Return all origins, default is only primary origin per event
 --allmags         Return all magnitudes, default is only primary magnitude per event
 --orderbymag      Order results by magnitude instead of time

 --evid id         Select a specific event by DMC event ID
 --orid id         Select a specific event by DMC origin ID

 -X xmlfile        Write raw returned XML to xmlfile
 -A appname        Application/version string for identification

 -o outfile        Write event information to specified file, default: console</code></pre>
<p>例子：</p>
<pre><code>$ FetchEvent -s 2011-03-11 --radius 38.2:142.3:20 --mag 6</code></pre>
<p>说明：</p>
<ul>
<li>这个脚本功能齐全，值得一用</li>
</ul>
<h3 id="fetchmetadata">FetchMetadata</h3>
<p>功能：获取台站元数据</p>
<p>用法：</p>
<pre><code>FetchMetadata: collect channel metadata (2013.198)
http://service.iris.edu/clients/

Usage: FetchMetadata [options]

 Options:
 -v                Increase verbosity, may be specified multiple times
 -N,--net          Network code, list and wildcards (* and ?) accepted
 -S,--sta          Station code, list and wildcards (* and ?) accepted
 -L,--loc          Location ID, list and wildcards (* and ?) accepted
 -C,--chan         Channel codes, list and wildcards (* and ?) accepted
 -s starttime      Specify start time (YYYY-MM-DD,HH:MM:SS)
 -e endtime        Specify end time (YYYY-MM-DD,HH:MM:SS)
 -ua date          Limit to metadata updated after date (YYYY-MM-DD,HH:MM:SS)
 -X xmlfile        Write raw returned FDSN StationXML to xmlfile
 -l listfile       Read list of selections from file
 -b bfastfile      Read list of selections from BREQ_FAST file
 -sta              Print station level information, default is channel
 -resp             Request response level information, no details printed
 -A appname        Application/version string for identification

 -o outfile        Write basic metadata to specified file instead of printing</code></pre>
<h2 id="其他">其他</h2>
<p>整个脚本还有一些其他功能，具体参考项目主页中的 <a href="https://seiscode.iris.washington.edu/projects/ws-fetch-scripts/wiki/Running_the_scripts_and_examples" target="_blank" rel="external">示例</a></p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> IRIS </tag>
            
            <tag> Perl </tag>
            
            <tag> 数据 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SAC 的时间概念]]></title>
      <url>http://seisman.info/timing-of-sac.html</url>
      <content type="html"><![CDATA[<h2 id="时间变量">时间变量</h2>
<p>SAC 用于处理时间序列，其头段变量中与时间有关的也很多，总的来说分为 2 类：</p>
<ol style="list-style-type: decimal">
<li><strong>GMT时间</strong>：绝对时间，或参考时间，包括 <code>NZYEAR</code>、<code>NZJDAY</code>、<code>NZHOUR</code>、<code>NZMIN</code>、<code>NZSEC</code>、<code>NZMSEC</code>， 分别代表年、日、时、分、秒、毫秒。注意这里没有月的概念，<code>NZJDAY</code> 代表该年的第多少天。 这 6 个变量构成了一个绝对时间，这个绝对时间以更易读的形式保存在变量 <code>KZDATE</code> 和 <code>KZTIME</code> 中 （这两个变量虽然说是头段变量，但是在文件中实际上并不对应这两个变量的存储空间），其是 整个 SAC 文件中唯一的绝对时间，因而用作为参考时间去定义相对时间。</li>
<li><strong>相对时间</strong>：包括 <code>B</code>、<code>E</code>、<code>O</code>、<code>A</code>、<code>F</code>、<code>Tn</code> 等等，这些相对时间的值都是相对于绝对时间来定义的。 <code>O=100</code> 即意味着发震时刻为参考时间加上 100 秒所对应的 GMT 时间。</li>
</ol>
<a id="more"></a>
<h2 id="测试">测试</h2>
<p>下面针对这些时间变量做一些测试，试着更深刻地理解 SAC 的时间。</p>
<h3 id="原始数据">原始数据</h3>
<p>选取了一个地震的三分量，列出其 <code>kzdate</code>、<code>kztime</code>、<code>b</code>、<code>e</code> 如下：</p>
<pre><code>kzdate = MAR 11 (070), 2011
kztime = 05:46:23.019
b = 5.380000e-04
e = 4.499951e+03</code></pre>
<h3 id="修改文件起始时间-b">修改文件起始时间 b</h3>
<p>用如下命令直接修改文件起始时间</p>
<pre><code>ch b 10</code></pre>
<p>得到结果如下：</p>
<pre><code>kzdate = MAR 11 (070), 2011
kztime = 05:46:23.019
b = 1.000000e+01
e = 4.509950e+03</code></pre>
<p>文件的参考时间没有发生变化，<code>b</code> 和 <code>e</code> 都向后推迟了 10s，这意味着整段 SAC 数据任一点的绝对时间 延迟了 10s，因而这一点可以用来校正时间零飘以及时区差异（但是前提是当前文件中 <code>o</code>、<code>a</code>、<code>f</code>、 <code>tn</code> 未定义）。</p>
<h3 id="修改文件结束时间-e">修改文件结束时间 e</h3>
<p>用如下命令直接修改文件结束时间</p>
<pre><code>ch e 0</code></pre>
<p>得到结果如下：</p>
<pre><code>kzdate = MAR 11 (070), 2011
kztime = 05:46:23.019
b = 5.380000e-04
e = 4.499951e+03</code></pre>
<p>文件的参考时间以及 <code>e</code> 均没有发生变化，这意味着 <code>e</code> 的值不是可以任意改变的，而是根据 <code>b</code>、<code>delta</code> 及 <code>npts</code> 动态决定的，尝试修改 <code>delta</code>，<code>e</code> 值随之改变；尝试修改 <code>npts</code> 以达到类似 cut 的效果时， 出现警告：</p>
<pre><code>WARNING: NVHDR, NPTS, NWFID, NORID, and NEVID cannot be changed with CHNHDR</code></pre>
<h3 id="修改-oaftn">修改 o、a、f、tn</h3>
<p>这些变量是用于标记时刻的变量，不是必须的，用户可以随意修改，不会对参考时间等产生任何的影响。</p>
<h3 id="修改参考时间">修改参考时间</h3>
<p>随便定义了几个 <code>o</code>、<code>a</code>、<code>f</code>、<code>t0</code> 的值，以验证修改参考时间对这些时间变量的影响，原始变量值如下：</p>
<pre><code>kzdate = MAR 11 (070), 2011
kztime = 05:46:23.019
b = 5.380000e-04
e = 4.499951e+03
o = 2.000000e+01
a = 4.000000e+01
f = 9.000000e+01
t0 = 6.000000e+01</code></pre>
<p>用如下命令修改参考时间</p>
<pre><code>ch nzmin 50</code></pre>
<p>得到结果如下：</p>
<pre><code>kzdate = MAR 11 (070), 2011
kztime = 05:50:23.019
b = 5.380000e-04
e = 4.499951e+03
o = 2.000000e+01
a = 4.000000e+01
f = 9.000000e+01
t0 = 6.000000e+01</code></pre>
<p>整个 SAC 文件中除参考时间外其他时间都没有发生变化。参考时间变化了而相对时间没有变化，这导致 SAC 数据点的 绝对时间发生了平移，与第一条中直接修改 <code>b</code> 的情况类似。可以通过修改参考时间的方式来校正时钟漂移和时区差异， 当然一般不这么做。</p>
<h3 id="修改参考时间为发震时刻">修改参考时间为发震时刻</h3>
<p>很多情况下，需要将参考时间修改为发震时刻，从第四条可以看出，直接修改参考时间的方案是不可行的。</p>
<p>当我们将参考时间提前 10s 的时候，为了保证其他时间变量所对应的绝对时间不发生变化，我们需要同时将各个 相对时间加上 10s（这样才能保证在某个参考时间下标记的震相到时等信息可以完全映射到另一个参考时间下的 震相到时，这或许可以理解为时间坐标系下的坐标变换）。</p>
<p>因为修改参考时间，而使得每个相对时间都要一一修改，这工作量有点大。SAC 自身提供了一个更为简单的选项 帮助我们实现了这一功能，如 manaul 中所说：“你可以使用 <code>allt</code> 选项改变这个参考时间和其他所有的相对时间， 这个秒数 t 增加到每个给定的相对时间上，同样的秒数也从参考时间中减去，这样就使数据实际的 GMT 时间保持不变”。</p>
<p>还是上面那个例子，使用</p>
<pre><code>ch allt 10</code></pre>
<p>得到结果如下：</p>
<pre><code>kzdate = MAR 11 (070), 2011
kztime = 05:46:13.019
b = 1.000054e+01
e = 4.509951e+03
o = 3.000000e+01
a = 5.000000e+01
f = 1.000000e+02
t0 = 7.000000e+01</code></pre>
<p>相对时间都增加了 10s，参考时间减少了 10s。</p>
<h3 id="直接使用-gmt-时间">直接使用 GMT 时间</h3>
<p>为方便起见，你可以输入一个 GMT 时间而不是输入一个相对时间。当输入 GMT 时间时，SAC 首先将其变为相对时间 再存储到头段变量中。已知某事件的发震时刻，想要将发震时刻作为参考时间，其他所有的相对时间都变成相对 这个参考时间的秒数，可以使用</p>
<pre><code>ch o gmt 2011 070 05 50 23 019</code></pre>
<p>得到如下结果：</p>
<pre><code>kzdate = MAR 11 (070), 2011
kztime = 05:46:23.019
b = 5.380000e-04
e = 4.499951e+03
o = 2.400000e+02
a = 4.000000e+01
f = 9.000000e+01
t0 = 6.000000e+01</code></pre>
<p>发震时刻被转换为相对时间 240 存储在头段变量 <code>o</code> 中，为了修改参考时间为发震时刻，需要将所有相对时间减去 240 s， 参考时间加上 240 s，命令为</p>
<pre><code>ch allt －240 iztype io</code></pre>
<p>结果如下：</p>
<pre><code>kzdate = MAR 11 (070), 2011
kztime = 05:50:23.019
b = -2.399995e+02
e = 4.259951e+03
o = 0.000000e+00
a = -2.000000e+02
f = -1.500000e+02
t0 = -1.800000e+02</code></pre>
<p>由结果可以看出，这么做达到了我们想要的目的。</p>
<h2 id="总结">总结</h2>
<p>将 SAC 中的时间变量可以细分为三类：</p>
<ul>
<li>第一类为参考时间，即 <code>NZYEAR</code>、<code>NZJDAY</code>、<code>NZHOUR</code>、<code>NZMIN</code>、<code>NZSEC</code>、<code>NZMSEC</code>；</li>
<li>第二类为相对时间，即 <code>o</code>、<code>a</code>、<code>f</code>、<code>tn</code>；</li>
<li>第三类为特殊的相对时间，即 <code>b</code>、<code>e</code>。</li>
</ul>
<p>在第三类中 <code>e</code> 是不能随意改变的，所以可以不考虑。单独修改这三类时间变量都不会影响其他时间变量，修改第二 类时间不会造成整个数据的绝对时间的改变，修改第一、三类时间变量时数据绝对时间会发生改变（该特性可用于 校正时间零漂或时区不一致）。为了保证数据的绝对时间不发生改变，通常使用 <code>allt</code> 选项来实现。</p>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SAC技巧 </tag>
            
            <tag> 时间 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[闰年的判断]]></title>
      <url>http://seisman.info/leap-year.html</url>
      <content type="html"><![CDATA[<p>判定某年为闰年的标准是：</p>
<ul>
<li>能被 4 整除且不能被 100 整除的</li>
<li>能被 400 整除的</li>
</ul>
<p>用 C 语言实现代码就是</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ((year % <span class="number">100</span> != <span class="number">0</span>) &amp;&amp; (year % <span class="number">4</span> == <span class="number">0</span>) || (year % <span class="number">400</span> == <span class="number">0</span>)) &#123;</div><div class="line">   <span class="comment">// 输出该年是闰年;</span></div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">   <span class="comment">// 输出该年是平年;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>一种更简单的写法是</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> ISLEAP(yr) ((!((yr) % 4) &amp;&amp; (yr) % 100) || !((yr) % 400))</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安装 pssac]]></title>
      <url>http://seisman.info/install-pssac.html</url>
      <content type="html"><![CDATA[<p><code>pssac</code> 是 Prof. Lupei Zhu 根据 GMT 的 <code>psxy</code> 命令修改得到，用于绘制 SAC 格式的波形数据的 一个小程序。</p>
<p>该程序调用了 GMT 的绘图库，因而安装该程序之前需要首先安装 GMT4。</p>
<p><strong>GMT5用户请注意，GMT 从 5.3.1 起自带了 pssac 模块，可以直接使用 <code>gmt pssac</code> 来调用。</strong></p>
<a id="more"></a>
<h2 id="下载">下载</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 下载基于 GMT4.0 的 pssac 包</span></div><div class="line">$ wget http://www.eas.slu.edu/People/LZhu/downloads/pssac.tar</div><div class="line">$ tar -xvf pssac.tar      <span class="comment"># 解压</span></div><div class="line"></div><div class="line"><span class="comment"># 下载基于 GMT4.5 的 pssac 源码</span></div><div class="line">$ wget http://www.eas.slu.edu/People/LZhu/downloads/pssac.c</div><div class="line"></div><div class="line">$ mv pssac.c pssac/       <span class="comment"># 用基于 GMT4.5 的 pssac.c 替换基于 GMT 4.0 的 pssac.c</span></div><div class="line">$ <span class="built_in">cd</span> pssac</div></pre></td></tr></table></figure>
<h2 id="修改-makefile">修改 Makefile</h2>
<p>源码中的 Makefile 有些问题，需要进一步修改。修改之后的 Makefile 内容如下：</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">GMTHOME=/opt/GMT-4.5.13</div><div class="line">GMT_INC=-I$&#123;GMTHOME&#125;/<span class="keyword">include</span></div><div class="line">GMT_LIBS=-L$&#123;GMTHOME&#125;/lib -lgmt -lpsl -lgmtps -lnetcdf -lm</div><div class="line"></div><div class="line">CFLAGS = -O $&#123;GMT_INC&#125;</div><div class="line"></div><div class="line"><span class="section">pssac: pssac.o sacio.o</span></div><div class="line">    $(LINK.c) -o <span class="variable">$@</span> <span class="variable">$@</span>.o sacio.o <span class="variable">$(GMT_LIBS)</span></div><div class="line"></div><div class="line"><span class="section">clean:</span></div><div class="line">    rm -f pssac *.o</div></pre></td></tr></table></figure>
<ul>
<li><code>GMTHOME</code> 是当前系统中 GMT4 的安装路径，需要根据自己的情况修改</li>
<li><code>GMT_INC</code> 指定了 GMT 的头文件的位置</li>
<li><code>GMT_LIBS</code> 指定了编译过程中所需要的库文件</li>
<li><code>-L</code> 指定了在编译过程中要在哪些路径下寻找库文件</li>
</ul>
<p>通常情况下，只需要根据自己的情况修改 <code>GMTHOME</code> 即可。</p>
<p>如果出现 <code>-lnetcdf</code> 找不到的情况，可能的原因是 netCDF 不是通过系统自带的 软件包管理器安装而是手动编译的，此时需要在 <code>GMT_LIBS</code> 中加上 netCDF 所对应的 路径，比如:</p>
<pre><code>GMT_LIBS=-L${GMTHOME}/lib -L/path/to/netcdf/lib -lgmt -lpsl -lgmtps -lnetcdf -lm</code></pre>
<p>当然也有可能某些发行版下不是 <code>lib</code> 目录，而是 <code>lib64</code> 目录。</p>
<h2 id="编译">编译</h2>
<p>编译过程就是简单的 make，正常情况下的输出如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ make</div><div class="line">cc -O -I/opt/GMT-4.5.13/include   -c -o pssac.o pssac.c</div><div class="line">cc -O -I/opt/GMT-4.5.13/include   -c -o sacio.o sacio.c</div><div class="line">cc -O -I/opt/GMT-4.5.13/include    -o pssac pssac.o sacio.o -L/opt/GMT-4.5.13/lib -lgmt -lpsl -lgmtps -lnetcdf -lm</div></pre></td></tr></table></figure>
<p>编译会生成可执行文件 <code>pssac</code> ，将该可执行文件复制到 <code>PATH</code> 中即可，比如 <code>/usr/local/bin</code> 、 <code>/opt/GMT-4.5.13/bin</code> 或 <code>${HOME}/bin</code> 。</p>
<h2 id="执行">执行</h2>
<p>终端直接执行 <code>pssac</code> 就会出现命名的语法说明。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-04-17：初稿；</li>
<li>2013-04-19：加入了对旧版本 <code>pssac.c</code> 的讨论；</li>
<li>2014-06-24：GMT4 的最近几个版本，都不再建议自己安装 netcdf3 了，最好还是自己利用系统自带的 软件包管理器安装 netcdf4。在这种情况下，netcdf 会被安装到系统默认路径中，因而 Makefile 中不需要再指明 netcdf 的安装路径；</li>
<li>2014-07-16：在某些系统下，<code>GMT_LIBS</code> 需要加上 <code>-lm</code> ；</li>
<li>2015-07-16：整理，并删除对旧版本 <code>pssac.c</code> 的说明；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> pssac </tag>
            
            <tag> GMT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SAC 不同格式间的转换]]></title>
      <url>http://seisman.info/conversion-of-different-sac-formats.html</url>
      <content type="html"><![CDATA[<p>SAC 文件格式包括二进制格式和 ASCII 格式，平常接触的都是二进制格式的，毕竟二进 制格式相对于 ASCII 格式有很多优点，比如读写速度更快、文件大小更小。下面讨论 SAC 的两种格式以及另外一种常见的数据格式（自变量 + 因变量两列数据）之间的转换。</p>
<a id="more"></a>
<h2 id="二进制转-ascii">二进制转 ASCII</h2>
<pre><code>SAC&gt; r sacfile
SAC&gt; w alpha sacfile.ascii</code></pre>
<p>有时数据遇到问题的时候，可以转换成 ASCII 格式，看看里面的内容。</p>
<h2 id="ascii-转二进制">ASCII 转二进制</h2>
<pre><code>SAC&gt; r alpha sacfile.ascii
SAC&gt; w sacfile</code></pre>
<h2 id="单列数据转二进制">单列数据转二进制</h2>
<p>数据文件中只含一列数据，包含了因变量的信息。</p>
<pre><code>SAC&gt; readtable data1
SAC&gt; w sacfile</code></pre>
<h2 id="两列数据转二进制">两列数据转二进制</h2>
<p>数据文件中含两列数据，包含了自变量和因变量的信息。</p>
<pre><code>SAC&gt; readalpha content xy data2
SAC&gt; w sacfile</code></pre>
<p>非时间序列数据（任意的 xy 数据）都可以用 SAC 来处理以实现相应的功能，这也就是 SAC 自称其为 “一个用于处理连续信号尤其是时间序列数据的通用交互式程序” 的原因。</p>
<h2 id="二进制转时间序列">二进制转时间序列</h2>
<p>没法用命令直接做到，比较合适的做法是写一个 C 或 FORTRAN 调用读取 SAC 文件，然后 以数组形式写入文件。</p>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 格式转换 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SAC 文件修改事件经纬度后震中距的自动计算]]></title>
      <url>http://seisman.info/calculate-gcarc-after-adding-event-location.html</url>
      <content type="html"><![CDATA[<p>地震目录中包含震中的经度、纬度、深度等信息，有些时候下载的数据中没有这些事件信息， 就需要自己手动添加进去。</p>
<p>很基础的操作:</p>
<pre><code>SAC &gt; r *.BH*
SAC &gt; ch evla 30.5 evlo 120.5 evdp 5.0
SAC &gt; wh
SAC &gt; q</code></pre>
<p>修改了地震经纬度及深度信息之后，一般来说，震中距 dist、gcarc 以及方位角 az、baz 也会 随着一起改变。但是，有些时候这些量却没有随着事件位置的变化而变化，这是为什么呢？</p>
<a id="more"></a>
<p>在 SAC 的头段中有一个逻辑型变量 <code>LCALDA</code>（L 代表 logical 型变量，CAL 代表 calculate， D 代表 dist 以及 gcarc，a 代表 az 以及 gaz）。这个逻辑型变量决定了 gcarc 等参数是否会随着 震源或台站的位置的改变而改变。<code>LCALDA</code> 为 <code>TRUE</code> 则会随着改变，为 <code>FALSE</code> 则不会改变。</p>
<p>下面用一些测试来深入了解一下：</p>
<pre><code>SAC&gt; fg seis
SAC&gt; lh dist gcarc az baz                     #看看原始文件的震中距和方位角

  FILE: SEISMOGR - 1
 --------------

      dist = 3.730627e+02
     gcarc = 3.357465e+00
        az = 8.814721e+01
       baz = 2.718528e+02

SAC&gt; lh evla evlo evdp lcalda                 #看看事件位置信息和 LCALDA 变量

  FILE: SEISMOGR - 1
 --------------

       evla = 4.800000e+01
       evlo = -1.250000e+02
       evdp = 1.500000e+01
     lcalda = TRUE
SAC&gt; ch evla 55                               #修改事件位置
SAC&gt; lh dist gcarc az baz                     #震中距方位角马上就变了

  FILE: SEISMOGR - 1
 --------------

      dist = 8.521611e+02
     gcarc = 7.670734e+00
        az = 1.539900e+02
       baz = 3.379012e+02
SAC&gt; ch lcalda false                         #修改 lcalda 为 false
SAC&gt; ch evla 60
SAC&gt; lh dist gcarc az baz                    #震中距方位角没有变化

  FILE: SEISMOGR - 1
 --------------

      dist = 8.521611e+02
     gcarc = 7.670734e+00
        az = 1.539900e+02
       baz = 3.379012e+02
SAC&gt; ch lcalda true                          #再次把 lcalda 修改为 true
SAC&gt; lh dist gcarc az baz                    #震中距信息马上就修改了。
                                             #这意味着在修改 lcalda 为真时
                                             #SAC 会自动检查某些变量值

  FILE: SEISMOGR - 1
 --------------

      dist = 1.374330e+03
     gcarc = 1.237276e+01
        az = 1.641464e+02
       baz = 3.482054e+02</code></pre>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SAC技巧 </tag>
            
            <tag> 震中距 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Perl 的单引号字符直接量]]></title>
      <url>http://seisman.info/single-quoted-string-literals-in-perl.html</url>
      <content type="html"><![CDATA[<p>Perl 的字符串直接量分为两种：单引号内的和双引号内的。单引号与双引号最大的区别在于单引号限制了转义字符的功能，但是又存在一些例外。</p>
<a id="more"></a>
<p>比如字符串 fred 用单引号字符串直接量表示为</p>
<pre><code>&#39;fred&#39;</code></pre>
<p>也可以用单引号直接量表示一个空字符串</p>
<pre><code>&#39;&#39;</code></pre>
<p>单引号作为字符串的分界符，其具有特别的含义，但有些字符串中需要它，比如 <code>Don't be late</code> . 如果表示为</p>
<pre><code>&#39;Don&#39;t be late.&#39;</code></pre>
<p>就错了，Perl 会将第一个和第二个单引号作为分界符，Don 后面的字符都被忽略了。这个时候就需要用反斜杠去转义单引号：</p>
<pre><code>&#39;Don\&#39;t late.&#39;</code></pre>
<p>转义单引号会带来另外一个问题，比如字符串 ABC\，表达成单引号字符串直接量为</p>
<pre><code>&#39;ABC\&#39;</code></pre>
<p>根据前面所说，这样写的话，第二个单引号会被反斜杠转义，因而这个单引号直接量没有结束标识。为了解决这个问题，应该让反斜杠转义反斜杠</p>
<pre><code>&#39;ABC\\&#39;</code></pre>
<p>由此，在单引号内反斜杠可以转义的字符只有单引号以及反斜杠。</p>
<pre><code>&#39;Hello\n&#39;</code></pre>
<p>将表示长度为 7 的字符串 <code>Hello\n</code></p>
<pre><code>&#39;\&#39;\\&#39;</code></pre>
<p>将表示长度为 2 的字符串 <code>'\</code></p>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Perl </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Perl 发送邮件到 BREQ_FAST]]></title>
      <url>http://seisman.info/send-email-in-perl.html</url>
      <content type="html"><![CDATA[<p>BREQ_FAST 的优势在于可脚本化生成数据申请文件，要真正申请数据还得将这些文件作为邮件内容发送过去， 因而想要解放双手，利用脚本自动发送邮件是必须的。</p>
<p>本文给出如何用 Perl 发送邮件到 BREQ_FAST，另一篇博文《<a href="/send-mail-in-python.html">Python 发送邮件到 BREQ_FAST</a>》 给出了同样功能的 Python 脚本。相比而言，Python 版本更简单、简洁。</p>
<a id="more"></a>
<h2 id="脚本">脚本</h2>
<p>下面的 Perl 脚本利用 <code>Net::SMTP</code> 模块实现了邮件的脚本发送：</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/perl -w</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#  Perl Script to send emails to IRIS</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#  Author:  SeisMan @ seisman.info</span></div><div class="line"><span class="comment">#  Date:    2013/07/22</span></div><div class="line"><span class="comment">#</span></div><div class="line"></div><div class="line"><span class="keyword">use</span> warnings;</div><div class="line"><span class="keyword">use</span> strict;</div><div class="line"></div><div class="line"><span class="keyword">use</span> Net::SMTP;</div><div class="line"><span class="keyword">use</span> MIME::Base64;</div><div class="line"></div><div class="line">@ARGV &gt;= <span class="number">1</span> <span class="keyword">or</span> <span class="keyword">die</span> <span class="string">"Usage: perl $0 mailfiles \n"</span>;</div><div class="line"></div><div class="line"><span class="keyword">my</span> $host = <span class="string">'smtp.163.com'</span>;          <span class="comment"># host domain</span></div><div class="line"><span class="keyword">my</span> $sender = <span class="string">'xxxxxxx@163.com'</span>;                  <span class="comment"># my email</span></div><div class="line"><span class="keyword">my</span> $passwd = <span class="string">"xxxxxxxxx"</span>;            <span class="comment"># password</span></div><div class="line"><span class="keyword">my</span> $recipient=<span class="string">'breq_fast@iris.washington.edu'</span>;  <span class="comment"># BREQ_FAST email</span></div><div class="line"></div><div class="line"><span class="keyword">foreach</span> (@ARGV) &#123;</div><div class="line">    <span class="keyword">my</span> $smtp = Net::SMTP-&gt;new(</div><div class="line">        <span class="string">Host    =&gt;</span>   $host,</div><div class="line">        <span class="string">Timeout =&gt;</span>   <span class="number">30</span>,</div><div class="line">        <span class="string">Debug   =&gt;</span>   <span class="number">0</span>,</div><div class="line">    );</div><div class="line"></div><div class="line">    <span class="comment"># Log in</span></div><div class="line">    $smtp-&gt;command(<span class="string">'AUTH LOGIN'</span>)-&gt;response();</div><div class="line">    <span class="keyword">my</span> $userpass = encode_base64($sender);  <span class="keyword">chomp</span>($userpass);</div><div class="line">    $smtp-&gt;command($userpass)-&gt;response();</div><div class="line">    $userpass = encode_base64($passwd); <span class="keyword">chomp</span>($userpass);</div><div class="line">    $smtp-&gt;command($userpass)-&gt;response();</div><div class="line"></div><div class="line">    <span class="comment"># send mail</span></div><div class="line">    <span class="keyword">print</span> <span class="string">"Sending mailfile $_\n"</span>;</div><div class="line">    $smtp-&gt;mail($sender);</div><div class="line">    $smtp-&gt;to($recipient);</div><div class="line">    $smtp-&gt;data();</div><div class="line">    $smtp-&gt;datasend(<span class="string">"From: $sender \n"</span>);</div><div class="line">    $smtp-&gt;datasend(<span class="string">"To: $recipient \n"</span>);</div><div class="line">    $smtp-&gt;datasend(<span class="string">"\n"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">open</span>(IN,<span class="string">"&lt;$_"</span>) <span class="keyword">or</span> <span class="keyword">die</span> <span class="string">"Error in opening $_\n"</span>;</div><div class="line">        $smtp-&gt;datasend($_) <span class="keyword">foreach</span> (&lt;IN&gt;);</div><div class="line">    <span class="keyword">close</span>(IN);</div><div class="line">    $smtp-&gt;dataend();</div><div class="line">    $smtp-&gt;quit;</div><div class="line"><span class="comment">#   unlink "$_";</span></div><div class="line"></div><div class="line">    <span class="keyword">sleep</span>(<span class="number">5</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中 <code>MIME::Base64</code> 模块对邮件内容进行编码，<code>$host</code> 为邮件服务器的 ip 或者域名，<code>$sender</code> 为邮箱，<code>$passwd</code> 为明文密码。</p>
<p>脚本首先向邮件服务器申请身份验证，然后分别读取每个 mailfile 中的内容作为邮件正文发送到 <code>$recipient</code>。</p>
<h2 id="功能及限制">功能及限制</h2>
<ol style="list-style-type: decimal">
<li>支持一次性发送多封邮件（一次登录可以发送的邮件数是有限制的，所以采取多次登录的方式； 频繁发送邮件可能会导致 ip 被封，因而每封邮件之间等待 10s）；</li>
<li>密码明文存储，不太安全；</li>
<li>没有判断身份验证失败的情况；</li>
<li>可以通过 Debug=&gt;1 的方式获取调试信息以确定身份验证是否成功，但调试信息过多；</li>
</ol>
<h2 id="参考">参考</h2>
<ul>
<li><a href="http://blog.sina.com.cn/s/blog_541a3cf10100ji64.html" target="_blank" rel="external">perl 发送邮件真正可用版本</a></li>
<li><a href="http://search.cpan.org/=gbarr/libnet-1.22/Net/SMTP.pm" target="_blank" rel="external">CPAN Net::SMTP</a></li>
</ul>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-07-26：初稿；</li>
<li>2013-11-22：修正了脚本复制过程中的一个 bug。Thanks to cxh757.</li>
<li>2014-01-13：注释 <code>unlink &quot;$_&quot;;</code>，该句会在脚本执行完毕后删除邮件，由于脚本未做邮件发送 是否成功的检测，贸然删除邮件对于用户不够友好</li>
<li>2014-08-24：加入了 Python 版本的链接</li>
<li>2016-03-07：邮件头中加入发件人信息，以避免被 163 当做 spam</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> breq_fast </tag>
            
            <tag> 邮件 </tag>
            
            <tag> Perl </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IRIS 数据申请工具: BREQ_FAST]]></title>
      <url>http://seisman.info/iris-breq-fast.html</url>
      <content type="html"><![CDATA[<p>BREQ_FAST 是 Batch REQuests FAST 的简称。简单来说，就是通过发送特定格式的邮件到指定的 邮箱来申请数据。这种数据申请的方法不同于常见的交互式方法，因而特别适合写脚本自动生成 邮件内容、自动发送邮件、自动下载数据。</p>
<a id="more"></a>
<h2 id="优点">优点</h2>
<ul>
<li>简单易用，易于自动化</li>
<li>速度快，不受网速限制</li>
<li>从申请到下载可以完全脚本化，适合数据批量申请</li>
</ul>
<h2 id="缺点">缺点</h2>
<ul>
<li>需要自己准备地震目录及台站列表</li>
<li>需要自己计算震相走时以确定要申请的数据时间窗</li>
<li>非交互式，不像其他方法那样可以在线获得事件信息，根据事件选择符合一定条件的台站</li>
</ul>
<h2 id="邮件内容格式">邮件内容格式</h2>
<p>BREQ_FAST 对邮件内容的格式有严格的要求，但对邮件主题无要求。具体格式要求如下:</p>
<pre><code>.NAME
.INST
.MAIL
.EMAIL
.PHONE
.FAX
.MEDIA:
.ALTERNATE MEDIA:
.ALTERNATE MEDIA:
.LABEL
.SOURCE     ---
.HYPO         | optional
.MAGNITUDE  ---
.QUALITY
.END
 request line-1
 request line-2
 ...
 ...
 ...
 request line-n</code></pre>
<p>要保证所有以 “<code>.</code>” 开头的标记行左对齐！！！</p>
<ul>
<li><code>.Name</code> ：用户姓名，IRIS 会根据此标记在 ftp 上建立相关文件夹；</li>
<li><code>.INST</code> ：单位或者机构信息（应该没啥用）；</li>
<li><code>.MAIL</code> ：邮寄地址；（不会寄东西的）</li>
<li><code>.EMAIL</code> ：邮箱。IRIS 会向这个邮箱发送有关数据状态的邮件，可以与发送该邮件的邮箱地址不同；</li>
<li><code>.PHONE</code> ：电话；（没用）</li>
<li><code>.FAX</code> ：传真；（没用）</li>
<li><code>.MEDIA</code> ：数据获取介质。有如下几种方式可以选择（按照倾向性排序），现在常用的方式是 FTP， 要求指定第一、第二、第三介质；
<ul>
<li>Electronic (FTP)</li>
<li>EXABYTE – 2 gigabyte</li>
<li>EXABYTE – 5 gigabyte</li>
<li>DAT (digital audio tape)</li>
<li>DLT</li>
<li>DVD-R</li>
</ul></li>
<li><code>.LABEL</code> ：申请的 SEED 数据将会以该 LABEL 命名，SEED 文件内部也会包含这个 LABEL 的信息，应该 选择合适的 LABEL 以保证文件名的唯一性和可区分性；（以发震时刻命名是个不错的选择）</li>
<li><code>.SOURCE</code> 、 <code>.HYPO</code> 和 <code>.MAGNITUDE</code> 是可选的，其指定了震源的一些信息，这些信息最终 会被写入 SEED 文件中；若未指定这三个标记，SEED 解压出的 SAC 文件时没有震源信息的；若指定了这三个 标记，解压出来的 SAC 文件时有震源信息的（只是猜测，没试过）。这几行写起来有些复杂，不要也罢， 震源信息可以后期再写入。这三个标记的详细信息可以参考最后给出的链接。</li>
<li><code>.QUALITY</code> ：数据质量；一般默认 B；
<ul>
<li><code>B</code> ：最好的数据（首选 Q，没有 Q 则选择 D，没有 D 则选择 R）</li>
<li><code>E</code> ：所有数据（Q+D+R）</li>
<li><code>Q</code> ：经过质量控制的数据</li>
<li><code>D</code> ：中等质量数据；</li>
<li><code>R</code> ：最原始数据；</li>
</ul></li>
<li><code>request line</code> 是真正的数据申请信息，前面的那些都只是辅助信息；</li>
</ul>
<h2 id="request-line-格式">Request Line 格式</h2>
<pre><code>STA NN YYYY MM DD HH MM SS.TTTT YYYY MM DD HH MM SS.TTTT #_CH CH1 CH2 CHn LI</code></pre>
<ul>
<li><code>STA</code> ：台站名</li>
<li><code>NN</code> ：台网或虚拟台网名</li>
<li><code>YYYY</code>、<code>MM</code>、<code>DD</code>、<code>HH</code>、<code>MM</code>：年份（四位）、月、日、时、分</li>
<li><code>SS.TTTT</code> ：秒；小数点后为毫秒，可以省略；</li>
<li>日期和时间出现了两次，分别代表要申请的数据的开始时间和结束时间；</li>
<li><code>#_CH</code> ：接下来通道名的列数；</li>
<li><code>CHn</code> ：通道名可以包含通配符；</li>
<li><code>LI</code> ：LOCATION ID，可选</li>
</ul>
<p>每行最多包含 100 个字符。</p>
<h2 id="通配符">通配符</h2>
<p>通道标识符支持通配符，目前仅支持通配符 <code>?</code>，代表任意单个字符，比如 <code>BH?</code> 代表所有宽频带 （Broadband）高增益（High gain）的通道，可能包含 <code>BHE</code>、<code>BHN</code>、<code>BHZ</code>、<code>BH1</code>、<code>BH2</code> 等等；通道列表 可以包含多个字段，比如 <code>3 LHZ BH? S??</code>。</p>
<p>台网和台站也可使用通配符，但是不建议台网和台站同时使用通配符；单个 <code>?</code> 可以匹配该台网的所有台站。</p>
<p>如果不指定位置号，则获取该台站的全部 location 的数据。</p>
<p>对于每个台站可以分别指定数据窗范围，因而可以根据到时信息确定需要的数据窗，最大程度减少数据量。不过长一点也无所谓。</p>
<h2 id="例子">例子</h2>
<p>给出了 <code>SOURCE</code>、<code>HYPO</code>、<code>MAGNITUDE</code> 的例子，<code>request line</code> 给出了尽可能多的写法：</p>
<pre><code>.NAME Joe Seismologist
.INST Podunk University
.MAIL 101 Fast Lane, Middletown, KS  89432
.EMAIL joe@podunk.edu
.PHONE 555 555-1212
.FAX   555 555-1213
.MEDIA FTP
.ALTERNATE MEDIA 1/2&quot; tape - 6250
.ALTERNATE MEDIA EXABYTE
.LABEL Joe&#39;s FIRST Request
.SOURCE =NEIC PDE=Jan 1990 PDE=National Earthquake Information Center - USGS DOI=
.HYPO =1999 01 02 20 21 32.62= 13.408= 144.439=135.0=18=216=Mariana Islands=
.MAGNITUDE =5.7=mb=
.QUALITY B
.END
GRFO IU 1999 01 02 00 18 10.4 1999 01 02 00 20 10.4  1 SHZ
ANTO IU 1999 01 02 02 10 36.6 1999 01 02 02 12 36.6  1 SH?
AFI  IU 1999 01 02 02 10 37.1 1999 01 02 02 12 37.1  1 BH? 00
SEE  CD 1999 01 02 14 45 08.9 1999 01 02 14 47 08.9  1 SHZ
CASY IU 1999 01 04 02 42 13.4 1999 01 04 02 44 13.4  1 BHZ 10
NNA  II 1999 01 04 02 41 57.5 1999 01 04 02 43 57.5  1 BHZ
PFO  TS 1999 01 04 02 41 57.5 1999 01 04 02 43 57.5  1 BHZ
PFO  II 1999 01 04 02 41 57.5 1999 01 04 02 43 57.5  1 BHZ
KMI  CD 1999 01 04 02 41 57.5 1999 01 04 02 43 57.5  1 BHZ
SSE  CD 1999 01 04 02 18 25.4 1999 01 04 02 20 25.4  2 B?? SHZ
PAS  TS 1999  1  4  2 10 49   1999  1  4  2 12 49    3 BH? SHZ L??</code></pre>
<h2 id="发送邮件到这里">发送邮件到这里</h2>
<p>根据上面的规则生成了邮件内容，直接将内容作为邮件正文（不是附件）以纯文本格式发送到指定邮箱，不同的邮箱功能不同；</p>
<ul>
<li><code>breq_fast@iris.washington.edu</code> ：申请完整的 SEED 文件，最常用的方式；</li>
<li><code>DATALESS@iris.washington.edu</code> ：无数据的 SEED 文件，包含仪器响应、仪器坐标等台站信息，一般与 miniSEED 数据联合使用；</li>
<li><code>miniseed@iris.washington.edu</code> ：miniSEED 数据，只有数据没有台站信息；</li>
<li><code>sync@iris.washington.edu</code> ：合成数据</li>
</ul>
<h2 id="申请回应">申请回应</h2>
<p>发送数据请求之后，通常在很短的时间内，就会收到第一封邮件，通知你 IRIS 已经收到该邮件。一段较长的时间后， 将收到第二封邮件。如果一切顺利，则第二封邮件将告诉你数据已经准备完毕，并给出下载链接。否则则告诉你无法 完成你的请求。通常有如下几种出错的原因：</p>
<ol style="list-style-type: decimal">
<li>邮件内容的格式错误</li>
<li>IRIS DMC 中没有你要申请的数据</li>
<li>要申请的数据不完全公开</li>
</ol>
<p>如果发送数据请求后，很长时间都没有收到第一封邮件，一个可能的情况是在发送邮件时使用了富文本，这种情况 通常是由于使用网页版的邮箱发送导致的。</p>
<p>为了避免富文本导致的问题，建议用 Perl 或 Python 脚本发送邮件。</p>
<h2 id="bug-和限制">Bug 和限制</h2>
<ul>
<li>无法识别超过正常范围的时间，比如分钟数大于 59，这要求用户自己认真处理时间问题；</li>
<li>每行必须左对齐；</li>
<li>通配符只支持 “<code>?</code>”</li>
</ul>
<h2 id="参考">参考</h2>
<ul>
<li><a href="http://www.iris.edu/dms/nodes/dmc/manuals/breq_fast/" target="_blank" rel="external">BREQ_FAST Manaul</a></li>
<li><a href="http://www.iris.edu/manuals/SEED_appA.htm" target="_blank" rel="external">SEED 通道命名规则</a></li>
<li><a href="http://www.iris.edu/dms/newsletter/vol1/no1/specification-of-seismograms-the-location-identifier/" target="_blank" rel="external">Location ID 命名规则</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> breq_fast </tag>
            
            <tag> IRIS </tag>
            
            <tag> 数据申请 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JPlotResp：绘制地震仪器响应]]></title>
      <url>http://seisman.info/jplotresp.html</url>
      <content type="html"><![CDATA[<p>要理解仪器响应，就要看 RESP 的格式，更重要是直观地看仪器响应的振幅相位谱。</p>
<p>前面介绍的 <a href="/simple-analysis-of-resp.html">RESP 文件</a> 和 <a href="/simple-analysis-of-sac-pz.html">SAC PZ</a> 文件都只是给出了一堆零极点以及放大系数等各种参数。JPlotResp 是用来绘制地震仪器响应的 软件，可以帮助直观地看到任意台站的仪器响应。</p>
<p>主页： <a href="http://www.isti2.com/JPlotResp/" class="uri" target="_blank" rel="external">http://www.isti2.com/JPlotResp/</a></p>
<a id="more"></a>
<h2 id="简介">简介</h2>
<ul>
<li>Java 语言</li>
<li>底层由 JEvalResp 计算仪器响应</li>
<li>JEvalResp 是 evalresp 的 Java 版本</li>
</ul>
<h2 id="功能">功能</h2>
<ul>
<li>支持在线查询，指定台网、台站以及时间即可；</li>
<li>直接绘制本地 Resp 文件；</li>
<li>支持多种仪器响应：速度、加速度、位移；</li>
<li>绘制振幅相位谱、复数谱；</li>
<li>指数坐标或者线性坐标；</li>
</ul>
<h2 id="截图">截图</h2>
<div class="figure">
<img src="/images/2013071901.jpg" alt="JPlotResp 启动界面">
<p class="caption">JPlotResp 启动界面</p>
</div>
<div class="figure">
<img src="/images/2013071902.jpg" alt="读取本地RESP文件">
<p class="caption">读取本地RESP文件</p>
</div>
<div class="figure">
<img src="/images/2013071903.jpg" alt="绘制振幅响应谱">
<p class="caption">绘制振幅响应谱</p>
</div>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 仪器响应 </tag>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[由矩张量计算双力偶断层参数]]></title>
      <url>http://seisman.info/from-moment-tensor-to-double-couple.html</url>
      <content type="html"><![CDATA[<p>Double Couple 由四个参数描述：Strike、Dip、Rake、Moment；Moment Tensor 由 9 个量描述， 由于对称性，减少到六个。</p>
<p>任意一个 double couple 都可以写成 moment tensor 的形式，但并非所有的 moment tensor 都可以写成 double couple 形式。double couple 只是 moment tensor 的一个子集而已。</p>
<p>若干月前，有人问到如何将 moment tensor 转换成 double couple，搜了一下，发现了 一个别人写的代码。做了一下排版，试了一个例子，结果是对的，没有再看细节。</p>
<p>代码分为三个部分：</p>
<ul>
<li>ten2axe：将 moment tensor 转换成主轴坐标系；</li>
<li>axe2dc：将主轴坐标系下的结果转换为 double couple 解；</li>
<li>ten2dc.pl：我写的 perl 脚本，实现两个程序的衔接（作者给的是 shell 脚本）</li>
</ul>
<p>原文链接： <a href="http://www.fcaglp.unlp.edu.ar/~esuarez/gmt/1998/0102.html" target="_blank" rel="external">链接已死</a></p>
<p>代码下载： <a href="http://seisman.qiniudn.com/downloads/ten2dc.tar.gz" target="_blank" rel="external">ten2dc.tar.gz</a></p>
<p>PS：没看过代码，不确定原理，不确定正确性。</p>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 震源机制解 </tag>
            
            <tag> 断层 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Firefox 安装 Java 插件]]></title>
      <url>http://seisman.info/java-plugin-of-firefox.html</url>
      <content type="html"><![CDATA[<p>由于某个变态网站，需要 Java 插件才能使用，所以需要在 Firefox 上安装 Java 插件。在 Oracle 的网站上搜到解决办法，原文在 <a href="http://www.oracle.com/technetwork/java/javase/manual-plugin-install-linux-136395.html" target="_blank" rel="external">这里</a>， 排版难看的要死，故而重新排版。</p>
<p>我的计算机环境如下：</p>
<ul>
<li>操作系统：CentOS 6.4 Final</li>
<li>Firefox 版本：17.0.7</li>
<li>Java 版本：OpenJDK 1.7.0</li>
</ul>
<p>安装步骤如下：</p>
<ol style="list-style-type: decimal">
<li>退出 Firefox；</li>
<li>卸载原来安装的 Java 插件（没装过就不卸了）；</li>
<li><p>找到 Java 自带的浏览器插件的位置；</p>
<pre><code>$ locate libnpjp2
/usr/java/jre1.7.0_21/lib/amd64/libnpjp2.so
/usr/local/cuda-5.0/jre/lib/amd64/libnpjp2.so</code></pre></li>
<li><p>在 firefox 插件目录中建立到 Java 插件文件的软链接；</p>
<pre><code>$ cd ~/.mozilla/plugins/
$ ln -s /usr/java/jre1.7.0_21/lib/amd64/libnpjp2.so libnpjp2.so</code></pre></li>
<li>启动 firefox，在地址栏输入 <code>about:plugins</code>，查看插件是否正常加载；</li>
<li><p>搞定收工。</p></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> Firefox </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux 下安装 TeXLive 2016]]></title>
      <url>http://seisman.info/install-texlive-under-linux.html</url>
      <content type="html"><![CDATA[<p>本文将介绍如何在 Linux 下安装 TeXLive 2016。</p>
<a id="more"></a>
<h2 id="依赖包">依赖包</h2>
<ul>
<li>安装过程中需要调用 Perl 的模块 <code>Digest::MD5</code> 来检测 ISO 文件的完整性；</li>
<li>升级过程中界面需要调用 Perl 的模块 <code>Tk</code> ；</li>
</ul>
<p>CentOS:</p>
<pre><code>$ sudo yum install perl-Digest-MD5 perl-Tk</code></pre>
<p>Ubuntu:</p>
<pre><code>$ sudo apt-get install libdigest-perl-md5-perl perl-tk</code></pre>
<h2 id="安装">安装</h2>
<h3 id="下载">下载</h3>
<p>下载地址：</p>
<ul>
<li>官方镜像: <a href="http://mirrors.ctan.org/systems/texlive/Images/texlive2016.iso" target="_blank" rel="external">texlive2016.iso</a></li>
<li>USTC 镜像: <a href="http://mirrors.ustc.edu.cn/CTAN/systems/texlive/Images/texlive2016.iso" target="_blank" rel="external">texlive2016.iso</a></li>
</ul>
<p>Linux 下可以用 wget、axel，windows 下可以用迅雷，怎么快怎么来。</p>
<h3 id="挂载-iso-镜像">挂载 ISO 镜像</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ su</div><div class="line"><span class="comment"># mount -o loop texlive2016.iso  /mnt/</span></div><div class="line"><span class="comment"># cd /mnt</span></div><div class="line"><span class="comment"># ./install-tl</span></div></pre></td></tr></table></figure>
<p>出现选项后，输入 <code>I</code> 直接安装（也可以更改选项）。不出意外的话，5 分钟应该就 OK 了， 然后退出 root 用户。</p>
<h3 id="环境变量">环境变量</h3>
<p>在当前用户的 <code>~/.bashrc</code> 中加入如下语句：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># TeX Live 2016</span></div><div class="line"><span class="built_in">export</span> MANPATH=<span class="variable">$&#123;MANPATH&#125;</span>:/usr/<span class="built_in">local</span>/texlive/2016/texmf-dist/doc/man</div><div class="line"><span class="built_in">export</span> INFOPATH=<span class="variable">$&#123;INFOPATH&#125;</span>:/usr/<span class="built_in">local</span>/texlive/2016/texmf-dist/doc/info</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:/usr/<span class="built_in">local</span>/texlive/2016/bin/x86_64-linux</div></pre></td></tr></table></figure>
<h3 id="卸载-iso-镜像">卸载 ISO 镜像</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span></div><div class="line">$ sudo umount /mnt/</div></pre></td></tr></table></figure>
<h2 id="更新-texlive">更新 TeXLive</h2>
<p>可以使用如下命令更新 TeXLive 宏包：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ su</div><div class="line"><span class="comment"># 更新 TeXLive 包管理器 tlmgr</span></div><div class="line"><span class="comment"># tlmgr update --self</span></div><div class="line"><span class="comment"># 更新 TeXLive 的全部包</span></div><div class="line"><span class="comment"># tlmgr update --all</span></div></pre></td></tr></table></figure>
<p>默认情况下，会自动搜索合适的镜像来更新，也可以使用 <code>--repository</code> 选项指定了要使用 哪一个 CTAN 镜像。</p>
<p>比如 USTC 镜像:</p>
<pre><code># tlmgr update --self --repository http://mirrors.ustc.edu.cn/CTAN/systems/texlive/tlnet/
# tlmgr update --all --repository http://mirrors.ustc.edu.cn/CTAN/systems/texlive/tlnet/</code></pre>
<p>比如阿里云镜像:</p>
<pre><code># tlmgr update --self --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/
# tlmgr update --all --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/</code></pre>
<p>如果希望在图形界面下升级，可以使用如下命令调出 tlmgr 的中文图形界面：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ su</div><div class="line"><span class="comment"># tlmgr --gui --gui-lang zh_CN</span></div></pre></td></tr></table></figure>
<h2 id="安装额外的字体">安装额外的字体</h2>
<p>TeXLive 2016 在使用 xeLaTeX 处理中文时，有自己的默认字体。大多数 Linux 发行版下， 都使用自带的 Fandol 字体。</p>
<p>如果想要使用 Windows 字体，可以将字体文件复制到 <code>~/.fonts</code> 目录下，并在 tex 源码中 指定字体选项即可。</p>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-07-11：初稿；</li>
<li>2014-07-06：修改为 TeXLive2014，并删除中文字体部分；</li>
<li>2015-03-08：新增 “安装依赖”；</li>
<li>2015-03-15：使用命令行更新包；</li>
<li>2015-03-20：指定更新源以及 GUI 更新；</li>
<li>2015-06-13：更新至 TeXLive 2015；</li>
<li>2016-06-07：更新至 TeXLive 2016；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 编程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> LaTeX </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[走时计算软件 TauP]]></title>
      <url>http://seisman.info/taup-toolkit.html</url>
      <content type="html"><![CDATA[<h2 id="基本信息">基本信息</h2>
<ol style="list-style-type: decimal">
<li>开发者： <a href="http://sc.edu/" target="_blank" rel="external">University of South Carolina</a></li>
<li>语言：Java</li>
<li>平台：跨平台，Windows、Linux、Mac 等</li>
<li>与 ttimes 一样，其原理基于 Buland 和 Chapman 于 1983 年提出的方法</li>
</ol>
<a id="more"></a>
<h2 id="功能与特色">功能与特色</h2>
<p>相对于 ttimes 而言，TauP 具有更多的功能和特色：</p>
<ol style="list-style-type: decimal">
<li>可以计算震相走时、射线参数、反射点、穿透点、射线路径、走时曲线等</li>
<li>支持自定义速度模型</li>
<li>内置震相解析器，支持不常见的震相名</li>
<li>自带多个预定义地球模型：iasp91、prem、ak135、jb、1066a、1066b、pwdk、sp6、herrin</li>
<li>部分兼容 ttimes，比如用 ttp 表示常见 P 波震相，除此之外，还有 tts、ttp+、tts+、ttbasic、ttall</li>
<li>采用线性插值，可能带来 0.01 秒的误差</li>
<li>直接在球坐标系下求解方程，不必做展平变换；与部分震相的解析解相比，最大误差为 0.01 秒，而 ttimes 的最大误差为 0.05 秒</li>
</ol>
<p>目前来看的缺点是：</p>
<ol style="list-style-type: decimal">
<li>不支持 PKPab、PKPbc 等震相名</li>
<li>输出的格式不够灵活，有时需要自己写脚本从输出中提取信息</li>
</ol>
<h2 id="工具">工具</h2>
<p>TauP 提供了多个工具，包括有图形界面的 <code>taup</code> ，交互式的 <code>taup_console</code>，以及命令行工具 <code>taup_time</code> 、 <code>taup_pierce</code> 、 <code>taup_setsac</code> 、<code>taup_path</code> 、 <code>taup_curve</code> 、 <code>taup_create</code> 、 <code>taup_table</code> 、 <code>taup_wavefront</code> 。</p>
<h2 id="taup-系列博文">TauP 系列博文</h2>
<ol style="list-style-type: decimal">
<li><a href="/install-taup.html">安装 TauP</a></li>
<li><a href="/calculate-travel-time-using-taup.html">用 taup_time 计算震相走时及射线信息</a></li>
<li><a href="/calculate-pierce-points-using-taup.html">用 taup_pierce 计算射线的界面的穿透点</a></li>
<li><a href="/mark-travel-time-using-taup.html">用 taup_setsac 将走时信息写入 SAC 文件</a></li>
<li><a href="/taup-custom-models.html">TauP 自定义速度模型</a></li>
<li><a href="/taup-identify-multiple-P-phases.html">识别 TauP 输出中的多个 P 震相</a></li>
<li><a href="/calculate-travel-time-of-deep-mantle-underside-reflection.html">计算任意深度处下表面反射波走时</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 走时 </tag>
            
            <tag> TauP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GMT 使用 -K 和 -O 的技巧]]></title>
      <url>http://seisman.info/how-to-use-gmt-ko.html</url>
      <content type="html"><![CDATA[<p><code>-K</code> 和 <code>-O</code> 是 GMT 的 17 个标准选项中最常用但最容易出错的两个。本文将介绍使用 这两个选项的技巧。</p>
<a id="more"></a>
<h2 id="用法回顾">用法回顾</h2>
<ul>
<li>如果一张图只需要一个命令就可以画出来，则不需要 <code>-K</code> 和 <code>-O</code> 选项；</li>
<li>如果一张图由两个命令绘制出来，第一个命令需要使用 <code>-K</code>，第二个命令需要使用 <code>-O</code> ；</li>
<li>如果一张图由多个命令组成，第一个命令使用 <code>-K</code> ，中间命令使用 <code>-K</code> 和 <code>-O</code> ，最后一个命令使用 <code>-O</code>；</li>
<li>第一个命令使用重定向符号 <code>&gt;</code> 创建新文件并写入 PS 命令；</li>
<li>余下所有命令绘图命令使用重定向符号 <code>&gt;&gt;</code> 向 PS 文件中追加新的 PS 命令；</li>
</ul>
<h2 id="经典错误">经典错误</h2>
<p>根据上面所说的用法去写绘图脚本，经常会出现各种错误，列出常见的错误如下：</p>
<ul>
<li>已经写好的一个绘图脚本，想要在往图里加点东西。在脚本的最后加了个命令，使用了 <code>-O</code>，但是却忘了 把原来最后一个命令的 <code>-O</code> 改成 <code>-K -O</code>。这样最后一个命令应该没有效果，或者 gs 直接报错。</li>
<li>第一个命令绘制海岸线，第二个命令绘制地形，导致地形把海岸线覆盖了，想要交换两个命令的顺序， 结果忘记将第一个命令的 <code>-K</code> 改成 <code>-O</code> ，忘记将第二个命令的 <code>-O</code> 改成 <code>-K</code>。这样应该完全没结果吧。</li>
<li>想要在第一个命令前再加一个绘图命令，也记得把原来第一个命令的 <code>-K</code> 改成 <code>-K -O</code> ，但是忘记把 <code>&gt;</code> 改成 <code>&gt;&gt;</code> 。</li>
</ul>
<p>新手常犯的错误太多，一时想不起了。</p>
<h2 id="完全避免犯错的技巧">完全避免犯错的技巧</h2>
<p>下面的技巧可以几乎完全避免使用 <code>-K</code> 、 <code>-O</code> 以及 <code>重定向符号</code> 过程中可能出现的错误（前提是要理解 这个简单的技巧为什么可以帮助你避免犯错）。下面分别给出 GMT4 和 GMT5 下 bash 脚本中使用 <code>-K</code> 、 <code>-O</code> 的技巧。</p>
<p>在理解了如下脚本后，很容易将其修改到 bat、Perl、Python 中。</p>
<h3 id="gmt4-bash-脚本">GMT4 Bash 脚本</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># GMT template</span></div><div class="line"><span class="comment">#</span></div><div class="line">PS=example.ps</div><div class="line">J=X6i</div><div class="line">R=0/1/0/1</div><div class="line"></div><div class="line"><span class="comment"># Begin GMT Plot</span></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># now begin your real plot commands</span></div><div class="line"><span class="comment"># every command should be with "-K" "-O" and "&gt;&gt;"</span></div><div class="line"></div><div class="line"><span class="comment"># End GMT Plot</span></div><div class="line">psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># Plot finished. Now you can convert PS to other format</span></div></pre></td></tr></table></figure>
<h3 id="gmt5-bash-脚本">GMT5 Bash 脚本</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># GMT template</span></div><div class="line"><span class="comment">#</span></div><div class="line">PS=example.ps</div><div class="line">J=X6i</div><div class="line">R=0/1/0/1</div><div class="line"></div><div class="line"><span class="comment"># Begin GMT Plot</span></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -K &gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># now begin your real plot commands</span></div><div class="line"><span class="comment"># every command should be with "-K" "-O" and "&gt;&gt;"</span></div><div class="line"></div><div class="line"><span class="comment"># End GMT Plot</span></div><div class="line">gmt psxy -J<span class="variable">$J</span> -R<span class="variable">$R</span> -T -O &gt;&gt; <span class="variable">$PS</span></div><div class="line"></div><div class="line"><span class="comment"># Plot finished. Now you can convert PS to other format</span></div></pre></td></tr></table></figure>
<h3 id="一点点解释">一点点解释</h3>
<ul>
<li><code>-T</code> 选项忽略所有输入，即输入为空，相当于 <code>/dev/null</code> 。因而这两个</li>
<li><code>psxy</code> 命令实际上不会写入任何图像相关的代码到 PS 文件中。第一个 <code>psxy</code></li>
<li>命令生成了 PS 头部信息，最后的 <code>psxy</code> 命令生成了尾巴。</li>
</ul>
<p>可以在这两个 <code>psxy</code> 命令中间添加任意数目真正用于绘图的命令。这些（零个、一个或者多个）命令既不 需要头段也不需要尾巴，因而所有的中间绘图命令都需要 <code>-K</code> 、 <code>-O</code> 选项，并使用重定向 <code>&gt;&gt;</code> 。</p>
<p>这样带来的好处在于，中间所有命令具有统一的风格，都使用 <code>-K -O &gt;&gt;</code>。因而可以任意增加、删除命令 或调整任意命令的相对顺序。</p>
<h2 id="备注">备注</h2>
<ul>
<li>印象中这个技巧在官方文档的脚本中出现过，但是没有将其作为一种技巧来说，所以貌似未得到推广；</li>
<li>每个 GMT 命令默认都会输出头段和尾巴，这样的设计合理吗？为什么不是绘图命令完全抛弃头段和尾巴， 由两个单独的命令向 PS 文件中写头段和尾巴？这样的设计也许不太符合 GMT 命令的整体风格；</li>
<li>究竟有没有效果？用过之后才有评价的资格。</li>
</ul>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-07-07：初稿；</li>
<li>2013-08-24：修订了 bash 脚本中的一个笔误；</li>
<li>2013-11-06：修订脚本，使用 <code>-T</code> 选项，不再使用 <code>/dev/null</code> ；</li>
<li>2014-07-06：删除了 Perl 版脚本，增加了 GMT5 版本的脚本；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> GMT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GMT技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SAC 参考手册中文版]]></title>
      <url>http://seisman.info/sac-manual.html</url>
      <content type="html"><![CDATA[<p>此页面是《SAC 参考手册》的发布页。你可以使用 RSS 阅读器以获取新版本发布的通知。本项目的 RSS 地址为：</p>
<pre><code>https://github.com/seisman/SAC_Docs_zh/releases.atom</code></pre>
<p>征集《SAC 参考手册》维护者，有意者点 <a href="/maintainers-for-sac-manual-wanted.html">这里</a>，长期有效。</p>
<a id="more"></a>
<h2 id="v3.6-dev-版">v3.6 dev 版</h2>
<p>此文档使用 Git 进行版本控制，文档会不定期修复 bug 以及添加新内容。读者可以下载已定稿的 3.5 版或正在修订中的 3.6-dev 版。</p>
<p>注意：由于 LaTeX 本身的一些限制，3.6-dev 版在新增内容的情况下，部分含图 / 表的页面在排版的时候可能会 留出一些空白。我一般只会在某个正式版本发布之前整体检查一下排版情况，所以 dev 版的排版无法保证。</p>
<p>下载地址：<a href="https://github.com/seisman/SAC_Docs_zh/raw/pdf/SAC_Docs.pdf" target="_blank" rel="external">3.6-dev 版</a></p>
<h2 id="v3.5-版">2016-01-09 v3.5 版</h2>
<p>下载地址：<a href="http://7j1zxm.com1.z0.glb.clouddn.com/downloads/sac-manual-v3.5.pdf" target="_blank" rel="external">SAC 参考手册 v3.5.pdf</a></p>
<ul>
<li>增加示例：绘制滤波器的时间响应和频率响应</li>
<li>增加示例：一次性修改多个波形数据的发震时刻</li>
<li>新增章节： <code>rdseed</code> 的选项及其用法</li>
<li>新增章节：介绍 IRIS 等地震数据中心</li>
<li>新增章节：介绍数据申请：连续波形数据和事件波形数据</li>
<li>新增章节：IRIS 波形数据申请工具</li>
<li>新增章节：SAC 与脚本运行速度差异导致的陷阱</li>
<li>新增 Perl 脚本：数据提取、合并、重命名、修改发震时刻、去仪器响应、分量旋转、重采样</li>
<li>新增 Python 脚本：数据提取、合并、重命名、修改发震时刻、去仪器响应、分量旋转、重采样</li>
<li>更新命令说明： <code>plotpk</code> 、 <code>plot1</code> 、 <code>plot2</code> 、 <code>datagen</code></li>
<li>新增命令： <code>writecss</code></li>
<li>修正 Bugs 和 Typos</li>
</ul>
<h2 id="v3.4-版">2015-09-15 v3.4 版</h2>
<p>下载地址：<a href="http://7j1zxm.com1.z0.glb.clouddn.com/downloads/sac-manual-v3.4.pdf" target="_blank" rel="external">SAC 参考手册 v3.4.pdf</a></p>
<ul>
<li>调整与修订：
<ul>
<li>将命令的 “错误消息” 和 “警告消息” 集中整理到附录中</li>
<li>将文件重命名脚本移动到 “在脚本中调用 SAC” 一章</li>
<li>重新整理了 “震相拾取” 一节的内容</li>
</ul></li>
<li>新增内容：
<ul>
<li>在 Mac OS X 10.10 中安装 SAC</li>
<li>在 C 程序中调用 SAC 提供的 <code>distaz</code> 函数</li>
<li>数据处理中使用 <code>decimate</code> 和 <code>interpolate</code> 进行数据重采样</li>
<li>Python 中修改发震时刻</li>
<li>在 C 程序中读写 SAC 文件</li>
<li>在 Fortran 程序中读写 SAC 文件</li>
<li>在 Python 脚本中读写 SAC 文件</li>
<li>在 matlab 中读写 SAC 文件</li>
<li>修改 SAC 所能读取的文件数目的上限</li>
<li>文档维护与更新并征集维护者</li>
</ul></li>
<li>命令整理： <code>mtw</code> 、 <code>markptp</code> 、 <code>markvalue</code> 、 <code>readcss</code></li>
<li>修正 Bugs 和 Typos</li>
</ul>
<h2 id="v3.3-版">2015-06-06 v3.3 版</h2>
<p>下载地址：<a href="http://seisman.qiniudn.com/downloads/sac-manual-v3.3.pdf" target="_blank" rel="external">SAC 参考手册 v3.3.pdf</a></p>
<ul>
<li>修正 bugs 和 typos；</li>
<li>命令整理： <code>hilbert</code> 、 <code>transfer</code></li>
<li>新增内容：
<ul>
<li>四个文件重命名脚本</li>
<li>读取某个目录下全部文件遇到的问题</li>
<li>使用 Tab 遇到的问题</li>
<li>数据命名规则</li>
<li>时区校正</li>
<li>错误与警告消息</li>
<li>未定义变量</li>
<li>SAC debug</li>
<li><code>wh</code> 与 <code>w over</code> 的区别</li>
</ul></li>
</ul>
<h2 id="v3.2-版">2015-05-02 v3.2 版</h2>
<p>下载地址：<a href="http://seisman.qiniudn.com/downloads/sac-manual-v3.2.pdf" target="_blank" rel="external">SAC 参考手册 v3.2.pdf</a></p>
<ul>
<li>修复 bugs 和 typos；</li>
<li>整理命令 <code>systemcommand</code>、<code>transfer</code></li>
<li>新增内容：
<ul>
<li>波形排序</li>
<li>标记震相理论走时的三种方法</li>
<li>图像格式转换</li>
<li>SAC 初始化宏文件</li>
<li>SAC 命令的长度上限</li>
<li>字节序</li>
</ul></li>
<li>新增附录 “仪器响应”，整理了 “去仪器响应” 一节</li>
<li>新增示例：调用 SAC 的 Hilbert 函数</li>
</ul>
<h2 id="v3.1-版">2014-09-25 v3.1 版</h2>
<p>下载地址：<a href="http://seisman.qiniudn.com/downloads/sac-manual-v3.1.pdf" target="_blank" rel="external">SAC 参考手册 v3.1.pdf</a></p>
<ul>
<li>重新整理了大部分命令的语法说明；</li>
<li>对 “SAC 图像” 一章进行了修订；</li>
<li>新增 “信号迭加子程序” 和 “谱估计子程序” 一章</li>
<li>新增 “在 Python 中调用 SAC” 一节；</li>
<li>Bug 修订；</li>
</ul>
<h2 id="v3.0-版">2014-04-18 v3.0 版</h2>
<p>下载地址：<a href="http://seisman.qiniudn.com/downloads/sac-manual-v3.0.pdf" target="_blank" rel="external">SAC 参考手册 v3.0.pdf</a></p>
<ul>
<li>重新设计了整个文档的结构</li>
<li>重写了教程部分的大多数内容</li>
<li>教程部分根据 SAC v101.6a 进行修正</li>
<li>Bug 修订</li>
</ul>
<h2 id="v2.3-版">2014-02-22 v2.3 版</h2>
<p>下载地址：<a href="http://seisman.qiniudn.com/downloads/sac-manual-v2.3.pdf" target="_blank" rel="external">SAC 帮助文档中文版 v2.3.pdf</a></p>
<ul>
<li>使用 Git 管理源码</li>
<li>整理结构和布局的修改</li>
<li>新的小节: “SAC IO 升级版”、“黑板变量的读写”、“SAC 保存图像”</li>
<li>Bug 修订</li>
</ul>
<h2 id="v2.2-版">2013-04-12 v2.2 版</h2>
<p>下载地址：<a href="http://seisman.qiniudn.com/downloads/sac-manual-v2.2.pdf" target="_blank" rel="external">SAC 帮助文档中文版 v2.2.pdf</a></p>
<p>命令已经整理完毕，排版上基本已经没有问题了，重新设计了封面，在接下来很长一段时间应该都不会有大的改动了。 如果有时间，会加一些 SAC 其他方面的东西。如果有读者反馈，命令方面也可能会有更新。</p>
<h2 id="v2.1-版">2013-04-06 v2.1 版</h2>
<p>下载地址：<a href="http://seisman.qiniudn.com/downloads/sac-manual-v2.1.pdf" target="_blank" rel="external">SAC 帮助文档中文版 v2.1.pdf</a></p>
<p>重新细致整理了手册的第一章，基本达到了我认为可以打印的地步。命令部分还没有整，200 多个，需要很长一段时间才能出来。</p>
<h2 id="v2.0-版">2013-03-29 v2.0 版</h2>
<p>下载地址：<a href="http://seisman.qiniudn.com/downloads/sac-manual-v2.0.pdf" target="_blank" rel="external">SAC 帮助文档中文版 v2.0.pdf</a></p>
<p>花了两天的时间重新制作了整个文档，内容及排版部分有很多 bug，草草结束是因为接下来的一段时间要好好干活了， 先把 v2.0 的细节总结如下：</p>
<ul>
<li>操作系统：CentOS 6.4 (Final)</li>
<li>编译环境：TeX Live 2012</li>
<li>编译命令：xeLaTeX</li>
<li>中文实现：CTEX 宏包</li>
<li>中文字体：宋体 + 黑体</li>
<li>英文主字体：Liberation Sans</li>
<li>代码字体：Courier 10 Pitch</li>
</ul>
<h2 id="v1.2-版">2012-09-18 v1.2 版</h2>
<p>下载地址：<a href="http://seisman.qiniudn.com/downloads/sac-manual-v1.2.pdf" target="_blank" rel="external">SAC 帮助文档中文版 v1.2.pdf</a> <a href="http://seisman.qiniudn.com/downloads/sac_manual_v1.2.doc" target="_blank" rel="external">SAC 帮助文档中文版 v1.2.doc</a></p>
<ul>
<li>增加了封面配图。</li>
</ul>
<h2 id="v1.1-版">2012-09-03 v1.1 版</h2>
<p>下载地址：<a href="http://seisman.qiniudn.com/downloads/sac-manual-v1.1.pdf" target="_blank" rel="external">SAC 帮助文档中文版 v1.1.pdf</a> <a href="http://seisman.qiniudn.com/downloads/sac_manual_v1.1.doc" target="_blank" rel="external">SAC 帮助文档中文版 v1.1.doc</a></p>
<ul>
<li>重新格式化整个文档，使得其看上去更规范，也易于以后的修改</li>
<li>文档中的所有 C 或 Fortran 代码从 notepad++ 中直接导出，代码支持语法高亮</li>
<li>代码及正文英文字体采用 Consolas 字体。</li>
<li>增加了 “在脚本中调用 SAC” 一节；</li>
<li>新增了 <code>transfer</code>、<code>traveltime</code>、<code>saveimg</code>、<code>datagen</code> 命令（依赖于 SAC v101.5c）；</li>
<li>公式用公式编辑器编辑</li>
</ul>
<h2 id="v1.0-版">2012-01-08 v1.0 版</h2>
<p>下载地址：<a href="http://seisman.qiniudn.com/downloads/sac-manual-v1.0.pdf" target="_blank" rel="external">SAC 帮助文档中文版 v1.0.pdf</a> <a href="http://seisman.qiniudn.com/downloads/sac_manual_v1.0.doc" target="_blank" rel="external">SAC 帮助文档中文版 v1.0.doc</a></p>
<ul>
<li>参考《数字地震波形分析》一书，翻译了大部分的用户指南以及几乎全部的命令</li>
<li>结合了 SAC v101.4 增加、删除和修改了一些命令</li>
<li>增加书签，方便定位，支持全文搜索</li>
</ul>
]]></content>
      
        <categories>
            
            <category> SAC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 书籍 </tag>
            
            <tag> PDF </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[震中距、方位角和反方位角的计算]]></title>
      <url>http://seisman.info/calculate-dist-az-baz.html</url>
      <content type="html"><![CDATA[<p>给定震中经纬度以及球面上任意一点（一般是台站）的经纬度，计算震中距、方位角以及反方位角。 这是地震学的一个基本问题。</p>
<a id="more"></a>
<h2 id="名词解释">名词解释</h2>
<ul>
<li>震中距：<strong>地面</strong>上任意一点到<strong>震中</strong>的球面距离；</li>
<li>方位角：震中到台站的连线与地理北向的夹角；</li>
<li>反方位角：台站到震中的连线与地理北向的夹角；</li>
</ul>
<p>一张图可以说明一切:</p>
<div class="figure">
<img src="/images/2013070301.png" alt="图 1：震中距、方位角 (az)、反方位角 (baz) 示意图">
<p class="caption">图 1：震中距、方位角 (az)、反方位角 (baz) 示意图</p>
</div>
<h2 id="数学推导">数学推导</h2>
<p>公式的推导需要简单的球面三角函数的知识。具体的推导可以参考 Robert B. Herrmann 的 <a href="http://www.eas.slu.edu/People/RBHerrmann/Courses/EASA462" target="_blank" rel="external">作业题</a>。 作业题中的 Ass06、Ass07、Ass08 给出了计算震中距和方位角的原理。</p>
<h2 id="相关代码">相关代码</h2>
<p>广为流传的一个程序是 <code>distaz</code>。在 GMT、SAC 等的源码里都可以找到。<code>distaz</code> 代码很短，简单易懂， 其采用的地球模型为椭球模型，精度上可以满足需求。</p>
<ul>
<li>C、Fortran、Java、Python 以及 CGI 版本： <a href="http://www.seis.sc.edu/software/distaz/" target="_blank" rel="external">由 USC的一个小组 整理</a></li>
<li>Matlab 版本： <a href="https://github.com/geodynamics/specfem3d_globe/blob/master/utils/Visualization/VTK_ParaView/matlab/distaz.m" target="_blank" rel="external">由 specfem3d_globe 提供</a></li>
</ul>
<h2 id="使用方法">使用方法</h2>
<p>仅以 C 语言版本的 <code>distaz</code> 为例，用如下命令即可编译:</p>
<pre><code>cc distaz.c -o distaz -lm</code></pre>
<p>其输入为 <code>sta_lat sta_lon evt_lat evt_lon</code> ，输出为 <code>Delta Baz Az</code> 。</p>
<pre><code>$ ./distaz 10 14 40 50
43.731 40.781 236.882</code></pre>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-07-03：初稿；</li>
<li>2014-07-06：加入了对 <code>distaz</code> 的用法的说明；删除了 CPS330 的部分；</li>
<li>2014-10-28：新增 matlab 版本；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C </tag>
            
            <tag> Fortran </tag>
            
            <tag> Java </tag>
            
            <tag> Python </tag>
            
            <tag> Matlab </tag>
            
            <tag> 名词解释 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[标量矩与矩震级转换关系]]></title>
      <url>http://seisman.info/scalar-moment-and-moment-magnitude.html</url>
      <content type="html"><![CDATA[<h2 id="公式">公式</h2>
<p>地震的标量矩 <span class="math inline">\(M_0\)</span> 与矩震级 <span class="math inline">\(M_W\)</span> 的关系为：</p>
<p><span class="math display">\[M_W =\frac{2}{3}(log M_0 -16.1)\]</span></p>
<p>其中，<span class="math inline">\(M_0\)</span> 的单位为 <code>dyne-cm</code>。当 <span class="math inline">\(M_0\)</span> 单位不同时，后面的常数 16.1 也要发生变化。</p>
<h2 id="参考文章">参考文章</h2>
<ul>
<li>Kanamori H. The energy release in great earthquakes[J]. Journal of Geophysical Research, 1977, 82(20): 2981-2987.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 震级 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Global CMT 信息整理]]></title>
      <url>http://seisman.info/global-cmt.html</url>
      <content type="html"><![CDATA[<p>Global CMT 全称 Global Centroid-Moment-Tensor Project，前身是 Harvard CMT， 是地震学常用的地震目录和震源机制之一。其给出了自 1976 年以来上万个地震的 地震目录以及震源机制。</p>
<a id="more"></a>
<h2 id="主页">主页</h2>
<p><a href="http://www.globalcmt.org/" class="uri" target="_blank" rel="external">http://www.globalcmt.org/</a></p>
<h2 id="catalog-在线查询">Catalog 在线查询</h2>
<p><a href="http://www.globalcmt.org/CMTsearch.html" class="uri" target="_blank" rel="external">http://www.globalcmt.org/CMTsearch.html</a></p>
<p>可以指定时间段、震级范围、震中范围、深度范围，也可以对震源时间函数以及 T 轴 和 N 轴进行限制。并支持多种输出格式，其中的 <code>GMT psmeca input</code> 格式可以直接 用于 GMT 绘图。</p>
<h2 id="catalog-直接下载">Catalog 直接下载</h2>
<p><a href="http://www.globalcmt.org/CMTfiles.html" class="uri" target="_blank" rel="external">http://www.globalcmt.org/CMTfiles.html</a></p>
<p>很多时候我们需要根据其他条件对 catalog 进行筛选，得到符合自定义条件的地震事件，所以 ASCII 格式的 目录文件就很重要了。GCMT 提供了 1976 年到现在的地震目录，其中 1976-2004 年的地震目录为 dek 格式， 包含在一个文件中。2005 年以后的地震目录为 ndk 格式，每月一个文件。对于 2005 年以后的地震目录可以 将一年的目录合并到一个文件中，方便管理且不会导致文件过大。</p>
<ul>
<li><a href="http://www.ldeo.columbia.edu/~gcmt/projects/CMT/catalog/jan76_dec04.dek" target="_blank" rel="external">1976-2004 目录</a></li>
<li><a href="http://www.ldeo.columbia.edu/~gcmt/projects/CMT/catalog/NEW_MONTHLY/" target="_blank" rel="external">2005 以后目录</a></li>
<li><a href="http://www.ldeo.columbia.edu/~gcmt/projects/CMT/catalog/allorder.ndk_explained" target="_blank" rel="external">ndk 格式说明</a></li>
<li><a href="http://www.ldeo.columbia.edu/~gcmt/projects/CMT/catalog/allorder.dek_explained" target="_blank" rel="external">dek 格式说明</a></li>
</ul>
<h2 id="关于-gcmt-的文章">关于 GCMT 的文章</h2>
<ul>
<li><a href="http://www.agu.org/pubs/crossref/1981/JB086iB04p02825.shtml" target="_blank" rel="external">1981</a></li>
<li><a href="http://www.agu.org/pubs/crossref/1983/JB088iB04p03247.shtml" target="_blank" rel="external">1983</a></li>
<li><a href="http://www.sciencedirect.com/science/article/pii/S0031920112000696" target="_blank" rel="external">2012</a></li>
</ul>
<h2 id="备注">备注</h2>
<ul>
<li>GCMT 中给出的地震矩单位是 <code>dyne-cm</code>，而不是国际单位制的 <code>N-m</code>。</li>
<li>GCMT 目录的 ASCII 文件中震级采用 mb 和/或 MS，为什么不用矩震级？使用面波和体波震级的最大问题是 震级饱和，导致震级基本不会超过 8 级。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 地震目录 </tag>
            
            <tag> 震源机制解 </tag>
            
            <tag> 震级 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[仪器响应实例分析]]></title>
      <url>http://seisman.info/deep-analysis-of-response.html</url>
      <content type="html"><![CDATA[<p>仪器响应水很深，用起来容易，弄明白每一个参数却不简单，幸好 SEED 的 manual 提供了一个例子，可以帮助 理解，不过其写得太复杂、毫无重点且有些地方打印有错误，故而这里整理并改写一下。</p>
<p>这个仪器响应依然是标准的三个阶段：地震仪（运动信号转电压信号）、离散器（模电转换器）、FIR 滤波器。</p>
<a id="more"></a>
<h2 id="stage-1">Stage 1</h2>
<p>假定仪器的自然频率为 <span class="math inline">\(f_0=1Hz\)</span>，阻尼常数为 <span class="math inline">\(\lambda=0.7\)</span>，该仪器的加速度传递函数为</p>
<p><span class="math display">\[H(s) = \frac{s}{s^2+2\lambda \omega_0 s + \omega_0^2}\]</span></p>
<p>对于这样一个传递函数，需要注意如下几点：</p>
<ol style="list-style-type: decimal">
<li>该传递函数仅表示某一类地震仪的传递函数，现代地震仪的传递函数可能比这个更复杂；</li>
<li>根据该传递函数，很容易计算出它的一个零点和两个极点；</li>
<li>该仪器在 <span class="math inline">\(f_s=1 Hz\)</span> 时的 Sensitivity 为 <span class="math inline">\(S_d=150V/m\cdot s^{-2}\)</span>。即地震仪接收到的地面 运动加速度，如果 1 Hz 时加速度为 <span class="math inline">\(1 m/s^2\)</span>，则地震仪的输出电压为 150V。</li>
<li>仪器真实的传递函数应该是 <span class="math inline">\(G(f)=R(f)*S_d=A_0*H(s)*S_d\)</span>。其中 <span class="math inline">\(A_0\)</span> 为归一化因子， 即保证在频率 <span class="math inline">\(f=f_s\)</span> 时有 <span class="math inline">\(|R(f_s)|=1.0\)</span>。</li>
</ol>
<h2 id="stage-2">Stage 2</h2>
<p>使用的模数转换器 ADC 为 24bit 的，即输出最大值可以为 <span class="math inline">\(\pm 2^{23}\)</span>，如果 ADC 所能转换的电压范围 为 <span class="math inline">\(\pm 20V\)</span>，则 ADC 的放大系数为 <span class="math inline">\(S_d=\frac{2^{23}}{20}=4.1943*10^{5} counts/V\)</span>。 这样一个 ADC 在输入电压为 1V 的情况下，其输出为 <span class="math inline">\(4.1943*10^{5}\)</span>counts。结合地震仪的放大系数， <span class="math inline">\(1 m/s^2\)</span> 的地面运动加速度将导致输出为</p>
<p><span class="math display">\[1 m/s^2 * 150 \frac{V}{m/s^2} * 4.1943\times 10^5 \frac{counts}{V} = 6.29145*10^7 counts\]</span></p>
<p>另一方面，ADC 的输入电压上限为 20V，这似乎也限制了该仪器所能记录到的最大加速度为 <span class="math inline">\(20/150=0.13 m/s^2\)</span>。</p>
<h2 id="stage-3">Stage 3</h2>
<p>这个阶段的 FIR 滤波器通过给定多项式系数来实现。给定系数之后即可计算其响应函数，并计算该响应 函数在 1 Hz 处的振幅，然后得到归一化因子即为该阶段的放大系数为 1.9938。</p>
<h2 id="stage-0">Stage 0</h2>
<p>最终得到的放大系数为</p>
<p><span class="math display">\[Sd= 150 \frac{V}{m/s^2} \cdot 4.1943\times 10^5 \frac{counts}{V} \cdot 1.9938 \frac{counts}{counts}\]</span> <span class="math display">\[=1.25439\times 10^8 \frac{counts}{m/s^2}\]</span></p>
<p>最后不要忘了第一阶段的无单位的归一化因子 <span class="math inline">\(A_0\)</span>。</p>
<h2 id="参考">参考</h2>
<ul>
<li><a href="http://www.fdsn.org/seed_manual/SEEDManual_V2.4.pdf" target="_blank" rel="external">SEED Reference Manual</a>, Version 2.4, August 2012, P162-169</li>
</ul>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-06-30：初稿；</li>
<li>2014-06-10：修订关于自然频率和归一化频率的问题；Thanks to 张申健；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 仪器响应 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用 RESP 和 PZ 去除仪器响应的差别]]></title>
      <url>http://seisman.info/difference-between-resp-and-pz-while-deconvolution.html</url>
      <content type="html"><![CDATA[<p>前面介绍了 <a href="/simple-analysis-of-resp.html">仪器响应文件 RESP</a> 和 <a href="/simple-analysis-of-sac-pz.html">仪器响应文件 SAC_PZ</a>，下面分别用两种 响应文件进行去仪器响应，比较二者的区别。</p>
<a id="more"></a>
<h2 id="样例下载地址">样例下载地址</h2>
<p><a href="http://seisman.qiniudn.com/downloads/2013.144.05.40.09.0195.IU.COLA.00.BHZ.M.SAC" target="_blank" rel="external">SAC 数据</a> <a href="http://seisman.qiniudn.com/downloads/RESP.IU.COLA.00.BHZ" target="_blank" rel="external">RESP 文件</a> <a href="http://seisman.qiniudn.com/downloads/SAC_PZs_IU_COLA_BHZ_00" target="_blank" rel="external">PZ 文件</a></p>
<h2 id="resp-去除仪器响应">RESP 去除仪器响应</h2>
<pre><code>$ sac
SEISMIC ANALYSIS CODE [02/01/2012 (Version 101.5c)]
Copyright 1995 Regents of the University of California

SAC&gt; r ./2013.144.05.40.09.0195.IU.COLA.00.BHZ.M.SAC
SAC&gt; rmean; rtr; taper
SAC&gt; trans from evalresp fname ./RESP.IU.COLA.00.BHZ to none freq 0.01 0.05 5 7
Using response from user-specified file: (./RESP.IU.COLA.00.BHZ).
Extracting evresp response for COLA, BHZ...
Station (COLA), Channel (BHZ)
SAC&gt; w RESP.SAC
SAC&gt; q</code></pre>
<h2 id="pz-去除仪器响应">PZ 去除仪器响应</h2>
<pre><code>$ sac
SEISMIC ANALYSIS CODE [02/01/2012 (Version 101.5c)]
Copyright 1995 Regents of the University of California

SAC&gt; r ./2013.144.05.40.09.0195.IU.COLA.00.BHZ.M.SAC
SAC&gt; rmean; rtr; taper
SAC&gt; trans from polezero subtype ./SAC_PZs_IU_COLA_BHZ_00 to none freq 0.01 0.05 5 7
Using polezero response for COLA, BHZ, IU, 00...
Station (COLA), Channel (BHZ)
SAC&gt; w PZ.SAC
SAC&gt; q</code></pre>
<h2 id="结果对比">结果对比</h2>
<ul>
<li>对比生成的两个 SAC 文件，波形很类似。 <code>RESP.SAC</code> 的最值在 10 的 6 次方量级， <code>PZ.SAC</code> 的最值在 10 的 -3 次方量级，这是 <strong>单位</strong> 的问题。首先 SAC 的默认的位移单位为 <code>nm</code>。RESP 文件中有指定仪器的 输入单位为 <code>m/s</code>，这行虽然以 <code>#</code> 开头，其在去仪器响应的时候是可以被 SAC 读取的，因而利用 RESP 去仪 器响应时 SAC 知道输入的单位是什么，SAC 自然也会进行单位的转换。而 PZ 文件中虽然给出了输入单位为 <code>m</code>， 但 PZ 文件中以 <code>*</code> 开头的行是被忽略的，所以 SAC 其实并不知道仪器的输入单位是什么，直接去仪器响应， 得到的波形单位为 m，而 SAC 在不知道单位的情况下 “自作聪明” 直接将其单位改写成了 <code>nm</code>，这就导致了波形 振幅量级上的错误。因而 <strong>SAC 在利用 PZ 文件去仪器响应的时候要乘以 10 的 9 次方进行单位转换</strong>。</li>
<li>对单位进行校正后，对二者做互相关，发现互相关的结果峰值位于 0 处，这意味着二者不存在时间延迟的问题。 PZ 文件中没有任何时间延迟的概念，而 RESP 中在滤波过程中存在时间延迟，并给出了延迟估计和延迟校正。 互相关峰值在 0 处意味着在用 RESP 做反卷积的时候对数字滤波器做了反卷积，并且对时间问题做了校正。</li>
<li>对两个相似的波形做差，其差值在 10 的 2 次方量级，大概占信号的千分之一，这个误差也许是因为 PZ 文件 没有将全部阶段考虑进去导致的，不过这个影响很小。</li>
<li>PZ 文件中没有考虑 FIR 滤波器的响应函数，因而在 Nyquist 频率附近会出现失真。</li>
</ul>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="http://www.iris.edu/hq/es_course/content/2009.html" target="_blank" rel="external">EarthScope 2009 workshop</a> Session 2</li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-06-29：初稿；</li>
<li>2013-07-06：修改了 “结果对比” 中第一点的说明；</li>
<li>2015-11-11：PZ 文件中有无注释行对运行效率基本没有影响</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 仪器响应 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[仪器响应文件 SAC PZ]]></title>
      <url>http://seisman.info/simple-analysis-of-sac-pz.html</url>
      <content type="html"><![CDATA[<p>RESP 文件是 SEED 格式默认的仪器响应文件，在上一篇博文《<a href="/simple-analysis-of-resp.html">仪器响应文件 RESP</a>》 中已经分析了一个例子。RESP 响应文件完整地描述了仪器响应的全部信息，与此同时也包含了不少冗余信息。</p>
<p>SAC 对 RESP 文件进行了简化，仅包含了一些必要信息，这个新的文件格式叫做 SAC_PZ。</p>
<a id="more"></a>
<p>下面给出一个 PZ 文件的例子，其与上一篇博文中的 RESP 文件对应同一个台站，因而利用上一篇的 RESP 文件可以 完整推导出本文的 PZ 文件。</p>
<pre><code>* **********************************
* NETWORK   (KNETWK): IU
* STATION    (KSTNM): COLA
* LOCATION   (KHOLE): 00
* CHANNEL   (KCMPNM): BHZ
* CREATED           : 2013-06-22T14:12:09
* START             : 2012-09-14T04:00:00
* END               : 2599-12-31T23:59:59
* DESCRIPTION       : College Outpost, Alaska, USA
* LATITUDE          : 64.873599
* LONGITUDE         : -147.861600
* ELEVATION         : 84.0
* DEPTH             : 116.0
* DIP               : 0.0
* AZIMUTH           : 0.0
* SAMPLE RATE       : 20.0
* INPUT UNIT        : M
* OUTPUT UNIT       : COUNTS
* INSTTYPE          : Geotech KS-54000 Borehole Seismometer
* INSTGAIN          : 2.013040e+03 (M/S)
* COMMENT           : N/A
* SENSITIVITY       : 3.377320e+09 (M/S)
* A0                : 8.627050e+04
* **********************************
ZEROS   3
        +0.000000e+00   +0.000000e+00
        +0.000000e+00   +0.000000e+00
        +0.000000e+00   +0.000000e+00
POLES   5
        -5.943130e+01   +0.000000e+00
        -2.271210e+01   +2.710650e+01
        -2.271210e+01   -2.710650e+01
        -4.800400e-03   +0.000000e+00
        -7.384400e-02   +0.000000e+00
CONSTANT        +2.913631e+14</code></pre>
<p>星号部分是注释，其包含了台站的一些信息，这些信息比 RESP 文件中的内容要更丰富，比如台站名、台网名、 location、channel、台站经纬度、高程、输入、输出、放大系数、归一化因子等。</p>
<p>然后给出了零点和极点的信息，跟 RESP 比较一下，发现极点信息是对的。零点个数比 RESP 文件多了一个。</p>
<p>这是为什么呢？</p>
<p>Laplace 变换有一个很重要的性质：如果 <span class="math inline">\(f(t)\)</span> 的 Laplace 变换为 <span class="math inline">\(F(s)\)</span>，那么 <span class="math inline">\(f(t)\)</span> 的一阶时间偏导 <span class="math inline">\(f&#39;(t)\)</span> 的 Laplace 变换为 <span class="math inline">\(sF(s)\)</span>，也就是多了一个零点 <code>(0.0,0.0)</code> 。RESP 文件认为仪器的输入是速度， 因而其单位是 <code>m/s</code>，而 PZ 文件认为输入为位移，单位为 <code>m</code>，因而 PZ 文件的仪器响应首先要将位移经过一次 偏导得到速度，再根据 RESP 的零极点信息转换为电压信息。一切都是可以合理解释的。</p>
<p>前面已经说过，整个仪器响应可以简化为</p>
<p><span class="math display">\[G(f)=S_{d1} A_0 H_p(s) S_{d2} S_{d3}=S_{d0} A_0 H_p(s)\]</span></p>
<p>所以 PZ 文件中将所有的放大系数以及归一化因子合并成为一个常数，也就是最后的 <code>CONSTANT</code> 。</p>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 仪器响应 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[仪器响应文件 RESP]]></title>
      <url>http://seisman.info/simple-analysis-of-resp.html</url>
      <content type="html"><![CDATA[<p>《<a href="/physical-details-of-instrumental-response.html">仪器响应的物理细节</a>》一文中说过， 理论上仪器响应是由三个阶段构成的。常用的仪器响应格式包括 SEED 的 RESP 文件以及 SAC 的 PZ 文件。 这里通过阅读一个 RESP 类型的仪器响应文件，来更进一步的理解仪器响应，顺便熟悉一下 SEED 格式。</p>
<p>由于 RESP 的内容太长，就不在博文中贴出，本文所使用的 RESP 文件可以在 <a href="http://seisman.qiniudn.com/downloads/RESP.IU.COLA.00.BHZ" target="_blank" rel="external">这里</a> 下载。</p>
<p>RESP 文件是从 SEED 文件中解压得到的，因而保留了 SEED 格式的很多传统。响应文件中 Stage sequence number 表示阶段号，这个例子中从 1 到 3 再到 0；在每个 stage 中，根据 SEED 格式的要求又分为多个 block， 每个 block 分别代表该 stage 的部分信息。</p>
<a id="more"></a>
<h2 id="台站信息">台站信息</h2>
<ul>
<li>1-9 行包含了台站名、台网名、location、channel、开始时间和结束时间等信息。</li>
</ul>
<h2 id="stage1">Stage 1</h2>
<p>10-42 行给出了第一阶段的信息。这个阶段的功能是将运动信号转换为电压信号。</p>
<ul>
<li>10-33 行。输入单位为 <code>m/s</code>，输出单位为 V，归一化因子 <span class="math inline">\(A_0=86270.5\)</span>，共有 2 个零点和 5 个极点， 然后列出了零极点的实部、虚部以及误差。</li>
<li>34-42 行给出了第一阶段的放大系数 <span class="math inline">\(Sd=2.013040\times 10^3\)</span>。</li>
</ul>
<h2 id="stage-2">Stage 2</h2>
<p>43-73 行是第二个阶段，其实现模拟信号到数字信号的转换。</p>
<ul>
<li>43-53 行指出输入为 V，输出为 <code>counts</code></li>
<li>54-64 行给出了模电转换过程中可能存在的减采样信息，这里减采样因子为 1，也就是没有减采样。</li>
<li>65-73 行给出了该阶段的放大系数 <span class="math inline">\(S_d=1.677720 \times 10^6\)</span>。</li>
</ul>
<h2 id="stage3">Stage 3</h2>
<p>74-173 行是第三阶段，主要是滤波、减采样等。</p>
<ul>
<li>74-153 行指出输入为 <code>counts</code>，输出也为 <code>counts</code>。这个阶段的响应函数不是通过零极点的方式 给出的，而是通过系数给出的，这里包含了 67 个分子系数和 0 个分母系数。</li>
<li>154-164 行给出了减采样的信息，并对滤波过程中造成的时间延迟进行估计并做校正。</li>
<li>165-173 给出这个阶段的增益，一般为 1。</li>
</ul>
<h2 id="stage0">Stage 0</h2>
<p>174-182 行是第 0 阶段，这个阶段给出了 <span class="math inline">\(Sensitivity=3.377320\times 10^9\)</span>。其实际上等于 前面三个阶段的放大系数 <span class="math inline">\(S_d\)</span> 的乘积，这个阶段只是起到了辅助验证的作用。</p>
<p>有些时候会遇到 Stage 0 给出的增益并不等于前几个阶段的增益的乘积的情况，此时会报如下错误:</p>
<pre><code>computed and reported sensitivities differ by more than 5 percent</code></pre>
<p>其中 computed sensitivity 指的是各个 stage 的增益的乘积，reported sensitivity 指的是 stage 0 给出的增益，二者之间相差 5% 以上。</p>
<p>出现这个错误的可能原因是仪器响应文件有问题。官方的答复见 <a href="http://www.iris.washington.edu/pipermail/sac-help/2014-February/001674.html" target="_blank" rel="external">这里</a>。</p>
<h2 id="仪器响应与各个阶段的振幅响应">仪器响应与各个阶段的振幅响应</h2>
<div class="figure">
<img src="/images/2013062701.png" alt="图 1：仪器响应与各阶段振幅响应">
<p class="caption">图 1：仪器响应与各阶段振幅响应</p>
</div>
<p>这里主要关注振幅响应，根据图例可以看出，第一个阶段在 0.01-5Hz 范围内振幅基本相同，在该范围外振幅响应 比较小，这是该仪器所关注的部分；第二阶段的响应函数是完美的直线；第三个阶段在一个很长的范围内也是一条 直线，在大于 7 Hz 的时候振幅响应开始出现剧烈的变化。理论上在去除仪器响应的时候需要考虑第三阶段的响应函数， 但是实际上在我们所关注的频率范围内（也许是 0.01-5 Hz），因而第三阶段的响应函数也可以不考虑了。</p>
<h2 id="总结">总结</h2>
<p>与前文总结相同，三个阶段中最重要的是第一个阶段的零极点，还有三个阶段的放大系数。第一个阶段的归一化 因子也很重要，在这里好像没有体现出来。</p>
<h2 id="备注">备注</h2>
<ul>
<li>图 1 由 <a href="http://www.isti2.com/JPlotResp/" target="_blank" rel="external">JPlotResp</a> 绘制得到。</li>
<li>使用 JPlotResp 绘制响应函数的时候，将光标放在相应点上，可以看到每个点的横纵轴坐标，在最大振幅以及 敏感频率方面与想象的有一点偏差。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 仪器响应 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[仪器响应的物理细节]]></title>
      <url>http://seisman.info/physical-details-of-instrumental-response.html</url>
      <content type="html"><![CDATA[<p>地震波的传播会引起地面运动。用来表征地面运动的物理量有很多，常见的有速度和加速度，不太常见的还有位移、 应变、旋转。这些物理量在被地震仪接收到之后，首先要将其转换为电信号，然后对电信号振幅进行放大以及滤波， 再将连续时间序列离散化，最终以我们常见的波形的形式表现出来。</p>
<a id="more"></a>
<h2 id="简介">简介</h2>
<p>概括地说，这个过程分为三个阶段：</p>
<ol style="list-style-type: decimal">
<li>Analog Stages</li>
<li>Analog-Digital Converter</li>
<li>Digital Stages</li>
</ol>
<p>地震仪的仪器响应是频率的复数函数，也就是常说的振幅响应和频率响应。上面提到的三个阶段，每个阶段的响 应函数都是频率的复数函数，表示为 <span class="math inline">\(G_i(f)\)</span>，整个仪器的响应函数是各个阶段响应函数的乘积：</p>
<p><span class="math display">\[G(f)=\prod_i G_i(f)\]</span></p>
<h2 id="预备知识">预备知识</h2>
<h3 id="fir滤波器">FIR滤波器</h3>
<p>信号处理没学好，不敢瞎说，姑且翻译重点部分。简单地说，<a href="https://zh.wikipedia.org/wiki/有限冲激响应" target="_blank" rel="external">FIR滤波器</a> 就是对一些数据采样点做加权平均，设计不同的加权系数就得到不同的FIR滤波器。FIR滤波器一般设计为振幅响应 为方阶跃函数（boxcar），因而其在通带内有较平的振幅响应，在拐角频率处有很尖锐很陡峭的振幅响应变化 （一般拐角频率设置为Nyquist频率的70%-90%）。与此同时，滤波器具有线性相位，即具有类似 <span class="math inline">\(e^{i \omega t}\)</span>的形式，这个线性相位在时间域代表信号的时间延迟，一般数据采集系统会对这个时间延迟 做校正。由此，用户基本不需要考虑FIR滤波器对仪器响应的影响。</p>
<h3 id="响应函数">响应函数</h3>
<p>模拟信号的响应函数用Laplace变换表示：</p>
<p><span class="math display">\[H(s)=\int_0^{\infty}h(t)e^{-st}dt\]</span></p>
<p>数字信号的响应函数用Z变换表示：</p>
<p><span class="math display">\[H(z)=\sum_{-\infty}^{+\infty}h_m z^{-m}\]</span></p>
<h3 id="归一化">归一化</h3>
<p>频率响应可以表示为</p>
<p><span class="math display">\[G(f)=S_d R(f)\]</span></p>
<p>其中 <span class="math inline">\(R(f)\)</span> 是频率的函数。在某个特定的频率 <span class="math inline">\(f_s\)</span>，有 <span class="math inline">\(|R(f_s)|=1.0\)</span> ，即 <span class="math inline">\(R(f)\)</span> 在频率 <span class="math inline">\(f_s\)</span> 处进行归一化。<span class="math inline">\(S_d\)</span> 是放大系数，也称为Sensitivity或者Gain。</p>
<p><span class="math inline">\(R(f)\)</span> 可以表示为</p>
<p><span class="math display">\[R(f)=A_0 H_p(s)\]</span></p>
<p>其中 <span class="math inline">\(H_p(s)\)</span> 是用零极点表示的transfer函数，一般来说在频率<span class="math inline">\(f_s\)</span>处这个transfer函数的振幅响应 不为1，所以需要归一化因子 <span class="math inline">\(A_0\)</span>。</p>
<h2 id="analogstages">Analog Stages</h2>
<p>这个阶段的主要功能是将连续的地面运动物理量（比如速度）转换为电压信号，并进行电压放大。因而这个阶段的 输入单位是 <code>m/s</code>，输出单位是伏特(V)。这个阶段的响应函数可以表示为</p>
<p><span class="math display">\[G(f)=S_d A_0 \frac{\prod (s-r_n)}{\prod (s-p_m)}=S_d A_o H_p(s)\]</span></p>
<p>如前所说，<span class="math inline">\(S_d\)</span> 是放大系数，<span class="math inline">\(H_p(s)\)</span> 是用零极点表示的transfer函数，这里n和m代表n个零点和m个极点。 <span class="math inline">\(A_0\)</span> 是归一化因子。</p>
<h2 id="analog-digitalconverter">Analog-Digital Converter</h2>
<p>模电转换器，将上个阶段产生的连续的电压信号转换为离散的电压信号。输入的单位是伏特V，输出单位是counts。 （不了解A/D C的细节，大概就是说在离散的时候存在一个非常小的阀值，这个值是离散信号所能识别的最小电压差。） 这个过程中，其在所有频段内振幅响应相同，也就是只存在一个放大系数，同时可能存在一个时间延迟。</p>
<h2 id="digitalstages">Digital Stages</h2>
<p>这个阶段对离散数据进行处理。这个过程包含了三个小部分：离散信号滤波，数据重采样，校正滤波引入的时间延迟。</p>
<p>离散信号滤波可以采用FIR滤波器，也可以采用IIR滤波器。多数情况下采用FIR滤波器，这意味着这个阶段只需要 考虑放大系数 <span class="math inline">\(S_d\)</span>，归一化因子 <span class="math inline">\(A_0\)</span> 不需要考虑，或者可以认为其为1.0。同样，对于数据重采样以及时间校正 也不会引入新的响应函数。</p>
<p>说明：FIR滤波器的响应函数可以近似认为其振幅恒为1，实际情况下，在Nyquist采样率附近会有5%左右的震荡。 因而当感兴趣的频率比Nyquist频率小很多时可以不必考虑FIR滤波器的响应函数。</p>
<h2 id="小结">小结</h2>
<p>综上所述，三个阶段中，第一个阶段最为复杂，需要给出放大系数 <span class="math inline">\(S_{d1}\)</span>、归一化因子 <span class="math inline">\(A_0\)</span> 以及 多个零极点；第二个阶段以及第三个阶段都只需要给出放大系数 <span class="math inline">\(S_{d2}\)</span> 和 <span class="math inline">\(S_{d3}\)</span>。时间校正由数据 采集系统自动完成（mark一下，这话说得没底气）。</p>
<p>最终得到仪器的响应函数为</p>
<p><span class="math display">\[G(f)=S_{d1} A_0 H_p(s) S_{d2} S_{d3} = S_{d0} A_o H_p(s)\]</span></p>
<p>即需要仪器在第一个阶段的零极点信息、归一化因子 <span class="math inline">\(A_o\)</span> 以及全部三个阶段的放大系数 <span class="math inline">\(S_{d0}\)</span> 即可以 完全表示地震仪的仪器响应。</p>
<h2 id="备注">备注</h2>
<ol style="list-style-type: decimal">
<li>这里描述的是一些基本物理细节，应该足够理解仪器响应。想要了解更多的细节，可以看参考中给出的SEED Reference Manual的指定页。</li>
</ol>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="http://www.fdsn.org/seed_manual/SEEDManual_V2.4.pdf" target="_blank" rel="external">SEED Reference Manual</a>, Version 2.4, August 2012, P71-P78, P151-169</li>
<li><a href="http://www.iris.edu/hq/es_course/content/2009.html" target="_blank" rel="external">EarthScope 2009 workshop</a> session2</li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-06-26：初稿。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 仪器响应 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地震学的仪器响应]]></title>
      <url>http://seisman.info/instrumental-response-in-seismology.html</url>
      <content type="html"><![CDATA[<p>地震仪观测到的地面运动记录可以表示为 <span class="math display">\[u(t)=s(t) \ast g(t) \ast i(t)\]</span></p>
<p>其中 <span class="math inline">\(s(t)\)</span> 代表震源项，<span class="math inline">\(g(t)\)</span> 代表路径效应，<span class="math inline">\(i(t)\)</span> 代表仪器响应，星号代表卷积。</p>
<p>翻译成中文就是</p>
<blockquote>
<p>地面运动记录是震源项、路径项以及仪器响应三者卷积得到的。</p>
</blockquote>
<p>四个量中：</p>
<ul>
<li><span class="math inline">\(u(t)\)</span> 是仪器记录的结果，已知；</li>
<li><span class="math inline">\(i(t)\)</span> 在仪器设计的时候会给出各种参数，已知；</li>
<li><span class="math inline">\(s(t)\)</span> 为震源项，包括震源机制、震源时间函数等，未知；</li>
<li><span class="math inline">\(g(t)\)</span> 为地球内部结构，未知。</li>
</ul>
<p>震源和结构是地震学研究的两个主要内容。因而理解仪器响应 <span class="math inline">\(i(t)\)</span> 的基本原理并 准确地去除仪器响应是研究的关键一步。这篇博文将介绍一下原始地面运动 <span class="math inline">\(s(t) \ast g(t)\)</span> 是如何卷积上仪器响应 <span class="math inline">\(i(t)\)</span> 从而变成地震记录 <span class="math inline">\(u(t)\)</span> 的。</p>
<a id="more"></a>
<h2 id="原始地面运动">原始地面运动</h2>
<p>有很多因素可以导致地面发生运动，比如地震波、长周期潮汐波、背景噪声，因而 实际的地面运动是很复杂的。下图给出了 COLA 台站记录到的持续时间为22000秒左右的 地面原始运动记录，即 <span class="math inline">\(s(t) \ast g(t)\)</span> 所对应的波形：</p>
<div class="figure">
<img src="/images/2013062301.png" alt="原始地面运动；横轴代表时间，纵轴代表振幅。">
<p class="caption">原始地面运动；横轴代表时间，纵轴代表振幅。</p>
</div>
<p>整个地面运动最明显的地方是弯弯曲曲类似正弦的波形，其周期大概是6000秒， 也就是两个小时，这是潮汐波引起的地面运动。波形的最大振幅大概是 <span class="math inline">\(2\times10^7\)</span>。 在1000秒左右有一个明显的振动信号，这是一个震级为Mw 8.3级的大地震的信号， 其振幅大概在 <span class="math inline">\(2\times10^6\)</span> 的量级，比长周期波小了一个量级。</p>
<p>这就是真实的地面运动，即便是如此大的地震，其引起的地面运动相对来说也是很小的。 这样的记录因为有太多其它类型的地面运动的干扰，因而对于地震学来说是没有用处的， 所以就需要设计合适的仪器尽量去除其它类型地面运动的干扰，也就是地震仪。</p>
<h2 id="仪器响应">仪器响应</h2>
<p>从信号处理的角度来看，仪器本质上就是一个滤波器。每个仪器在出厂时都会提供准确的 响应参数，但随着仪器的使用，可能会出现老化或其它偏差，因而仪器的实际响应参数 需要定期测定、修改。</p>
<p>图1中的波形中包含了地震波、潮汐波以及背景噪声的信息，因而从低频到高频都有信号。 而低频的潮汐波能量太强，正所谓功高盖主，压制一下还是有必要的。常见的地震仪是一个 带通滤波器，可以有效压制超高频和超低频的信息。下图给出了该台站的仪器响应，即 <span class="math inline">\(i(t)\)</span>：</p>
<div class="figure">
<img src="/images/2013062302.png" alt="仪器响应频谱图。横轴为频率，上图为振幅谱，下图为相位谱。">
<p class="caption">仪器响应频谱图。横轴为频率，上图为振幅谱，下图为相位谱。</p>
</div>
<p>从图2中振幅谱可以看出，频率在 0.02 Hz 到 8 Hz 内的信号具有相同的振幅增益（被增强），而小于 0.02 Hz、大于 8 Hz 的信号则被压制。图1中的周期为1000秒量级的信号被压制到了原来的千分之一。</p>
<h2 id="地震仪的真实记录">地震仪的真实记录</h2>
<p>图1中的原始地面运动 <span class="math inline">\(s(t) \ast g(t)\)</span> 在经过图2中的仪器响应 <span class="math inline">\(i(t)\)</span> 处理之后，即得到图3。 超低频和超高频的信号被压制，留下地震学感兴趣的频段，即前面说的 <span class="math inline">\(u(t)\)</span>：</p>
<div class="figure">
<img src="/images/2013062303.png" alt="COLA台站的地震记录">
<p class="caption">COLA台站的地震记录</p>
</div>
<p>与图1相比，长周期的正弦信号没了，地震信号被凸显出来了，最大振幅约为 <span class="math inline">\(2.4\times10^6\)</span>。 在0-300秒内，“地面”很安静，300秒左右，强烈的地震信号开始出现，持续了很长一段时间后，又恢复了平静。 这里可以很明显地看到“平静-震动-平静”的过程。这才是地震数据处理理想的波形。</p>
<h2 id="小结">小结</h2>
<p>原始的地面运动 <span class="math inline">\(s(t) \ast g(t)\)</span>（图1）中包含了震源以及介质的信息，当地面运动被仪器感知到之后， 地面运动会卷积上仪器响应 <span class="math inline">\(i(t)\)</span>（图2），最终得到地震仪的输出 <span class="math inline">\(u(t)\)</span>（图3）。</p>
<p>实际在使用地震数据的时候，我们直接从seed文件中解压得到的是类似图3的波形。由于不同台站的仪器响应 可能不同，比如有长周期、短周期、宽频带等等。为了使得波形数据具有可比性，所有台站需要将各自的仪器响应 去除（有时候需要将所有台站再卷积上某个特定的仪器响应）。</p>
<p>去仪器响应一般使用SAC的 <code>transfer</code> 命令，形式为 <code>transfer from xxx to none</code>。显然，直接 从地震仪的真实记录 <span class="math inline">\(u(t)\)</span> 中去除仪器响应 <span class="math inline">\(i(t)\)</span> 之后得到的图1（<span class="math inline">\(s(t) \ast g(t)\)</span>）对用户来说 是很糟糕的，毕竟潮汐波所在的周期不是我们地震学所关注的。所以在使用 <code>transfer</code> 命令时通常指定 <code>freq</code> 选项，给定一个地震学所关注的频率段，形如 <code>transfer from xxx to none freq 0.05 0.1 10.0 15.0</code>。 在去仪器响应时，应尽量选择一个较宽的频段，在后期数据处理时可以使用 <code>bandpass</code> 命令进行更窄的滤波。</p>
<p>最终得到的地震图如下：</p>
<div class="figure">
<img src="/images/2013062304.png" alt="理想的地震图，由原始数据经过transfer之后得到。">
<p class="caption">理想的地震图，由原始数据经过transfer之后得到。</p>
</div>
<h2 id="备注">备注</h2>
<ul>
<li>现实情况下，是很难获取地面的原始运动情况的。图1所谓的地面原始记录是通过地震记录图3直接去仪器响应 得到的。说图1是地面原始记录只是为了帮助理解，实际上其应该不是真正的地面运动，而是<strong>仪器所能感知到</strong> 的地面运动。</li>
<li>一般 <code>transfer</code> 的时候 <code>freq</code> 选项都会给一个很宽的频带，在后期处理数据的时候可能需要不断的调整 滤波频段范围，所以把 <code>transfer</code> 之后的结果做一个备份是很重要的。</li>
</ul>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2013-06-23：初稿；</li>
<li>2013-07-05：修改了备注中关于“地面原始运动记录”的说明；</li>
<li>2014-02-17：修订了一些语句；</li>
<li>2014-07-06：修订了一些描述；</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地震学基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 仪器响应 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[建站日志]]></title>
      <url>http://seisman.info/sitelog.html</url>
      <content type="html"><![CDATA[<p>本文用于记录整个博客的发展历程。</p>
<a id="more"></a>
<ul>
<li>2011-07-25：注册新浪博客，开启写博客之路；</li>
<li>2011-07-26：写下第一篇博客；</li>
<li>2013-01-03：使用 USTC LUG 提供的 WordPress 博客，停止更新新浪博客；</li>
<li>2013-06-13：USTC WordPress 博客出现致命错误，无法修复；</li>
<li>2013-06-16：于 <a href="https://www.godaddy.com" target="_blank" rel="external">GoDaddy</a> 购买独立域名 <code>seisman.info</code>，有效期为2013年6月至2018年6月；</li>
<li>2013-06-16：于 <a href="http://www.hengtian.cc" target="_blank" rel="external">衡天主机</a> 购买国外主机；</li>
<li>2013-06-16：使用 WordPress 搭建博客，主题为 suffusion；</li>
<li>2014-02-20：从 WordPress 迁移到 <a href="https://github.com/getpelican/pelican" target="_blank" rel="external">Pelican</a>，采用 <a href="https://github.com/talha131/pelican-elegant" target="_blank" rel="external">Elegant</a> 主题； 源码及内容托管在 <a href="https://github.com/seisman/seisman.info.v1" target="_blank" rel="external">GitHub</a>；</li>
<li>2014-04-30：收到第一笔捐赠￥500 RMB；</li>
<li>2014-07-17：博客同时托管在 <a href="https://gitcafe.com" target="_blank" rel="external">GitCafe</a> 和 <a href="https://github.com" target="_blank" rel="external">GitHub</a>；</li>
<li>2014-09-14：支持全文PDF导出；</li>
<li>2014-10-04：PDF托管在 <a href="http://www.qiniu.com/" target="_blank" rel="external">七牛</a>；</li>
<li>2014-11-20：支持阅读博文的历史版本</li>
<li>2016-01-09：取消博客的邮件订阅功能；</li>
<li>2016-03-04：gitcafe的个人业务已死，博客托管迁移到Coding；</li>
<li>2016-05-13：博客迁移至 <a href="https://hexo.io" target="_blank" rel="external">Hexo</a>，主题修改自 <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">NexT</a>；源码位于 <a href="https://github.com/seisman/seisman.info" target="_blank" rel="external">GitHub</a>；</li>
<li>2016-05-20：博客v2.0版正式上线</li>
<li>2016-05-27：正式启用HTTPS</li>
<li>2016-07-13：DNS 服务器由 DNSPod 迁移至 CloudFlare</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World!]]></title>
      <url>http://seisman.info/hello-world.html</url>
      <content type="html"><![CDATA[<p>Hello World！欢迎来到 SeisMan 的个人独立博客。</p>
<p>本博客成立于 2013 年，主要关注地震学的基础知识、相关软件以及一些编程语言与工具。</p>
<a id="more"></a>
<p>本博客使用基于 <a href="https://nodejs.org" target="_blank" rel="external">Node.js</a> 的 <a href="https://hexo.io" target="_blank" rel="external">Hexo</a> 作为静态博客生成器，主题修改自 <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">NexT</a>， 源文件使用 Markdown 作为标记语言。博客源文件托管在 <a href="https://github.com/seisman/seisman.info" target="_blank" rel="external">GitHub</a> 上，生成的网页文件 托管在 <a href="https://github.com/seisman/seisman.info" target="_blank" rel="external">GitHub</a> 上。在此一并对这些开源且免费的服务表示感谢。</p>
<p>首次访问本博客的读者可能对于博客以及博主的一些信息感兴趣，这些可以在 <a href="/about.html">关于</a> 页面中看到，其中还包含了博客的原则、版权以及联系方式。</p>
<p>如果觉得本博客的内容对你有用，可以进入 <a href="/donations.html">捐赠</a> 页面， 通过多种方式捐赠本博客。</p>
<p>欢迎继续关注和支持 SeisMan 博客。</p>
]]></content>
      
        <categories>
            
            <category> 胡言乱语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[404 Not Found]]></title>
      <url>http://seisman.info/404.html</url>
      <content type="html"><![CDATA[<style type="text/css">
.posts-expand .post-title {
    font-size: 35px;
    padding-bottom: 20px;
}
</style>
<header class="poster-header">
<h1 class="post-title" itemprop="name headline">
404 Not Found
</h1>
</header>
<div class="post-body" itemprop="articleBody">
<script type="text/javascript">
var max = 5;
var random = Math.floor(Math.random() * max) + 1;
var picture = random + ".jpg";
document.write('<img class=none src="/images/404/' + picture + '"width=400px>');
</script>
</div>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于]]></title>
      <url>http://seisman.info/about.html</url>
      <content type="html"><![CDATA[<h2 id="关于博主">关于博主</h2>
<p>男，90年生，据说是典型摩羯座，USTC地球物理学在读博士</p>
<h2 id="关于seisman">关于SeisMan</h2>
<p>博客名:</p>
<pre><code>SeisMan = Seismology Manual</code></pre>
<p>博主名:</p>
<pre><code>SeisMan = A Man Learning Seismology</code></pre>
<h2 id="博文原则">博文原则</h2>
<ol style="list-style-type: decimal">
<li>博客内容以原创为主，翻译和转载为辅；</li>
<li>原创内容若有参考他人文章，在文末给出参考文章链接；</li>
<li>翻译文章在文章开头给出原文链接；</li>
<li>对于转载的文章，尊重作者版权，遵守转载协议，文章内容重新排版，并简要评论或修改；</li>
</ol>
<h2 id="版权问题">版权问题</h2>
<p>本博客首发的原创作品，采用“<a href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en" target="_blank" rel="external">创作共用BY-NC-SA 4.0 国际许可证</a>”版权协议。</p>
<p>版权声明如下：</p>
<ul>
<li><strong>允许自由分享、修改博文内容；</strong>修改后博文的解释权归修改者所有</li>
<li><strong>转载需保留署名；</strong>要求在文首或文末给出原文链接及作者信息</li>
<li><strong>严禁他人进行商业性使用；</strong></li>
<li><strong>若修改了博文内容，则修改后的博文应以相同方式共享；</strong></li>
</ul>
<p>对使用者的建议如下：</p>
<ol style="list-style-type: decimal">
<li>不转载全文，避免网络文章重复，可采用网摘、引用或链接的方式；</li>
<li>若要转载，请留言说明，并在文末注明出处；</li>
</ol>
<h2 id="联系方式">联系方式</h2>
<p>学术讨论请通过邮件联系。</p>
<ul>
<li>电子邮箱: <a href="mailto:seisman.info@gmail.com" target="_blank" rel="external">seisman.info@gmail.com</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[重要博文合集]]></title>
      <url>http://seisman.info/collections.html</url>
      <content type="html"><![CDATA[<p>本页面收集了本博客中常更新的博文或系列性博文。</p>
<ol style="list-style-type: decimal">
<li><a href="/geophysicist.html">地球物理学家列表</a></li>
<li><a href="/geo-software.html">地球物理相关软件</a></li>
<li><a href="/sac-manual.html">SAC参考手册</a></li>
<li><a href="/global-relief-models.html">全球地形起伏数据总结</a></li>
<li><a href="/personal-preferences.html">个人偏好列表</a></li>
<li><a href="/hinet-things.html">Hi-net系列博文</a></li>
<li><a href="/linux-environment-for-seismology-research.html">用CentOS 7打造合适的科研环境</a></li>
<li><a href="/gmt4-style-guide.html">GMT4脚本风格指南</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[捐赠]]></title>
      <url>http://seisman.info/donations.html</url>
      <content type="html"><![CDATA[<p>如果您觉得本博客的原创博文或我维护的开源项目对您有用，可以考虑通过捐赠来支持本博客。</p>
<h2 id="免责声明">免责声明</h2>
<ol style="list-style-type: decimal">
<li>本博客致力于知识和技术分享，不以盈利为目的，是个人维护的独立博客；</li>
<li>本人不对本博客的更新和维护周期做任何承诺；</li>
<li>捐赠者的捐赠行为完全自愿，本人与各捐赠者之间不构成购买或雇佣关系；</li>
<li>收到的捐赠款项由本人完全支配，本人没有义务对款项的用途做解释；</li>
<li>除非特别注明，本人会在该页面列出捐赠者的姓名、捐赠日期以及捐赠金额，并承诺不向任何组织或个人透漏其他身份信息；</li>
</ol>
<h2 id="捐赠方式">捐赠方式</h2>
<p>对于无独立经济来源的学生而言，不推荐进行大额捐赠。</p>
<table>
<thead>
<tr class="header">
<th align="center">微信支付</th>
<th align="center">支付宝</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center"><img src="/images/wechatpay.png" alt="微信支付"></td>
<td align="center"><img src="/images/alipay.png" alt="支付宝"></td>
</tr>
</tbody>
</table>
<p>PS：支付宝捐赠的最低限额为￥5 RMB，以免与偶尔的淘宝返现混淆，低于￥5 RMB捐赠都将被视为淘宝返现。微信支付无最低额限制。</p>
<h2 id="捐赠名单">捐赠名单</h2>
<p>本博客自开通捐赠以来收到的捐赠款项在下表列出。捐赠者信息由支付宝或微信提供，若您不希望列出自己的姓名，请在捐赠时说明或在捐赠后邮件联系。</p>
<p>微信支付不再提供支付者信息，故而姓名处只能填写“微信用户”。如果你想列出自己的名字，请在转账时填写备注或邮件告知。</p>
<h3 id="年">2017年</h3>
<table>
<thead>
<tr class="header">
<th align="left">日期</th>
<th align="left">姓名</th>
<th align="left">金额</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">2017-04-19</td>
<td align="left">微信用户</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="even">
<td align="left">2017-04-18</td>
<td align="left">微信用户</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="odd">
<td align="left">2017-04-13</td>
<td align="left">崔清辉</td>
<td align="left">￥50 RMB</td>
</tr>
<tr class="even">
<td align="left">2017-04-11</td>
<td align="left">翟秋实</td>
<td align="left">￥200 RMB</td>
</tr>
<tr class="odd">
<td align="left">2017-04-10</td>
<td align="left">微信用户</td>
<td align="left">￥3.14 RMB</td>
</tr>
<tr class="even">
<td align="left">2017-04-02</td>
<td align="left">刘渊博</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="odd">
<td align="left">2017-03-27</td>
<td align="left">浮安</td>
<td align="left">￥6.66 RMB</td>
</tr>
<tr class="even">
<td align="left">2017-03-20</td>
<td align="left">微信用户</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="odd">
<td align="left">2017-03-19</td>
<td align="left">微信用户</td>
<td align="left">￥6.66 RMB</td>
</tr>
<tr class="even">
<td align="left">2017-03-14</td>
<td align="left">微信用户</td>
<td align="left">￥66 RMB</td>
</tr>
<tr class="odd">
<td align="left">2017-03-14</td>
<td align="left">微信用户</td>
<td align="left">￥66 RMB</td>
</tr>
<tr class="even">
<td align="left">2017-03-09</td>
<td align="left">微信用户</td>
<td align="left">￥6.66 RMB</td>
</tr>
<tr class="odd">
<td align="left">2017-03-06</td>
<td align="left">微信用户</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="even">
<td align="left">2017-03-03</td>
<td align="left">MeteoBoy</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="odd">
<td align="left">2017-02-25</td>
<td align="left">丹鹤</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="even">
<td align="left">2017-02-13</td>
<td align="left">微信用户</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="odd">
<td align="left">2017-02-10</td>
<td align="left">微信用户</td>
<td align="left">￥6.66 RMB</td>
</tr>
<tr class="even">
<td align="left">2017-02-05</td>
<td align="left">微信用户</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="odd">
<td align="left">2017-01-27</td>
<td align="left">微信用户</td>
<td align="left">￥6.6 RMB</td>
</tr>
<tr class="even">
<td align="left">2017-01-21</td>
<td align="left">微信用户</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="odd">
<td align="left">2017-01-16</td>
<td align="left">唐有彩</td>
<td align="left">￥66</td>
</tr>
<tr class="even">
<td align="left">2017-01-11</td>
<td align="left">微信用户</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="odd">
<td align="left">2017-01-09</td>
<td align="left">微信用户</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="even">
<td align="left">2017-01-08</td>
<td align="left">微信用户</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="odd">
<td align="left">2017-01-05</td>
<td align="left">娜</td>
<td align="left">￥100 RMB</td>
</tr>
</tbody>
</table>
<h3 id="年-1">2016年</h3>
<p>2016年共收到捐赠35笔，共计2277.77元。</p>
<table>
<thead>
<tr class="header">
<th align="left">日期</th>
<th align="left">姓名</th>
<th align="left">金额</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">2016-12-26</td>
<td align="left">微信用户</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-12-25</td>
<td align="left">微信用户</td>
<td align="left">￥1 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-12-10</td>
<td align="left">王亮</td>
<td align="left">￥400 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-11-11</td>
<td align="left">匿名</td>
<td align="left">￥18 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-11-08</td>
<td align="left">贝贝</td>
<td align="left">￥50 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-10-07</td>
<td align="left">亭亭玉立</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-10-03</td>
<td align="left">匿名</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-09-23</td>
<td align="left">匿名</td>
<td align="left">￥6.66 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-09-23</td>
<td align="left">匿名</td>
<td align="left">￥0.99 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-09-19</td>
<td align="left">匿名</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-09-16</td>
<td align="left">匿名</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-08-30</td>
<td align="left">匿名</td>
<td align="left">￥8.8 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-08-26</td>
<td align="left">匿名</td>
<td align="left">￥1 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-08-05</td>
<td align="left">匿名</td>
<td align="left">￥119 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-07-16</td>
<td align="left">明德</td>
<td align="left">￥20 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-07-15</td>
<td align="left">土豆泥</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-07-13</td>
<td align="left">荆旭</td>
<td align="left">￥35 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-07-05</td>
<td align="left">萍</td>
<td align="left">￥200 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-06-21</td>
<td align="left">雪园</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-06-15</td>
<td align="left">clover</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-06-11</td>
<td align="left">禽兽。</td>
<td align="left">￥6.66 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-06-04</td>
<td align="left">水怪</td>
<td align="left">￥19 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-05-25</td>
<td align="left">武澄泷</td>
<td align="left">￥50 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-05-25</td>
<td align="left">弥坚</td>
<td align="left">￥20 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-05-25</td>
<td align="left">立方</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-05-23</td>
<td align="left">宋超</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-05-22</td>
<td align="left">贝贝</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-05-20</td>
<td align="left">维</td>
<td align="left">￥6.66 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-05-06</td>
<td align="left">大洲</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-04-16</td>
<td align="left">萧.HY</td>
<td align="left">￥25 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-04-09</td>
<td align="left">匿名</td>
<td align="left">￥500 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-03-22</td>
<td align="left">晓山</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-03-22</td>
<td align="left">CxLiu</td>
<td align="left">￥200 RMB</td>
</tr>
<tr class="even">
<td align="left">2016-02-17</td>
<td align="left">李晨玉</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="odd">
<td align="left">2016-01-25</td>
<td align="left">叶凡</td>
<td align="left">￥200 RMB</td>
</tr>
</tbody>
</table>
<h3 id="年-2">2015年</h3>
<p>2015年收到捐赠42笔，共计4342.18元。</p>
<table>
<thead>
<tr class="header">
<th align="left">日期</th>
<th align="left">姓名</th>
<th align="left">金额</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">2015-12-15</td>
<td align="left">baogege</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-12-09</td>
<td align="left">Zetary</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-12-04</td>
<td align="left">alameda</td>
<td align="left">￥50 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-12-03</td>
<td align="left">水叶丽芳</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-11-27</td>
<td align="left">Hua</td>
<td align="left">￥50.1 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-11-24</td>
<td align="left">贝贝</td>
<td align="left">￥50 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-11-20</td>
<td align="left">小强</td>
<td align="left">￥15 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-11-18</td>
<td align="left">Dooooom</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-11-15</td>
<td align="left">Dreamchaser</td>
<td align="left">￥50 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-11-14</td>
<td align="left">匿名</td>
<td align="left">￥200 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-11-06</td>
<td align="left">demonelite</td>
<td align="left">￥20 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-11-06</td>
<td align="left">匿名</td>
<td align="left">￥800 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-10-24</td>
<td align="left"><a href="mailto:she**@163.com" target="_blank" rel="external">she**@163.com</a></td>
<td align="left">￥50 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-10-22</td>
<td align="left">王亮</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-10-15</td>
<td align="left">梦华</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-10-13</td>
<td align="left">YINSHUAI</td>
<td align="left">￥20 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-10-08</td>
<td align="left">邓山泉</td>
<td align="left">￥10.08 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-09-25</td>
<td align="left">王芳</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-09-23</td>
<td align="left">振宇</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-09-23</td>
<td align="left">婧</td>
<td align="left">￥50 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-09-17</td>
<td align="left">www</td>
<td align="left">￥6 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-09-17</td>
<td align="left">匿名</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-09-17</td>
<td align="left">匿名</td>
<td align="left">￥500 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-09-16</td>
<td align="left">Churchill</td>
<td align="left">￥20 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-08-14</td>
<td align="left">Jairy Wang</td>
<td align="left">￥200 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-06-17</td>
<td align="left">饭饭</td>
<td align="left">￥155 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-06-10</td>
<td align="left">匿名</td>
<td align="left">￥60 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-06-04</td>
<td align="left">邓阳凡</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-06-01</td>
<td align="left">乌龟小骑士</td>
<td align="left">￥200 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-05-31</td>
<td align="left">匿名</td>
<td align="left">￥500 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-05-21</td>
<td align="left">王亮</td>
<td align="left">￥500 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-05-12</td>
<td align="left">JL</td>
<td align="left">￥50 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-05-01</td>
<td align="left">陈飞</td>
<td align="left">￥50 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-04-17</td>
<td align="left">姜宇</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-04-16</td>
<td align="left">李雪垒</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-04-04</td>
<td align="left">王桥</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-04-01</td>
<td align="left">陈彦阳</td>
<td align="left">￥50 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-02-22</td>
<td align="left">沙海龙</td>
<td align="left">￥20 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-02-04</td>
<td align="left">杨凯</td>
<td align="left">￥1 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-01-28</td>
<td align="left">柯乃琛</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="odd">
<td align="left">2015-01-27</td>
<td align="left">邓阳凡</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="even">
<td align="left">2015-01-26</td>
<td align="left">董兴朋</td>
<td align="left">￥100 RMB</td>
</tr>
</tbody>
</table>
<h3 id="年-3">2014年</h3>
<p>2014年收到捐赠25笔，共计2352元。</p>
<table>
<thead>
<tr class="header">
<th align="left">日期</th>
<th align="left">姓名</th>
<th align="left">金额</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">2014-12-17</td>
<td align="left">魏芝</td>
<td align="left">￥25 RMB</td>
</tr>
<tr class="even">
<td align="left">2014-12-15</td>
<td align="left">MAG</td>
<td align="left">￥20 RMB</td>
</tr>
<tr class="odd">
<td align="left">2014-11-18</td>
<td align="left">徐宗博</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="even">
<td align="left">2014-11-15</td>
<td align="left">陈飞</td>
<td align="left">￥7 RMB</td>
</tr>
<tr class="odd">
<td align="left">2014-11-14</td>
<td align="left">胡景</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="even">
<td align="left">2014-11-12</td>
<td align="left">颜文华</td>
<td align="left">￥6 RMB</td>
</tr>
<tr class="odd">
<td align="left">2014-11-10</td>
<td align="left">Mars</td>
<td align="left">￥20 RMB</td>
</tr>
<tr class="even">
<td align="left">2014-11-02</td>
<td align="left">罗松</td>
<td align="left">￥8 RMB</td>
</tr>
<tr class="odd">
<td align="left">2014-10-24</td>
<td align="left">赵韬</td>
<td align="left">￥500 RMB</td>
</tr>
<tr class="even">
<td align="left">2014-10-11</td>
<td align="left">陈健</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="odd">
<td align="left">2014-10-04</td>
<td align="left">刘吉平</td>
<td align="left">￥200 RMB</td>
</tr>
<tr class="even">
<td align="left">2014-09-28</td>
<td align="left">张金玉</td>
<td align="left">￥3 RMB</td>
</tr>
<tr class="odd">
<td align="left">2014-09-11</td>
<td align="left">刘xx</td>
<td align="left">￥200 RMB</td>
</tr>
<tr class="even">
<td align="left">2014-09-02</td>
<td align="left">陈x</td>
<td align="left">￥200 RMB</td>
</tr>
<tr class="odd">
<td align="left">2014-08-10</td>
<td align="left">刘xx</td>
<td align="left">￥101 RMB</td>
</tr>
<tr class="even">
<td align="left">2014-07-25</td>
<td align="left">陈传绪</td>
<td align="left">￥66 RMB</td>
</tr>
<tr class="odd">
<td align="left">2014-07-20</td>
<td align="left">李正波</td>
<td align="left">￥1 RMB</td>
</tr>
<tr class="even">
<td align="left">2014-07-10</td>
<td align="left">马庆珍</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="odd">
<td align="left">2014-06-02</td>
<td align="left">赵文舟</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="even">
<td align="left">2014-05-27</td>
<td align="left">沈超</td>
<td align="left">￥5 RMB</td>
</tr>
<tr class="odd">
<td align="left">2014-05-08</td>
<td align="left">赵文舟</td>
<td align="left">￥30 RMB</td>
</tr>
<tr class="even">
<td align="left">2014-05-08</td>
<td align="left">吴树成</td>
<td align="left">￥30 RMB</td>
</tr>
<tr class="odd">
<td align="left">2014-05-03</td>
<td align="left">黄乐乐</td>
<td align="left">￥10 RMB</td>
</tr>
<tr class="even">
<td align="left">2014-05-03</td>
<td align="left">董兴朋</td>
<td align="left">￥100 RMB</td>
</tr>
<tr class="odd">
<td align="left">2014-04-30</td>
<td align="left">huichen</td>
<td align="left">￥500 RMB</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[科研收藏夹]]></title>
      <url>http://seisman.info/links.html</url>
      <content type="html"><![CDATA[<p>本页面列出一些常用链接。鼠标在链接上悬停可看到更详细的名称。</p>
<ul>
<li><a href="/geophysicist.html">地球物理学家列表</a></li>
<li><a href="/geo-software.html">地球物理相关软件列表</a></li>
</ul>
<h2 id="机构">机构</h2>
<ul>
<li><a href="http://www.iris.edu/hq/" title="Incorporated Research Institutions for Seismology" target="_blank" rel="external">IRIS</a></li>
<li><a href="http://www.orfeus-eu.org/index.html" title="Observatories and Research Facilities for European Seismology" target="_blank" rel="external">ORFEUS</a></li>
<li><a href="http://sites.agu.org/" title="American Geophysical Union" target="_blank" rel="external">AGU</a></li>
<li><a href="http://www.isc.ac.uk/" title="International Seismological Centre" target="_blank" rel="external">ISC</a></li>
</ul>
<h2 id="地震事件目录">地震事件目录</h2>
<h3 id="全球地震目录">全球地震目录</h3>
<ul>
<li><a href="http://service.iris.edu/fdsnws/event/1/" target="_blank" rel="external">IRIS web service</a></li>
<li><a href="http://www.isc.ac.uk/iscbulletin/search/catalogue/" target="_blank" rel="external">ISC Bulletin</a> | <a href="http://www.isc.ac.uk/fdsnws/event/1/" target="_blank" rel="external">ISC web service</a></li>
<li><a href="http://earthquake.usgs.gov/data/pde.php" target="_blank" rel="external">PDE</a> | <a href="http://earthquake.usgs.gov/fdsnws/event/1/" target="_blank" rel="external">USGS web service</a></li>
</ul>
<h3 id="区域地震目录">区域地震目录</h3>
<ul>
<li><a href="http://data.earthquake.cn/data/data/history_query.jsp" target="_blank" rel="external">中国历史地震目录</a></li>
<li><a href="http://data.earthquake.cn/data/datashare_tyml_query.jsp" target="_blank" rel="external">中国台网统一地震目录</a></li>
<li><a href="http://www.ncedc.org/anss/" target="_blank" rel="external">ANSS Catalog</a></li>
<li><a href="http://www.ncedc.org/ncedc/catalogs.html" target="_blank" rel="external">NCEC Catalog</a></li>
<li><a href="http://earthquake.usgs.gov/earthquakes/search/" target="_blank" rel="external">ANSS Comprehensive Catalog</a></li>
<li><a href="http://www.fnet.bosai.go.jp/event/search.php?LANG=en" target="_blank" rel="external">NIED Earthquake Mechanism Search</a></li>
<li><a href="http://www.isc.ac.uk/ehbbulletin/" target="_blank" rel="external">EHB Bulletin</a></li>
<li><a href="http://service.scedc.caltech.edu/eq-catalogs/date_mag_loc.php" target="_blank" rel="external">SCSN catalog</a></li>
<li><a href="http://www.data.jma.go.jp/svd/eqev/data/bulletin/hypo_e.html" target="_blank" rel="external">JMA Unified Hypocenter Catalog</a></li>
<li><a href="https://hinetwww11.bosai.go.jp/auth/JMA/jmalist.php" target="_blank" rel="external">JMA Preliminary Unified Hypocenter Catalog</a></li>
<li><a href="http://www.ga.gov.au/earthquakes/searchQuake.do" target="_blank" rel="external">澳大利亚</a></li>
</ul>
<h2 id="震源机制">震源机制</h2>
<ul>
<li><a href="http://www.globalcmt.org/" target="_blank" rel="external">Global CMT</a></li>
<li><a href="http://www.isc.ac.uk/iscbulletin/search/fmechanisms/" target="_blank" rel="external">ISC Focal Mechanism</a></li>
<li><a href="http://www.ncedc.org/ncedc/mt.html" title="University of California Berkeley Moment Tensor Catalog" target="_blank" rel="external">UCB Moment Tensor Catalog</a></li>
<li><a href="http://www.fnet.bosai.go.jp/event/joho.php?LANG=en" target="_blank" rel="external">NIED CMT solutions</a></li>
<li><a href="http://service.scedc.caltech.edu/eq-catalogs/CMTsearch.php" target="_blank" rel="external">SCSN Moment Tensor Catalog</a></li>
<li><a href="http://www.data.jma.go.jp/svd/eqev/data/bulletin/cmt_e.html" target="_blank" rel="external">JMA Focal Mechanism Catalog</a></li>
<li><a href="http://www.data.jma.go.jp/svd/eqev/data/bulletin/mech_e.html" target="_blank" rel="external">JMA Nodal Plane Solution</a></li>
<li><a href="http://cnt.rm.ingv.it/en/tdmt" target="_blank" rel="external">意大利周边震源机制</a></li>
<li><a href="http://tecws.earth.sinica.edu.tw/BATS/cmtbyform.php" target="_blank" rel="external">台湾震源机制解</a></li>
</ul>
<h2 id="走时震相数据">走时/震相数据</h2>
<ul>
<li><a href="http://www.isc.ac.uk/iscbulletin/search/arrivals/" target="_blank" rel="external">ISC Arrival Time Data</a></li>
<li><a href="http://www.data.jma.go.jp/svd/eqev/data/bulletin/deck_e.html" target="_blank" rel="external">JMA Arrival Time Data</a></li>
<li><a href="http://data.earthquake.cn/data/datashare_weekphase_query.jsp" target="_blank" rel="external">中国台网震相数据</a></li>
<li><a href="http://data.earthquake.cn/data/csn24_phase_p001_new.jsp" target="_blank" rel="external">中国国家台网震相数据</a></li>
</ul>
<h2 id="地震台网波形数据">地震台网/波形数据</h2>
<ul>
<li><a href="http://www.hinet.bosai.go.jp/" target="_blank" rel="external">NIED Hi-net</a></li>
<li><a href="http://www.fnet.bosai.go.jp/" target="_blank" rel="external">NIED F-net</a></li>
<li><a href="http://www.kyoshin.bosai.go.jp/" target="_blank" rel="external">NIED K-net, KiK-net</a></li>
<li><a href="http://jarray.eri.u-tokyo.ac.jp/" target="_blank" rel="external">Jarray</a></li>
<li><a href="http://www.ncedc.org/" target="_blank" rel="external">Northern California Earthquake Data Center</a></li>
<li><a href="http://www.scsn.org" target="_blank" rel="external">Southern California Seismic Network</a></li>
<li><a href="http://scedc.caltech.edu/" target="_blank" rel="external">Southern California Seismic Network at Caltech</a></li>
<li><a href="http://pnsn.org/" target="_blank" rel="external">Pacific Northwest Seismic Network</a></li>
<li><a href="http://www.aeic.alaska.edu/" target="_blank" rel="external">Alaska Earthquake Information Center</a></li>
<li><a href="http://www.earthquakescanada.nrcan.gc.ca/stndon/CNSN-RNSC/index-eng.php" target="_blank" rel="external">Canadian National Seismic Network</a></li>
<li><a href="http://www.chinarraydmc.org/" target="_blank" rel="external">中国地震科学探测台站数据中心</a></li>
<li><a href="http://www.seisdmc.ac.cn/" target="_blank" rel="external">国家测震台网数据备份中心</a></li>
</ul>
<h2 id="研究小组">研究小组</h2>
<ul>
<li><a href="http://seismology.harvard.edu/" target="_blank" rel="external">Harvard Seismology</a></li>
<li><a href="http://www.gseis.rice.edu/" target="_blank" rel="external">Global Seismology Group at Rice University</a></li>
<li><a href="http://seismo.berkeley.edu/wiki_br/Main_Page" target="_blank" rel="external">Berkeley Global Seismology</a></li>
</ul>
<h2 id="软件库">软件库</h2>
<ul>
<li><a href="https://seiscode.iris.washington.edu/" target="_blank" rel="external">IRIS seiscode</a></li>
<li><a href="http://www.orfeus-eu.org/software.html" target="_blank" rel="external">ORFEUS Seismological Software Library</a></li>
<li><a href="http://rses.anu.edu.au/seismology/index.php?p=software" target="_blank" rel="external">S&amp;MG Research Group Software</a></li>
<li><a href="https://geodynamics.org/cig/software/" target="_blank" rel="external">CIG Software</a></li>
<li><a href="http://earthquake.usgs.gov/research/software/" target="_blank" rel="external">USGS Software</a></li>
</ul>
<h2 id="地球物理数据">地球物理数据</h2>
<ul>
<li><a href="http://ds.iris.edu/ds/products/ears/" target="_blank" rel="external">EARS</a>: 美国地区接收函数数据库</li>
<li><a href="http://stephanerondenay.com/glimermap/" target="_blank" rel="external">GLImER</a>: 全球接收函数库</li>
<li><a href="http://ds.iris.edu/spud/sourcetimefunction" target="_blank" rel="external">Source Time Function</a></li>
<li><a href="http://ds.iris.edu/ds/products/emc/" target="_blank" rel="external">Earth Model</a></li>
<li><a href="http://earthquake.usgs.gov/data/slab/" target="_blank" rel="external">Slab Model for Subduction Zones</a></li>
<li><a href="https://www.ngdc.noaa.gov/hazard/volcano.shtml" target="_blank" rel="external">Volcanos Datas</a></li>
<li><a href="http://splitting.gm.univ-montp2.fr/DB/index.html" target="_blank" rel="external">Shear-wave splitting database</a></li>
<li><a href="http://www.geo.uni-tuebingen.de/projekte/openfaults/" target="_blank" rel="external">Central Asia Fault Database</a></li>
<li><a href="http://rses.anu.edu.au/seismology/AuSREM/index.php" target="_blank" rel="external">AuSREM</a>: 澳大利亚区域模型</li>
</ul>
<h2 id="其他">其他</h2>
<ul>
<li><a href="http://www.iris.edu/ds/nodes/dmc/data/request-status/" target="_blank" rel="external">IRIS Data Request Status</a></li>
<li><a href="http://www.isc.ac.uk/standards/phases/" target="_blank" rel="external">IASPEI standard phase list</a></li>
<li><a href="http://soliton.vm.bytemark.co.uk/pub/cpt-city/" target="_blank" rel="external">GMT cpt</a></li>
<li><a href="http://www.fdsn.org/networks/" target="_blank" rel="external">FDSN Network Codes</a>: 在 FDSN 注册的永久和临时台网列表</li>
<li><a href="http://www.fdsn.org/webservices/datacenters/" target="_blank" rel="external">Data Centers Supporting FDSN Web Services</a>: 支持 FDSN Web Service 的数据中心</li>
<li><a href="http://ds.iris.edu/mda/" target="_blank" rel="external">IRIS DMC MetaData Aggregator</a>: 永久、临时、虚拟台网列表</li>
<li><a href="http://ds.iris.edu/gmap/" target="_blank" rel="external">IRIS DMC Google Map Service</a></li>
<li><a href="https://developers.google.com/maps/get-started/" target="_blank" rel="external">Google Maps API</a></li>
<li><a href="http://service.iris.edu/irisws/syngine/1/" target="_blank" rel="external">IRIS Synthetics Engine</a></li>
<li><a href="http://ds.iris.edu/message-center/" target="_blank" rel="external">IRIS Message Center</a></li>
<li><a href="http://ds.iris.edu/seismo/" target="_blank" rel="external">Scanned Seismograms from Historical Earthquakes</a></li>
<li><a href="http://www.ngac.org.cn/Distribute/List" target="_blank" rel="external">国家地质资料数据中心</a></li>
<li><a href="http://portal.onegeology.org/OnegeologyGlobal/" target="_blank" rel="external">全球地质资料数据中心</a></li>
<li><a href="http://www.fdsn.org/webservices/datacenters/" target="_blank" rel="external">Data Center</a>: 支持 FDSN Web Services 的地震数据中心</li>
<li><a href="http://ds.iris.edu/ds/nodes/dmc/tools/data_channels/" target="_blank" rel="external">Channel Naming</a>: 通道名的含义</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>http://seisman.info/markdown2pdf.html</url>
      <content type="html"><![CDATA[<h2 id="将-markdown-转换为-pdf">将 markdown 转换为 PDF</h2>
<p>利用 pandoc 和 TeXLive 2016 将 markdown 转换为 PDF。</p>
<p>由于旧版本的 pandoc 存在 bug（例如 CentOS 7 自带的 1.12.3），因而需要自己 下载安装最新版本的 pandoc。</p>
<ol style="list-style-type: decimal">
<li>到 <a href="https://github.com/jgm/pandoc/releases/latest" target="_blank" rel="external">pandoc 下载页面</a> 下载 deb 安装包</li>
<li>对于Ubuntu用户，直接 <code>sudo dpkg -i pandoc-xxx-amd64.deb</code></li>
<li><p>对于CentOS用户，直接 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 使用新版本替换旧版本</span></div><div class="line">$ ar p pandoc-xxx-amd64.deb data.tar.gz | sudo tar xvz --strip-components 2 -C /usr</div><div class="line"><span class="comment"># 检查版本</span></div><div class="line">$ pandoc -v</div></pre></td></tr></table></figure></p></li>
<li>安装依赖 <code>pip install pandocfilters</code></li>
<li>执行脚本实现转换 <code>python makepdf.py _posts/*.md</code>，生成的PDF位于 <code>_pdfs</code> 目录</li>
<li><p>执行 <code>qshell qupload qiniu-conf.json</code> 将PDF同步至七牛（本步骤一般用户无法执行）</p></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>http://seisman.info/qiniu-conf.json</url>
      <content type="html"><![CDATA[{"src_dir":"/home/seisman/Gits/seisman.info/source/_pdfs","access_key":"xxxxxxxxxx","secret_key":"xxxxxxxxxx","bucket":"seisman","ignore_dir":false,"key_prefix":"pdfs/","overwrite":true,"check_exists":true,"check_hash":true,"check_size":false,"skip_file_prefixes":".git,bin","skip_fixed_strings":".svn","skip_suffixes":".DS_Store,.exe","rescan_local":true,"log_level":"warn"}]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[categories]]></title>
      <url>http://seisman.info/categories/index.html</url>
      <content type="html"><![CDATA[
]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>http://seisman.info/images/manifest.json</url>
      <content type="html"><![CDATA[{"name":"SeisMan","icons":[{"src":"/images/android-chrome-36x36.png?v=2.0","sizes":"36x36","type":"image/png","density":0.75},{"src":"/images/android-chrome-48x48.png?v=2.0","sizes":"48x48","type":"image/png","density":1},{"src":"/images/android-chrome-72x72.png?v=2.0","sizes":"72x72","type":"image/png","density":1.5},{"src":"/images/android-chrome-96x96.png?v=2.0","sizes":"96x96","type":"image/png","density":2},{"src":"/images/android-chrome-144x144.png?v=2.0","sizes":"144x144","type":"image/png","density":3},{"src":"/images/android-chrome-192x192.png?v=2.0","sizes":"192x192","type":"image/png","density":4}]}]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[tags]]></title>
      <url>http://seisman.info/tags/index.html</url>
      <content type="html"><![CDATA[
]]></content>
    </entry>
    
  
</search>
